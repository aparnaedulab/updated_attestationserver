var path = require('path');
var root_path = path.dirname(require.main.filename);
var models  = require(root_path+'/models');
const express = require('express');
var router  = express.Router();
const middlewares = require('../middlewares');
var fs = require('fs');
const multer = require('multer');
var pdfreader = require('pdfreader');
var constant = require(root_path+'/config/constant');
var constants = require('../config/constant');

var moment=require('moment');
var models = require("../models");
var self_PDF = require(root_path+'/utils/self_letters');
var urlencode = require('urlencode');
var request = require('request');
var converter = require('number-to-words');
var converter_roman = require('roman-numbers');
var sequelize = require("sequelize");
const { filename } = require('winston-daily-rotate-file');
const Op = sequelize.Op;
var AWS = require("aws-sdk");
var fileName;
const fileUpload = require('express-fileupload');
const { forEachOf } = require('async');
const { lodash } = require('consolidate');
const functions = require('../utils/function');
var imageTmpPath = 'public/upload/tmp/';

var upload = multer({
	dest: imageTmpPath
});
var XLSX = require('xlsx');
var async = require('async');
var json2xls = require('json2xls');
const { lineGap } = require('pdfkit');

// router.use(fileUpload({
//     createParentPath: true
//   }))

// router.get('/getname', middlewares.getUserInfo, function (req, res) {
// 	console.log("inside getname");
// 	var data =[];
// 	var check= [];

// 		const s3 = new AWS.S3({
// 		endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 		accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 		secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 		s3BucketEndpoint: true,
// 	});
// 	s3.listObjects({
// 		Bucket: "muattestation",
// 	}, function (err, data) {
// 		if (err) {
// 			res.json({status :500})
// 		} else {
// 			console.log('in else')
// 			// Return the list ("Contents") as JSON
// 			data = data.Contents
// 			// res.json({status :200,
//         //     data : data.Contents})
// 			data.forEach(function (de){
// 					if(de.ETag.includes('6ebe3ee0e5c6fc6c701b81a7e734557d')){
// 						console.log("dattaa==>"+ de.Key);
// 					}
// 				})
// 		}
// 	})
// })
// router.post('/createDeliverytype',middlewares.getUserInfo,middlewares.getUserEducationalInfo,  function(req,res){
// 	console.log('/createDeliverytype')
// 	var refno = req.body.refno;
// 	var address = req.body.address;
// 	var type = req.body.type;

// 	if(email){
// 		emailArr = email.split(', ');
// 		if(emailArr.length  > 1){
// 			anotherEmailArr = emailArr.shift();
// 			anotherEmail = emailArr.toString();
// 		}else{
// 			anotherEmailArr = email;
// 			anotherEmail = null;
// 		}
// 	}else{
// 		emailArr = null;
// 		anotherEmailArr = null;
// 		anotherEmail = null;
// 	}

// 	if(req.User.current_location == "WITHIN"){
// 		if(type == 'physicalquick'){
// 			amount  = 536 * req.userEducational + 100 + 10
// 		}else if(type == 'physicalnormal'){
// 			amount  = 536 * req.userEducational + 100;
// 		}else if(type == 'digitalquick'){
// 			amount  = 536 * req.userEducational + 10;
// 		}else if (type == 'digitalnormal'){
// 			amount  = 536 * req.userEducational;
// 		}
// 	}else if(req.User.current_location == "OUTSIDE"){
// 		if(req.User.id =='54944'){
//             amount = '100';
//         }else if(req.User.id =='54946'){
//             amount = '200';
//         }else if(req.User.id =='54947'){
//             amount = '300';
//         }else if(req.User.id =='54948'){
//             amount = '400';
//         }else if(req.User.id =='54949'){
//             amount = '500';
//         }else if(req.User.id =='54950'){
//             amount = '600';
//         }else if(req.User.id =='54951'){
//             amount = '700';
//         }else if(req.User.id =='54952'){
//             amount = '800';
//         }else if(req.User.id =='54953'){
//             amount = '900';
//         }else if(req.User.id =='54954'){
//             amount = '1000';
//         }else if(req.User.id =='54955'){
//             amount = '1100';
//         }else if(req.User.id =='54956'){
//             amount = '1200';
//         }else if(req.User.id =='54957'){
//             amount = '1300';
//         }else if(req.User.id =='54958'){
//             amount = '1400';
//         }else if(req.User.id =='54959'){
//             amount = '1500';
//         }else if(req.User.id =='54961'){
//             amount = '1600';
//         }else if(req.User.id =='54962'){
//             amount = '1700';
//         }else if(req.User.id =='54963'){
//             amount = '1800';
//         }else if(req.User.id =='54964'){
//             amount = '1900';
//         }else if(req.User.id =='54966'){
//             amount = '2000';
//         }else{
// 			if(type == 'physicalquick'){
// 				amount  = 7718 * req.userEducational + 100 + 10
// 			}else if(type == 'physicalnormal'){
// 				amount  = 7718 * req.userEducational + 100;
// 			}else if(type == 'digitalquick'){
// 				amount  = 7718 * req.userEducational + 10;
// 			}else if (type == 'digitalnormal'){
// 				amount  = 7718 * req.userEducational;
// 			}
//         }
// 	}
//     models.Institution_details.create({


//     }).then(function(data){
//         if(data){
// 			models.Cart.create({
// 				university_name : data.university_name,
// 				email : data.email,
// 				fees : amount,
// 				user_id : user_id,
// 				institute_id : data.id,
// 			}).then(function(cart_created){
// 				res.json({
// 					status:200,
// 					message:"data is inserted"
// 				})
// 			});
//         }else{
//             res.json({
//                 status:400,
//                 message:"data is not inserted"
//             })
//         }
//     })
// })
router.get('/getInstituteData', middlewares.getUserInfo, function (req, res) {
	console.log('/getInstituteData');
	var user_id = req.User.id;
	var data = [];
	var status ;
    if(req.query.editFlag == 'true'){
		models.Institution_details.findAll({
			where:{
				user_id : user_id,
				app_id : req.query.app_id,source : 'guattestation'
			}
		}) .then(function(allDetails){
			if(allDetails.length > 0){
				allDetails.forEach(function(detail){
					var email;
					if(detail.OtherEmail)
						email = detail.email + ', ' + detail.OtherEmail;
					else
					   email = detail.email;
					if(detail.app_id == null){
						status = 'not_applied';
					}else{
						status = 'applied';
					}
					var referenceNo;
					if(detail.type == 'study')
						referenceNo = detail.studyrefno ? detail.studyrefno : 'Not Added';
					if(detail.type == 'employment')
						referenceNo = detail.emprefno  ? detail.emprefno : 'Not Added';;
					if(detail.type == 'IQAS')
						referenceNo = detail.iqasno  ? detail.iqasno : 'Not Added';;
					if(detail.type == 'CES')
						referenceNo = detail.cesno  ? detail.cesno : 'Not Added';;
					if(detail.type == 'ICAS')
						referenceNo = detail.icasno  ? detail.icasno : 'Not Added';;
					if(detail.type == 'visa')
						referenceNo = detail.visarefno  ? detail.visarefno : 'Not Added';;
					if(detail.type == 'MYIEE')
						referenceNo = detail.myieeno  ? detail.myieeno : 'Not Added';;
					if(detail.type == 'ICES')
						referenceNo = detail.icesno  ? detail.icesno : 'Not Added';;
					if(detail.type == 'NASBA')
						referenceNo = detail.nasbano  ? detail.nasbano : 'Not Added';;
					if(detail.type == 'Educational Perspective')
						referenceNo = detail.eduperno  ? detail.eduperno : 'Not Added';;
					if(detail.type == 'NCEES')
						referenceNo = detail.nceesno  ? detail.nceesno : 'Not Added';;
					if(detail.type == 'NARIC')
						referenceNo = detail.naricno  ? detail.naricno : 'Not Added';;
					if(detail.type == 'Educational credential evaluators WES')
						referenceNo = detail.wesno  ? detail.wesno : 'Not Added';;
					if(detail.type == 'others')
						referenceNo = detail.otheraccno  ? detail.otheraccno : 'Not Added';;
					if(detail.type == 'National Committee on Accreditation')
						referenceNo = detail.ncano  ? detail.ncano : 'Not Added';;
						if(detail.type == 'HRD')
						referenceNo = detail.hrdno  ? detail.hrdno : 'Not Added';;
					data.push({
						id : detail.id,
						university_name : detail.university_name,
						email : email,
						country_name : detail.country_name,
						contact_number : detail.contact_number,
						status : status,
						contact_person : detail.contact_person,
						type : detail.type,
						address : detail.address,
						landmark : detail.landmark,
						pincode : detail.pincode,
						reference_no : referenceNo,
						emailAsWes : detail.emailAsWes,
						nameaswes:detail.nameaswes,
						lastnameaswes:detail.lastnameaswes,
						inst_address  : detail.inst_address,
						noofcopies:detail.noofcopies,
						deliverySpeed:detail.deliverySpeed,
						deliveryType:detail.deliveryType
					})
				});
				if(data.length == allDetails.length){
					res.json({
						status : 200,
						data : data
					});
				}
			}else{
				res.json({
					status : 400
				});
			}

		});
	}else{
		models.Institution_details.findAll({
			where:{
				user_id : user_id,
				app_id : null,source : 'guattestation'
			}
		}) .then(function(allDetails){
			if(allDetails.length > 0){
				allDetails.forEach(function(detail){
					var email;
					if(detail.OtherEmail)
						email = detail.email + ', ' + detail.OtherEmail;
					else
					   email = detail.email;
					if(detail.app_id == null){
						status = 'not_applied';
					}else{
						status = 'applied';
					}
					var referenceNo;
					if(detail.type == 'study')
						referenceNo = detail.studyrefno ? detail.studyrefno : 'Not Added';
					if(detail.type == 'employment')
						referenceNo = detail.emprefno  ? detail.emprefno : 'Not Added';;
					if(detail.type == 'IQAS')
						referenceNo = detail.iqasno  ? detail.iqasno : 'Not Added';;
					if(detail.type == 'CES')
						referenceNo = detail.cesno  ? detail.cesno : 'Not Added';;
					if(detail.type == 'ICAS')
						referenceNo = detail.icasno  ? detail.icasno : 'Not Added';;
					if(detail.type == 'visa')
						referenceNo = detail.visarefno  ? detail.visarefno : 'Not Added';;
					if(detail.type == 'MYIEE')
						referenceNo = detail.myieeno  ? detail.myieeno : 'Not Added';;
					if(detail.type == 'ICES')
						referenceNo = detail.icesno  ? detail.icesno : 'Not Added';;
					if(detail.type == 'NASBA')
						referenceNo = detail.nasbano  ? detail.nasbano : 'Not Added';;
					if(detail.type == 'Educational Perspective')
						referenceNo = detail.eduperno  ? detail.eduperno : 'Not Added';;
					if(detail.type == 'NCEES')
						referenceNo = detail.nceesno  ? detail.nceesno : 'Not Added';;
					if(detail.type == 'NARIC')
						referenceNo = detail.naricno  ? detail.naricno : 'Not Added';;
					if(detail.type == 'Educational credential evaluators WES')
						referenceNo = detail.wesno  ? detail.wesno : 'Not Added';;
					if(detail.type == 'others')
						referenceNo = detail.otheraccno  ? detail.otheraccno : 'Not Added';;
					if(detail.type == 'National Committee on Accreditation')
						referenceNo = detail.ncano  ? detail.ncano : 'Not Added';;
					if(detail.type == 'HRD')
						referenceNo = detail.hrdno  ? detail.hrdno : 'Not Added';;

					data.push({
						id : detail.id,
						university_name : detail.university_name,
						email : email,
						country_name : detail.country_name,
						contact_number : detail.contact_number,
						status : status,
						contact_person : detail.contact_person,
						type : detail.type,
						address : detail.address,
						landmark : detail.landmark,
						pincode : detail.pincode,
						reference_no : referenceNo,
						emailAsWes : detail.emailAsWes,
						nameaswes:detail.nameaswes,
						lastnameaswes:detail.lastnameaswes,
						inst_address  : detail.inst_address,
						noofcopies:detail.noofcopies,
						deliverySpeed:detail.deliverySpeed,
						deliveryType:detail.deliveryType
					})
				});
				if(data.length == allDetails.length){
					res.json({
						status : 200,
						data : data
					});
				}
			}else{
				res.json({
					status : 400
				});
			}

		});
	}
});

// router.post('/sendEmailToStudent', middlewares.getUserInfo, function(req, res){
// 	console.log("sendEmailToStudent");
// 	var value = req.body.value
// 	var email = req.body.email;
// 	setTimeout(function(){
// 		request.post(constant.BASE_URL_SENDGRID + 'sendEmailToStudent_AdminSide', {
// 			json: {
// 					email  : email,
// 					value  : value,
// 					source : 'gu'
// 			}
// 		}, function (error, response, body) {
// 		console.log("response" + JSON.stringify(response));
// 		console.log("response" + JSON.stringify(body));
// 			if(response){
// 				res.json({
// 					status : 200
// 				})
// 			}else{
// 				res.json({
// 					status : 400
// 				})
// 			}
// 		})
// 	},1000);


// });
router.get('/getHRDInstituteData', middlewares.getUserInfo, function (req, res) {
	console.log('/getHRDInstituteData');

	models.Hrd_details.findAll({
		where  :{
			user_id : req.User.id,
			app_id : null		}
	}).then(function (gethrd_Data) {
			if(gethrd_Data.length > 0){
					res.json({
						status :200,
						hrddata :gethrd_Data
					})
			}else{
				res.json({
					status :400,
				})
			}
	})
});

router.post('/createInstitute', middlewares.getUserInfo,middlewares.getUserEducationalInfo, async function(req,res){
	console.log('/createInstitute');
	var universityName = req.body.universityName;
	var country = req.body.country;
	var studyrefno = req.body.studyrefno;
	var myieeno = req.body.myieeno;
	var icesno = req.body.icesno;
	var emprefno = req.body.emprefno;
	var visarefno = req.body.visarefno;
	var email = req.body.email;
	var emailArr;
	var anotherEmailArr;
	var anotherEmail;
	var deliveryform = req.body.deliveryform;
	var instituteAddress = req.body.instituteaddress ? req.body.instituteaddress : null;

	if(email){
		emailArr = email.split(', ');
		if(emailArr.length  > 1){
			anotherEmailArr = emailArr.shift();
			anotherEmail = emailArr.toString();
		}else{
			anotherEmailArr = email;
			anotherEmail = null;
		}
	}else{
		emailArr = null;
		anotherEmailArr = null;
		anotherEmail = null;
	}
	var contactNumber = req.body.contactNumber;
	var user_id = req.User.id;
	var contact_person = req.body.contact_person;
	var address = req.body.address;
	var landmark = req.body.landmark;
	var pincode = req.body.pincode;
	var wesNumber  = req.body.wesNumber;
	var cesno  = req.body.cesno;
	var nasbano = req.body.nasbano;
	var eduperno  = req.body.eduperno;
	var iqasno  = req.body.iqasno;
	var icasno  = req.body.icasno;
	var studyaccno = req.body.studyaccno;
	var empaccno  = req.body.empaccno;
	var visaaccno = req.body.visaaccno;
	var accountno = req.body.otheraccno;
	var nceesno = req.body.nceesno;
	var naricno = req.body.naricno;
	var ncano = req.body.ncano;
	var emailAsWes = req.body.emailAsWes;
	var nameaswes=req.body.nameaswes;
	var lastnameaswes=req.body.lastnameaswes;
	var hrdno = req.body.hrdno;
	var delivery_type = req.body.delivery_type;
	var delivery_speed= req.body.delivery_speed;
	var noofcopi= req.body.noofcopi;
	var amount;
	var appliedFor;
	var Attested_for;
	var transcriptprice = 0;
	var degreeprice = 0;
	var marksheetprice = 0;

	appliedFor  = await functions.getAttestedFor( req.User.id);
	noofMarksheet = await functions.getCountofMarksheet(req.User.id);
	Attested_for = appliedFor.attestedfor;
	sealed_digital = 0;
	if(req.body.delivery_type == 'physcial'){
		sealed_digital =  736 * req.body.noofcopi
	}

	if(appliedFor.instructionalField == true){
		amount = 436 + sealed_digital
	}else{
		amount =  0
	}
	// else{
		if(noofMarksheet.length <= 5){
			if(noofMarksheet != 0){
				marksheetprice = 404 * noofMarksheet.length
			}
			if(Attested_for == 'transcript'){
				transcriptprice = 736
			}
			if(Attested_for == 'degree'){
				degreeprice = 554
			}
			if(req.body.delivery_type == 'physcial'){
				sealed_digital =  736 * req.body.noofcopi
			}
			


			amount = marksheetprice  + transcriptprice + degreeprice + amount + sealed_digital ;
		}else{
			if(noofMarksheet != 0){
				marksheetprice = 2360 + (50 * noofMarksheet.length)
			}
			if(Attested_for == 'transcript'){
				transcriptprice = 500
			}
			if(Attested_for == 'degree'){
				degreeprice = 200
			}
			if(req.body.delivery_type == 'physcial'){
				sealed_digital =  736 * req.body.noofcopi
			}
			amount = marksheetprice  + transcriptprice + degreeprice + amount  + sealed_digital;
		}
	// }

	


    models.Institution_details.create({
        university_name : (universityName) ? universityName : null,
        country_name : (country) ? country : null,
        email : (emailArr) ? anotherEmailArr : null,
        contact_number : (contactNumber) ? contactNumber : null,
		user_id : user_id,
		contact_person : (contact_person) ? contact_person : null,
		type : req.body.type,
		address : (address) ? address : null,
		landmark : (landmark) ? landmark : null,
		pincode : (pincode) ? pincode : null,
		wesno:(wesNumber) ? wesNumber : null,
		cesno:(cesno) ? cesno : null,
		icesno:(icesno) ? icesno : null,
		eduPerno:(eduperno) ? eduperno : null,
		iqasno:(iqasno) ? iqasno : null,
		icasno:(icasno) ? icasno : null,
		studyrefno:(studyrefno) ? studyrefno : null,
		emprefno:(emprefno) ? emprefno : null,
		visarefno : (visarefno) ? visarefno : null,
		studyaccno:(studyaccno) ? studyaccno : null,
		empaccno :(empaccno) ? empaccno : null,
		visaaccno :(visaaccno) ? visaaccno : null,
		nasbano:(nasbano) ? nasbano : null,
		otheraccno:(accountno) ? accountno : null,
		myieeno : (myieeno) ? myieeno : null,
		OtherEmail : (anotherEmail) ? anotherEmail : null,
		nceesno : (nceesno) ? nceesno : null,
		naricno : (naricno) ? naricno : null,
		ncano : (ncano) ? ncano : null,
		emailAsWes : emailAsWes ? emailAsWes : null,
		nameaswes:(nameaswes)?nameaswes:null,
		lastnameaswes:(lastnameaswes)?lastnameaswes:null,
		hrdno:(hrdno)?hrdno:null,
		inst_address :  instituteAddress,
		deliveryType :  delivery_type,
		deliverySpeed :  delivery_speed,
		noofcopies:noofcopi
		,source : 'guattestation'
    }).then(function(data){
        if(data){
			models.Cart.create({
				university_name : data.university_name,
				email : data.email,
				fees : amount,
				user_id : user_id,
				institute_id : data.id,
			}).then(function(cart_created){
				res.json({
					status:200,
					message:"data is inserted"
				})
			});
        }else{
            res.json({
                status:400,
                message:"data is not inserted"
            })
        }
    })
});

router.get('/suggestInstitute', middlewares.getUserInfo, function(req,res){
	console.log('/suggestInstitute');
    models.Institution_details.findAll({
		attributes: [[models.sequelize.fn('DISTINCT', models.sequelize.col('university_name')), 'uni_name']],
    }).then(function(data){
        if(data){
			res.json({
				status:200,
				data : data
			})
        }else{
            res.json({
                status:400,
                message:"data is not inserted"
            })
        }
    })
})

// for feching values in hrd purpose

router.get('/getHrddata', middlewares.getUserInfo, function(req,res){
	console.log('/getHrddata');

	var educationDetails = {
		bachelors : [],
		masters : [],
		phd: []
	};


	models.User.findAll({
		where  :{
			id : req.User.id
		}
	}).then(function (uservalues){
	models.Applied_For_Details.findAll({
		where  :{
			user_id : req.User.id,
			app_id : null,
			source : 'guattestation'
		}
	}).then(function (user){

		if(req.query.editFlag == 'true'){
			console.log('true');
			if(req.query.degreeValue == 'Masters,Bachelors'){
				models.userMarkList.findAll({
					where :{
						user_id : req.User.id,
						type : "Masters",
					   source : 'guattestation'
					}
				}).then(function(master_Details){
					let masters_duration;
					var differentStream = [];
					var masterDetails = [];
					if(master_Details.length > 0){
						master_Details.forEach(detail=>{
							if(detail.app_id != null){
								var app_idArr = detail.app_id.split(",");
								app_idArr.forEach(app_id =>{
									if(app_id == req.query.app_id){
										masterDetails.push(detail);
									}
								})
							}
						})
					}
					if(masterDetails.length >0){
						if(masterDetails[0].college_stream_type == true){
							let college_List=[]
							masterDetails.forEach(master=>{
								models.College.find({
										where :{
											id : master.collegeId
										}
									}).then(collegename=>{
										if(master.patteren == "Annual"){
											college_List.push({
												clg_name : collegename.name,
												academic_year : master.name
											})
										}else if(master.patteren == "Semester"){
											switch(master.name){
												case 'Semester 2' :
													college_List.push({
														clg_name : collegename.name,
														academic_year : 'First Year'
													})
													break;
												case 'Semester 4' :
													college_List.push({
														clg_name : collegename.name,
														academic_year : 'Second Year'
													})
													break;
												case 'Semester 6' :
													college_List.push({
														clg_name : collegename.name,
														academic_year : 'Third Year'
													})
													break;
												case 'Semester 8' :
													college_List.push({
														clg_name : collegename.name,
														academic_year : 'Fourth Year'
													})

													break;
												case 'Semester 10' :
													college_List.push({
														clg_name : collegename.name,
														academic_year : 'Fifth Year'
													})
													break;
											}
										}
									models.InstructionalDetails.findAll({
										where:{
											userId : req.User.id,
											education : 'Masters_' + master.faculty
										}
									}).then(function(instructionalDetails){
										if(differentStream.length > 0){
											var flag = false;
											differentStream.forEach(single=>{
												if(single.faculty == master.faculty){
													flag = true;
												}
											})
											if(flag == false){

												differentStream.push({
													faculty : master.faculty,
													instructionalDetails : instructionalDetails,
													type : master.type
												})
											}
										}else{
											differentStream.push({
												faculty : master.faculty,
												instructionalDetails : instructionalDetails,
												type : master.type
											})
										}
									})
								})
							})
							setTimeout(() =>{
								var differentCollege = []
								differentStream.forEach(mast=>{
									models.Program_List.find({
										where :{
											degree : 'Masters',
											faculty : mast.faculty
										}
									}).then(function(facultyMaster){
										models.userMarkList.findAll({
											where:{
												user_id : req.User.id,
												type : "Masters",
												faculty : mast.faculty,source : 'guattestation'
											}
										}).then(function(userMarklist){
											if(userMarklist.length > 0){
												if(userMarklist[0].patteren == "Annual"){
													userMarklist.forEach(marklist=>{
														differentCollege.push({
															faculty : marklist.faculty,
															collegeId : marklist.collegeId,
															instructionalDetails : mast.instructionalDetails,
															type : marklist.type,
															// college_List : college_List,
															clg_duration: facultyMaster.year,
															form : true
														})
													})
												}else if(userMarklist[0].patteren == "Semester"){
													var semesters = facultyMaster.year * 2;
													for(var i = 2; i <= semesters; i=i+2){
														var sem = "Semester " + i
														userMarklist.forEach(marklist=>{
															if(marklist.name == sem){
																differentCollege.push({
																	faculty : marklist.faculty,
																	collegeId : marklist.collegeId,
																	instructionalDetails : mast.instructionalDetails,
																	type : marklist.type,
																	// college_List : college_List,
																	clg_duration: facultyMaster.year,
																	form: true
																})
															}
														})
													}
												}
											}
										})
									})
								})
								setTimeout(()=>{
									var masters = [];
									differentCollege.forEach(coll=>{
										var college = [];
										models.College.find({
											where :{
												id : coll.collegeId
											}
										}).then(collegename=>{
										if(masters.length > 0){
											masters.forEach(mast=>{
												if(mast.faculty == coll.faculty){
													mastFlag = true;
													var count = 0;
													mast.colleges.forEach(clg=>{
														if(clg.collegeId == coll.collegeId){
															count ++;
														}
													})
													if(count <= mast.colleges.length){
														mast.colleges.push({
															collegeId : coll.collegeId
														})
													}

													if(mast.instructionalDetails.length > 0) {
														mast.form = true;
													}
												}
											})

											if(mastFlag == false){
												college.push({
													collegeId : coll.collegeId
												})

												masters.push({
													faculty : coll.faculty,
													colleges : college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration,
													college_name: collegename.name,
													form : true
												})
											}
										}else{
											college.push({
												collegeId : coll.collegeId
											})
											masters.push({
												faculty : coll.faculty,
												colleges :college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												college_name: collegename.name,
												form : true
											})
										}
									})
								})
									educationDetails.masters = masters;
									models.userMarkList.findAll({
										where :{
											user_id : req.User.id,
											type : "Bachelors",source : 'guattestation'
										}
									}).then(function(bachelorDetails){
										// let clg_duration =3;
										var differentStream = [];
										if(bachelorDetails.length >0){
											if(bachelorDetails[0].college_stream_type == true){
												let college_List =[];
												bachelorDetails.forEach(bachelor=>{
													models.College.find({
														where :{
															id : bachelor.collegeId
														}
													}).then(collegename=>{
														if(bachelor.patteren == "Annual"){
															//academic_year = bachelor.name;
															college_List.push({
																clg_name : collegename.name,
																academic_year : bachelor.name
															})
														}else if(bachelor.patteren == "Semester"){
															switch(bachelor.name){
																case 'Semester 2' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'First Year'
																	})
																	break;
																case 'Semester 4' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'Second Year'
																	})
																	break;
																case 'Semester 6' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'Third Year'
																	})
																	break;
																case 'Semester 8' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'Fourth Year'
																	})

																	break;
																case 'Semester 10' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'Fifth Year'
																	})
																	break;
															}
														}
														models.InstructionalDetails.findAll({
															where:{
																userId : req.User.id,
																education : 'Bachelors_' + bachelor.faculty
															}
														}).then(function(instructionalDetails){
															if(differentStream.length > 0){
																var flag = false;
																differentStream.forEach(single=>{
																	if(single.faculty == bachelor.faculty){
																		flag = true;
																	}
																})
																if(flag == false){

																	differentStream.push({
																		faculty : bachelor.faculty,
																		instructionalDetails : instructionalDetails,
																		type : bachelor.type,
																	})
																}
															}else{
																differentStream.push({
																	faculty : bachelor.faculty,
																	instructionalDetails : instructionalDetails,
																	type : bachelor.type,
																})
															}
														})
													})
												})
												setTimeout(() =>{
													var differentCollege = []
													differentStream.forEach(bach=>{
														models.Program_List.find({
															where :{
																degree : 'Bachelors',
																faculty : bach.faculty
															}
														}).then(function(facultyMaster){
															models.userMarkList.findAll({
																where:{
																	user_id : req.User.id,
																	type : "Bachelors",
																	faculty : bach.faculty,source : 'guattestation'
																}
															}).then(function(userMarklist){
																if(userMarklist.length > 0){
																	if(userMarklist[0].patteren == "Annual"){
																		userMarklist.forEach(marklist=>{
																			differentCollege.push({
																				faculty : marklist.faculty,
																				collegeId : marklist.collegeId,
																				instructionalDetails : bach.instructionalDetails,
																				type : marklist.type,
																				// college_List : college_List,
																				clg_duration: facultyMaster.year
																			})
																		})
																	}else if(userMarklist[0].patteren == "Semester"){
																		var semesters = facultyMaster.year * 2;
																		for(var i = 2; i <= semesters; i=i+2){
																			var sem = "Semester " + i
																			userMarklist.forEach(marklist=>{
																				if(marklist.name == sem){
																					differentCollege.push({
																						faculty : marklist.faculty,
																						collegeId : marklist.collegeId,
																						instructionalDetails : bach.instructionalDetails,
																						type : marklist.type,
																						// college_List : college_List,
																						clg_duration: facultyMaster.year
																					})
																				}
																			})
																		}
																	}
																}
															})
														})
													})
													setTimeout(()=>{
														var bachelors = [];
														differentCollege.forEach(coll=>{
															var college = [];
															var bachFlag = false;
															if(bachelors.length > 0){
																bachelors.forEach(bach=>{
																	if(bach.faculty == coll.faculty){
																		bachFlag = true;
																		var count = 0;
																		bach.colleges.forEach(clg=>{
																			if(clg.collegeId == coll.collegeId){
																				count ++;
																			}
																		})
																		if(count <= bach.colleges.length){
																			bach.colleges.push({
																				collegeId : coll.collegeId
																			})
																		}

																		if(bach.instructionalDetails.length > 0) {
																			bach.form = true;
																		}
																	}
																})

																if(bachFlag == false){
																	college.push({
																		collegeId : coll.collegeId
																	})

																	bachelors.push({
																		faculty : coll.faculty,
																		colleges : college,
																		instructionalDetails : coll.instructionalDetails,
																		college_List : college_List,
																		type: coll.type +' of '+ coll.faculty,
																		clg_duration : coll.clg_duration,
																	})
																}
															}else{
																college.push({
																	collegeId : coll.collegeId
																})
																bachelors.push({
																	faculty : coll.faculty,
																	colleges :college,
																	instructionalDetails : coll.instructionalDetails,
																	college_List : college_List,
																	type: coll.type +' of '+ coll.faculty,
																	clg_duration : coll.clg_duration,
																})
															}
														})
														educationDetails.bachelors = bachelors;
														res.json({
															status : 200,
															data : educationDetails
														})
													},3000)
												},4000)

											}else if(bachelorDetails[0].college_stream_type == false){
												models.College.find({
													where :{
														id : bachelorDetails[0].collegeId
													}
												}).then(collegename=>{
													models.Program_List.find({
														where :{
															degree : 'Bachelors',
															faculty : bachelorDetails[0].faculty
														}
													}).then(function(facultyMaster){
												models.InstructionalDetails.findAll({
													where:{
														userId : req.User.id,
														education : 'Bachelors_' + bachelorDetails[0].faculty
													}
												}).then(function(instructionalDetails){
													var college = [];
													college.push({
														collegeId : bachelorDetails[0].collegeId
													})
													educationDetails.bachelors.push({
														faculty : bachelorDetails[0].faculty,
														name : bachelorDetails[0].faculty,
														colleges : college,
														instructionalDetails : instructionalDetails,
														type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
														college_name: collegename.name,
														clg_duration : facultyMaster.year,
													})
													res.json({
														status : 200,
														data : educationDetails
													})
												})
											})
											})
											}
										}
									})
								},3000)
							},4000)

						}else if(masterDetails[0].college_stream_type == false){
							models.College.find({
								where :{
									id : masterDetails[0].collegeId
								}
							}).then(master_collegename=>{
								models.Program_List.find({
									where :{
										degree : 'Masters',
										faculty : masterDetails[0].faculty
									}
								}).then(function(facultyMaster){
							models.InstructionalDetails.findAll({
								where:{
									userId : req.User.id,
									education : 'Masters_' + masterDetails[0].faculty
								}
							}).then(function(instructionalDetails){
								var college = [];
								college.push({
									collegeId : masterDetails[0].collegeId
								})
								educationDetails.masters.push({
									faculty : masterDetails[0].faculty,
									colleges : college,
									instructionalDetails : instructionalDetails,
									type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
									college_name: master_collegename.name,
									clg_duration : facultyMaster.year,
									form : true
								})
								models.userMarkList.findAll({
									where :{
										user_id : req.User.id,
										type : "Bachelors",source : 'guattestation'
									}
								}).then(function(bachelorDetails){
									var differentStream = [];
									let clg_duration ;
									if(bachelorDetails.length >0){
										if(bachelorDetails[0].college_stream_type == true){
											let college_List=[];
											bachelorDetails.forEach(bachelor=>{
												models.College.find({
													where :{
														id : bachelor.collegeId
													}
												}).then(collegename=>{
													if(bachelor.patteren == "Annual"){
														//academic_year = bachelor.name;
														college_List.push({
															clg_name : collegename.name,
															academic_year : bachelor.name
														})
													}else if(bachelor.patteren == "Semester"){
														switch(bachelor.name){
															case 'Semester 2' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'First Year'
																})
																break;
															case 'Semester 4' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Second Year'
																})
																break;
															case 'Semester 6' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Third Year'
																})
																break;
															case 'Semester 8' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fourth Year'
																})

																break;
															case 'Semester 10' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fifth Year'
																})
																break;
														}
													}
													models.InstructionalDetails.findAll({
														where:{
															userId : req.User.id,
															education : 'Bachelors_' + bachelor.faculty
														}
													}).then(function(instructionalDetails){
														if(differentStream.length > 0){
															var flag = false;
															differentStream.forEach(single=>{
																if(single.faculty == bachelor.faculty){
																	flag = true;
																}
															})
															if(flag == false){

																differentStream.push({
																	faculty : bachelor.faculty,
																	instructionalDetails : instructionalDetails,
																	type : bachelor.type,
																})
															}
														}else{
															differentStream.push({
																faculty : bachelor.faculty,
																instructionalDetails : instructionalDetails,
																type : bachelor.type,
															})
														}
													})
												})
											})
											setTimeout(() =>{
												var differentCollege = []
												differentStream.forEach(bach=>{
													models.Program_List.find({
														where :{
															degree : 'Bachelors',
															faculty : bach.faculty
														}
													}).then(function(facultyMaster){
														models.userMarkList.findAll({
															where:{
																user_id : req.User.id,
																type : "Bachelors",
																faculty : bach.faculty,source : 'guattestation'
															}
														}).then(function(userMarklist){
															if(userMarklist.length > 0){
																if(userMarklist[0].patteren == "Annual"){
																	userMarklist.forEach(marklist=>{
																		differentCollege.push({
																			faculty : marklist.faculty,
																			collegeId : marklist.collegeId,
																			instructionalDetails : bach.instructionalDetails,
																			// college_List : college_List,
																			type : user_Marklist.type,
																			clg_duration: facultyMaster.year
																		})
																	})
																}else if(userMarklist[0].patteren == "Semester"){
																	var semesters = facultyMaster.year * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist=>{
																			if(marklist.name == sem){
																				differentCollege.push({
																					faculty : marklist.faculty,
																					collegeId : marklist.collegeId,
																					instructionalDetails : bach.instructionalDetails,
																					// college_List : college_List,
																					type : user_Marklist.type,
																					clg_duration: facultyMaster.year
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(()=>{
													var bachelors = [];
													differentCollege.forEach(coll=>{
														var college = [];
														var bachFlag = false;
														if(bachelors.length > 0){
															bachelors.forEach(bach=>{
																if(bach.faculty == coll.faculty){
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg=>{
																		if(clg.collegeId == coll.collegeId){
																			count ++;
																		}
																	})
																	if(count <= bach.colleges.length){
																		bach.colleges.push({
																			collegeId : coll.collegeId
																		})
																	}

																	if(bach.instructionalDetails.length > 0) {
																		bach.form = true;
																	}
																}
															})

															if(bachFlag == false){
																college.push({
																	collegeId : coll.collegeId
																})

																bachelors.push({
																	faculty : coll.faculty,
																	colleges : college,
																	instructionalDetails : coll.instructionalDetails,
																	type: coll.type +' of '+ coll.faculty,
																	college_List : college_List,
																	clg_duration : coll.clg_duration,
																})
															}
														}else{
															college.push({
																collegeId : coll.collegeId
															})
															bachelors.push({
																faculty : coll.faculty,
																colleges :college,
																instructionalDetails : coll.instructionalDetails,
																type: coll.type +' of '+ coll.faculty,
																college_List : college_List,
																clg_duration : coll.clg_duration,
															})
														}
													})
													educationDetails.bachelors = bachelors;

												},3000)
											},4000)

										}else if(bachelorDetails[0].college_stream_type == false){
											models.College.find({
												where :{
													id : bachelorDetails[0].collegeId
												}
											}).then(collegename=>{
												models.Program_List.find({
													where :{
														degree : 'Bachelors',
														faculty : bachelorDetails[0].faculty
													}
												}).then(function(facultyMaster){
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelorDetails[0].faculty
												}
											}).then(function(instructionalDetails){
												var college = [];
												college.push({
													collegeId : bachelorDetails[0].collegeId
												})
												educationDetails.bachelors.push({
													faculty : bachelorDetails[0].faculty,
													colleges : college,
													instructionalDetails : instructionalDetails,
													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
													college_name: collegename.name,
													clg_duration : facultyMaster.year,
													form :true
												})
											})
										})
										})
										}
									}
								})
								setTimeout(()=>{
									res.json({
										status : 200,
										data : educationDetails
									})
								},2000);
							})
						})
						})
						}
					}
				})
			}else if(req.query.degreeValue == 'Bachelors'){
				models.userMarkList.findAll({
					where :{
						user_id : req.User.id,
						type : "Bachelors",
						source : 'guattestation'
					}
				}).then(function(bachelor_Details){
					let clg_duration ;
					var differentStream = [];
					var bachelorDetails = [];
					if(bachelor_Details.length > 0){
						bachelor_Details.forEach(detail=>{
							if(detail.app_id != null){
								var app_idArr = detail.app_id.split(",");
								app_idArr.forEach(app_id =>{
									if(app_id == req.query.app_id){
										bachelorDetails.push(detail);
									}
								})
							}
						})
					}
					if(bachelorDetails.length >0){
						if(bachelorDetails[0].college_stream_type == true){
							let college_List = [];
							bachelorDetails.forEach(bachelor=>{
								models.College.find({
									where :{
										id : bachelor.collegeId
									}
								}).then(collegename=>{
									if(bachelor.patteren == "Annual"){
										//academic_year = bachelor.name;
										college_List.push({
											clg_name : collegename.name,
											academic_year : bachelor.name
										})
									}else if(bachelor.patteren == "Semester"){
										switch(bachelor.name){
											case 'Semester 2' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'First Year'
												})
												break;
											case 'Semester 4' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Second Year'
												})
												break;
											case 'Semester 6' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Third Year'
												})
												break;
											case 'Semester 8' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fourth Year'
												})

												break;
											case 'Semester 10' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fifth Year'
												})
												break;
										}
									}
									models.InstructionalDetails.findAll({
										where:{
											userId : req.User.id,
											education : 'Bachelors_' + bachelor.faculty
										}
									}).then(function(instructionalDetails){
										if(differentStream.length > 0){
											var flag = false;
											differentStream.forEach(single=>{
												if(single.faculty == bachelor.faculty){
													flag = true;
												}
											})
											if(flag == false){

												differentStream.push({
													faculty : bachelor.faculty,
													instructionalDetails : instructionalDetails,
													type : bachelor.type
												})
											}
										}else{
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									})
								})
							})
							setTimeout(() =>{
								var differentCollege = []
								differentStream.forEach(bach=>{
									models.Program_List.find({
										where :{
											degree : 'Bachelors',
											faculty : bach.faculty
										}
									}).then(function(facultyMaster){
										models.userMarkList.findAll({
											where:{
												user_id : req.User.id,
												type : "Bachelors",
												faculty : bach.faculty,
												source : 'guattestation'
											}
										}).then(function(userMarklist){
											if(userMarklist.length > 0){
												if(userMarklist[0].patteren == "Annual"){
													userMarklist.forEach(marklist=>{
														differentCollege.push({
															faculty : marklist.faculty,
															collegeId : marklist.collegeId,
															instructionalDetails : bach.instructionalDetails,
															type : marklist.type,
															// college_List : college_List,
															clg_duration: facultyMaster.year
														})
													})
												}else if(userMarklist[0].patteren == "Semester"){
													var semesters = facultyMaster.year * 2;
													for(var i = 2; i <= semesters; i=i+2){
														var sem = "Semester " + i
														userMarklist.forEach(marklist=>{
															if(marklist.name == sem){
																differentCollege.push({
																	faculty : marklist.faculty,
																	collegeId : marklist.collegeId,
																	instructionalDetails : bach.instructionalDetails,
																	type : marklist.type,
																	// college_List : college_List,
																	clg_duration : facultyMaster.year
																})
															}
														})
													}
												}
											}
										})
									})
								})
								setTimeout(()=>{
									var bachelors = [];
									differentCollege.forEach(coll=>{
										var college = [];
										var bachFlag = false;
										if(bachelors.length > 0){
											bachelors.forEach(bach=>{
												if(bach.faculty == coll.faculty){
													bachFlag = true;
													var count = 0;
													bach.colleges.forEach(clg=>{
														if(clg.collegeId == coll.collegeId){
															count ++;
														}
													})
													if(count <= bach.colleges.length){
														bach.colleges.push({
															collegeId : coll.collegeId
														})
													}

													if(bach.instructionalDetails.length > 0) {
														bach.form = true;
													}
												}
											})

											if(bachFlag == false){
												college.push({
													collegeId : coll.collegeId
												})

												bachelors.push({
													faculty : coll.faculty,
													colleges : college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration
												})
											}
										}else{
											college.push({
												collegeId : coll.collegeId
											})
											bachelors.push({
												faculty : coll.faculty,
												colleges :college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration
											})
										}
									})
									educationDetails.bachelors = bachelors;
									res.json({
										status : 200,
										data : educationDetails
									})
								},3000)
							},4000)

						}else if(bachelorDetails[0].college_stream_type == false){
							console.log('in false');
							models.College.find({
								where :{
									id : bachelorDetails[0].collegeId
								}
							}).then(collegename=>{
								models.Program_List.find({
									where :{
										degree : 'Bachelors',
										faculty : bachelorDetails[0].faculty
									}
								}).then(function(facultyMaster){
							models.InstructionalDetails.findAll({
								where:{
									userId : req.User.id,
									education : 'Bachelors_' + bachelorDetails[0].faculty
								}
							}).then(function(instructionalDetails){
								var college = [];
								var form;
								// if(instructionalDetails.length > 0){
								// 	form = true;
								// }else{
								// 	form = false;
								// }
								college.push({
									collegeId : bachelorDetails[0].collegeId
								})
								educationDetails.bachelors.push({
									faculty : bachelorDetails[0].faculty,
									colleges : college,
									instructionalDetails : instructionalDetails,
									type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
									college_name: collegename.name,
									clg_duration : facultyMaster.year,
									form : true
								})
								res.json({
									status : 200,
									data : educationDetails
								})
							})
						})
						})
						}
					}
				})
			}else if(req.query.degreeValue == 'Masters'){
				models.userMarkList.findAll({
					where :{
						user_id : req.User.id,
						type : "Masters",
						source : 'guattestation'
					}
				}).then(function(bachelor_Details){
					let clg_duration ;
					var differentStream = [];
					var bachelorDetails = [];
					if(bachelor_Details.length > 0){
						bachelor_Details.forEach(detail=>{
							if(detail.app_id != null){
								var app_idArr = detail.app_id.split(",");
								app_idArr.forEach(app_id =>{
									if(app_id == req.query.app_id){
										bachelorDetails.push(detail);
									}
								})
							}
						})
					}
					if(bachelorDetails.length >0){
						if(bachelorDetails[0].college_stream_type == true){
							let college_List = [];
							bachelorDetails.forEach(bachelor=>{
								models.College.find({
									where :{
										id : bachelor.collegeId
									}
								}).then(collegename=>{
									if(bachelor.patteren == "Annual"){
										//academic_year = bachelor.name;
										college_List.push({
											clg_name : collegename.name,
											academic_year : bachelor.name
										})
									}else if(bachelor.patteren == "Semester"){
										switch(bachelor.name){
											case 'Semester 2' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'First Year'
												})
												break;
											case 'Semester 4' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Second Year'
												})
												break;
											case 'Semester 6' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Third Year'
												})
												break;
											case 'Semester 8' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fourth Year'
												})

												break;
											case 'Semester 10' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fifth Year'
												})
												break;
										}
									}
									models.InstructionalDetails.findAll({
										where:{
											userId : req.User.id,
											education : 'Masters_' + bachelor.faculty
										}
									}).then(function(instructionalDetails){
										if(differentStream.length > 0){
											var flag = false;
											differentStream.forEach(single=>{
												if(single.faculty == bachelor.faculty){
													flag = true;
												}
											})
											if(flag == false){

												differentStream.push({
													faculty : bachelor.faculty,
													instructionalDetails : instructionalDetails,
													type : bachelor.type
												})
											}
										}else{
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									})
								})
							})
							setTimeout(() =>{
								var differentCollege = []
								differentStream.forEach(bach=>{
									models.Program_List.find({
										where :{
											degree : 'Masters',
											faculty : bach.faculty
										}
									}).then(function(facultyMaster){
										models.userMarkList.findAll({
											where:{
												user_id : req.User.id,
												type : "Masters",
												faculty : bach.faculty,
												source : 'guattestation'
											}
										}).then(function(userMarklist){
											if(userMarklist.length > 0){
												if(userMarklist[0].patteren == "Annual"){
													userMarklist.forEach(marklist=>{
														differentCollege.push({
															faculty : marklist.faculty,
															collegeId : marklist.collegeId,
															instructionalDetails : bach.instructionalDetails,
															type : marklist.type,
															// college_List : college_List,
															clg_duration: facultyMaster.year
														})
													})
												}else if(userMarklist[0].patteren == "Semester"){
													var semesters = facultyMaster.year * 2;
													for(var i = 2; i <= semesters; i=i+2){
														var sem = "Semester " + i
														userMarklist.forEach(marklist=>{
															if(marklist.name == sem){
																differentCollege.push({
																	faculty : marklist.faculty,
																	collegeId : marklist.collegeId,
																	instructionalDetails : bach.instructionalDetails,
																	type : marklist.type,
																	// college_List : college_List,
																	clg_duration : facultyMaster.year
																})
															}
														})
													}
												}
											}
										})
									})
								})
								setTimeout(()=>{
									var masters = [];
									differentCollege.forEach(coll=>{
										var college = [];
										var bachFlag = false;
										if(masters.length > 0){
											masters.forEach(bach=>{
												if(bach.faculty == coll.faculty){
													bachFlag = true;
													var count = 0;
													bach.colleges.forEach(clg=>{
														if(clg.collegeId == coll.collegeId){
															count ++;
														}
													})
													if(count <= bach.colleges.length){
														bach.colleges.push({
															collegeId : coll.collegeId
														})
													}

													if(bach.instructionalDetails.length > 0) {
														bach.form = true;
													}
												}
											})

											if(bachFlag == false){
												college.push({
													collegeId : coll.collegeId
												})

												masters.push({
													faculty : coll.faculty,
													colleges : college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration
												})
											}
										}else{
											college.push({
												collegeId : coll.collegeId
											})
											masters.push({
												faculty : coll.faculty,
												colleges :college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration
											})
										}
									})
									educationDetails.masters = masters;
									res.json({
										status : 200,
										data : educationDetails
									})
								},3000)
							},4000)

						}else if(bachelorDetails[0].college_stream_type == false){
							console.log('in false');
							models.College.find({
								where :{
									id : bachelorDetails[0].collegeId
								}
							}).then(collegename=>{
								models.Program_List.find({
									where :{
										degree : 'Masters',
										faculty : bachelorDetails[0].faculty
									}
								}).then(function(facultyMaster){
							models.InstructionalDetails.findAll({
								where:{
									userId : req.User.id,
									education : 'Masters_' + bachelorDetails[0].faculty
								}
							}).then(function(instructionalDetails){
								var college = [];
								var form;
								// if(instructionalDetails.length > 0){
								// 	form = true;
								// }else{
								// 	form = false;
								// }
								college.push({
									collegeId : bachelorDetails[0].collegeId
								})
								educationDetails.masters.push({
									faculty : bachelorDetails[0].faculty,
									colleges : college,
									instructionalDetails : instructionalDetails,
									type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
									college_name: collegename.name,
									clg_duration : facultyMaster.year,
									form : true
								})
								res.json({
									status : 200,
									data : educationDetails
								})
							})
						})
						})
						}
					}
				})
			}else if(req.query.degreeValue == 'Phd,Masters,Bachelors'){
				models.userMarkList.findAll({
					where :{
						user_id : req.User.id,
						type : "Phd",
						source : 'guattestation'
					}
				}).then(function(bachelor_Details){
					let clg_duration ;
					var differentStream = [];
					var bachelorDetails = [];
					if(bachelor_Details.length > 0){
						bachelor_Details.forEach(detail=>{
							if(detail.app_id != null){
								var app_idArr = detail.app_id.split(",");
								app_idArr.forEach(app_id =>{
									if(app_id == req.query.app_id){
										bachelorDetails.push(detail);
									}
								})
							}
						})
					}
					if(bachelorDetails.length >0){
						if(bachelorDetails[0].college_stream_type == true){
							let college_List = [];
							bachelorDetails.forEach(bachelor=>{
								models.College.find({
									where :{
										id : bachelor.collegeId
									}
								}).then(collegename=>{
									if(bachelor.patteren == "Annual"){
										//academic_year = bachelor.name;
										college_List.push({
											clg_name : collegename.name,
											academic_year : bachelor.name
										})
									}else if(bachelor.patteren == "Semester"){
										switch(bachelor.name){
											case 'Semester 2' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'First Year'
												})
												break;
											case 'Semester 4' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Second Year'
												})
												break;
											case 'Semester 6' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Third Year'
												})
												break;
											case 'Semester 8' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fourth Year'
												})

												break;
											case 'Semester 10' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fifth Year'
												})
												break;
										}
									}
									models.InstructionalDetails.findAll({
										where:{
											userId : req.User.id,
											education : 'Masters_' + bachelor.faculty
										}
									}).then(function(instructionalDetails){
										if(differentStream.length > 0){
											var flag = false;
											differentStream.forEach(single=>{
												if(single.faculty == bachelor.faculty){
													flag = true;
												}
											})
											if(flag == false){

												differentStream.push({
													faculty : bachelor.faculty,
													instructionalDetails : instructionalDetails,
													type : bachelor.type
												})
											}
										}else{
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									})
								})
							})
							setTimeout(() =>{
								var differentCollege = []
								differentStream.forEach(bach=>{
									models.Program_List.find({
										where :{
											degree : 'Masters',
											faculty : bach.faculty
										}
									}).then(function(facultyMaster){
										models.userMarkList.findAll({
											where:{
												user_id : req.User.id,
												type : "Masters",
												faculty : bach.faculty,
												source : 'guattestation'
											}
										}).then(function(userMarklist){
											if(userMarklist.length > 0){
												if(userMarklist[0].patteren == "Annual"){
													userMarklist.forEach(marklist=>{
														differentCollege.push({
															faculty : marklist.faculty,
															collegeId : marklist.collegeId,
															instructionalDetails : bach.instructionalDetails,
															type : marklist.type,
															// college_List : college_List,
															clg_duration: facultyMaster.year
														})
													})
												}else if(userMarklist[0].patteren == "Semester"){
													var semesters = facultyMaster.year * 2;
													for(var i = 2; i <= semesters; i=i+2){
														var sem = "Semester " + i
														userMarklist.forEach(marklist=>{
															if(marklist.name == sem){
																differentCollege.push({
																	faculty : marklist.faculty,
																	collegeId : marklist.collegeId,
																	instructionalDetails : bach.instructionalDetails,
																	type : marklist.type,
																	// college_List : college_List,
																	clg_duration : facultyMaster.year
																})
															}
														})
													}
												}
											}
										})
									})
								})
								setTimeout(()=>{
									var masters = [];
									differentCollege.forEach(coll=>{
										var college = [];
										var bachFlag = false;
										if(masters.length > 0){
											masters.forEach(bach=>{
												if(bach.faculty == coll.faculty){
													bachFlag = true;
													var count = 0;
													bach.colleges.forEach(clg=>{
														if(clg.collegeId == coll.collegeId){
															count ++;
														}
													})
													if(count <= bach.colleges.length){
														bach.colleges.push({
															collegeId : coll.collegeId
														})
													}

													if(bach.instructionalDetails.length > 0) {
														bach.form = true;
													}
												}
											})

											if(bachFlag == false){
												college.push({
													collegeId : coll.collegeId
												})

												masters.push({
													faculty : coll.faculty,
													colleges : college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration
												})
											}
										}else{
											college.push({
												collegeId : coll.collegeId
											})
											masters.push({
												faculty : coll.faculty,
												colleges :college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration
											})
										}
									})
									educationDetails.masters = masters;
									res.json({
										status : 200,
										data : educationDetails
									})
								},3000)
							},4000)

						}else if(bachelorDetails[0].college_stream_type == false){
							console.log('in false');
							models.College.find({
								where :{
									id : bachelorDetails[0].collegeId
								}
							}).then(collegename=>{
								models.Program_List.find({
									where :{
										degree : 'Phd',
										faculty : bachelorDetails[0].faculty
									}
								}).then(function(facultyMaster){
							// models.InstructionalDetails.findAll({
							// 	where:{
							// 		userId : req.User.id,
							// 		education : 'Phd_' + bachelorDetails[0].faculty
							// 	}
							// }).then(function(instructionalDetails){
								var college = [];
								var form;
								// if(instructionalDetails.length > 0){
								// 	form = true;
								// }else{
								// 	form = false;
								// }
								college.push({
									collegeId : bachelorDetails[0].collegeId
								})
								educationDetails.phd.push({
									faculty : bachelorDetails[0].faculty,
									colleges : college,
									// instructionalDetails : instructionalDetails,
									type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
									college_name: collegename.name,
									clg_duration : facultyMaster.year,
									form : true
								})
								res.json({
									status : 200,
									data : educationDetails
								})
							// })
						})
						})
						}
					}
				})
			}
		}else{
			if(user){
				if(user[0].applying_for == 'Masters,Bachelors'){
					console.log("'Masters,Bachelors");
					models.userMarkList.findAll({
						where :{
							user_id : req.User.id,
							type : "Masters",
							source : 'guattestation'
							// app_id : null
						}
					}).then(function(masterDetails){
						let masters_duration;
						var differentStream = [];
						if(masterDetails.length >0){
							if(masterDetails[0].college_stream_type == true){
								console.log("colege strea,, true");
								let college_List=[]
								let academic_year_master =[]
								masterDetails.forEach(master=>{
										// models.InstructionalDetails.findAll({
										// 	where:{
										// 		userId : req.User.id,
										// 		education : 'Masters_' + master.faculty
										// 	}
										// }).then(function(instructionalDetails){
											// if(differentStream.length > 0){
											// 	var flag = false;
											// 	differentStream.forEach(single=>{
											// 		if(single.faculty == master.faculty){
											// 			flag = true;
											// 		}
											// 	})
											// 	if(flag == false){

											// 		differentStream.push({
											// 			faculty : master.faculty,
											// 			instructionalDetails : instructionalDetails,
											// 			type : master.type
											// 		})
											// 	}
											// }else{
												differentStream.push({
													patteren : master.patteren,
													faculty : master.faculty,
													instructionalDetails : instructionalDetails,
													type : master.type
												})
											// }
										// })
									// })
								})
								setTimeout(() =>{
									/** Updating college list **/
									// jsonObject = college_List.map(JSON.stringify);
									// console.log("Data===>"+jsonObject);
									// uniqueSet = new Set(jsonObject);
									// Updated_list = Array.from(uniqueSet).map(JSON.parse);
									/** Updating college list **/
									var differentCollege = []
									differentStream.forEach(mast=>{
										console.log("mast==>"+JSON.stringify(mast))
										models.Program_List.find({
											where :{
												degree : 'Masters',
												faculty : mast.faculty
											}
										}).then(function(facultyMaster){
											models.userMarkList.findAll({
												where:{
													user_id : req.User.id,
													type : "Masters",
													faculty : mast.faculty,
													app_id : null,
													source : 'guattestation'
												}
											}).then(function(userMarklist){
												if(userMarklist.length > 0){
													if(userMarklist[0].patteren == "Annual"){
														userMarklist.forEach(marklist=>{
															// academic_year_master.push({
															// 	academic_year : marklist.name
															// })
															differentCollege.push({
																patteren : marklist.patteren,

																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : mast.instructionalDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year,
																college_name: marklist.name
															})
														})
													}else if(userMarklist[0].patteren == "Semester"){
														var semesters = facultyMaster.year * 2;
														for(var i = 2; i <= semesters; i=i+2){
															var sem = "Semester " + i
															userMarklist.forEach(marklist=>{
																if(marklist.name == sem){
																	// if(marklist.name == 'Semester 2'){
																	// 	academic_year_master.push({
																	// 		academic_year : 'First Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 4'){
																	// 	academic_year_master.push({
																	// 		academic_year : 'Second Year'
																	// 	})
																	// }
																	differentCollege.push({
																		faculty : marklist.faculty,
																		collegeId : marklist.collegeId,
																		instructionalDetails : mast.instructionalDetails,
																		type : marklist.type,
																		patteren : marklist.patteren,
																		// college_List : college_List,
																		clg_duration: facultyMaster.year,
																		// college_name: collegename.name,
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(()=>{
										var masters = [];
										differentCollege.forEach(coll=>{
											console.log("coll==."+JSON.stringify(coll))
											models.College.find({
												where :{
													id : coll.collegeId
												}
											}).then(collegename=>{

											var mastFlag = false
											var college = [];
											if(masters.length > 0){
												masters.forEach(mast=>{
													if(mast.faculty == coll.faculty){
														mastFlag = true;
														var count = 0;
														mast.colleges.forEach(clg=>{
															if(clg.collegeId == coll.collegeId){
																count ++;
															}
														})
														if(count <= mast.colleges.length){
															mast.colleges.push({
																collegeId : coll.collegeId
															})
														}

														if(mast.instructionalDetails.length >= 0) {
															mast.form = true;
														}
													}
												})

												if(mastFlag == false){
													college.push({
														collegeId : coll.collegeId
													})

													masters.push({
														faculty : coll.faculty,
														colleges : college,
														instructionalDetails : coll.instructionalDetails,
														type: coll.type +' of '+ coll.faculty,
														college_List : college_List,
														clg_duration : coll.clg_duration,
														college_name: collegename.name,
														form : true,
														patteren : coll.patteren,
														// academic_year : academic_year_master
													})
												}
											}else{
												college.push({
													collegeId : coll.collegeId
												})
												masters.push({
													faculty : coll.faculty,
													colleges :college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration,
													college_name: collegename.name,
													form : true,
													patteren : coll.patteren,
													// academic_year : academic_year_master
												})
											}
										})
									})
										educationDetails.masters = masters;
										models.userMarkList.findAll({
											where :{
												user_id : req.User.id,
												type : "Bachelors",
												app_id : null,
												source : 'guattestation'
											}
										}).then(function(bachelorDetails){
											let clg_duration;
											var differentStream = [];
											// let academic_year_list =[];
											if(bachelorDetails.length >0){
												if(bachelorDetails[0].college_stream_type == true){
													let college_List =[];
													bachelorDetails.forEach(bachelor=>{
														models.College.find({
															where :{
																id : bachelor.collegeId
															}
														}).then(collegename=>{
															if(bachelor.patteren == "Annual"){
																//academic_year = bachelor.name;
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : bachelor.name
																})
															}else if(bachelor.patteren == "Semester"){
																switch(bachelor.name){
																	case 'Semester 2' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'First Year'
																		})
																		break;
																	case 'Semester 4' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'Second Year'
																		})
																		break;
																	case 'Semester 6' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'Third Year'
																		})
																		break;
																	case 'Semester 8' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'Fourth Year'
																		})

																		break;
																	case 'Semester 10' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'Fifth Year'
																		})
																		break;
																}
															}
														models.InstructionalDetails.findAll({
															where:{
																userId : req.User.id,
																education : 'Bachelors_' + bachelor.faculty
															}
														}).then(function(instructionalDetails){
															if(differentStream.length > 0){
																var flag = false;
																differentStream.forEach(single=>{
																	if(single.faculty == bachelor.faculty){
																		flag = true;
																	}
																})
																if(flag == false){

																	differentStream.push({
																		faculty : bachelor.faculty,
																		instructionalDetails : instructionalDetails,
																		type : bachelor.type,
																	})
																}
															}else{
																differentStream.push({
																	faculty : bachelor.faculty,
																	instructionalDetails : instructionalDetails,
																	type : bachelor.type,
																})
															}
														})
													})
													})
													setTimeout(() =>{
														/** Updating college list **/
														// jsonObject = college_List.map(JSON.stringify);
														// console.log("Data===>"+jsonObject);
														// uniqueSet = new Set(jsonObject);
														// Updated_list = Array.from(uniqueSet).map(JSON.parse);
														/** Updating college list **/
														var differentCollege = []
														differentStream.forEach(bach=>{
															models.Program_List.find({
																where :{
																	degree : 'Bachelors',
																	faculty : bach.faculty
																}
															}).then(function(facultyMaster){
																models.userMarkList.findAll({
																	where:{
																		user_id : req.User.id,
																		type : "Bachelors",
																		faculty : bach.faculty,
																		app_id : null,
																		source : 'guattestation'
																	}
																}).then(function(userMarklist){
																	if(userMarklist.length > 0){
																		if(userMarklist[0].patteren == "Annual"){
																			userMarklist.forEach(marklist=>{
																				// academic_year_list.push({
																				// 	academic_year : marklist.name
																				// })
																				differentCollege.push({
																					patteren : marklist.patteren,
																					faculty : marklist.faculty,
																					collegeId : marklist.collegeId,
																					instructionalDetails : bach.instructionalDetails,
																					type : marklist.type,
																					// college_List : college_List.push,
																					clg_duration: facultyMaster.year
																				})
																			})
																		}else if(userMarklist[0].patteren == "Semester"){
																			var semesters = facultyMaster.year * 2;
																			for(var i = 2; i <= semesters; i=i+2){
																				var sem = "Semester " + i
																				userMarklist.forEach(marklist=>{
																					if(marklist.name == sem){
																						// if(marklist.name == 'Semester 2'){
																						// 	academic_year_list.push({
																						// 		academic_year : 'First Year'
																						// 	})
																						// }
																						// if(marklist.name == 'Semester 4'){
																						// 	academic_year_list.push({
																						// 		academic_year : 'Second Year'
																						// 	})
																						// }
																						// if(marklist.name == 'Semester 6'){
																						// 	academic_year_list.push({
																						// 		academic_year : 'Third Year'
																						// 	})
																						// }
																						// if(marklist.name == 'Semester 8'){
																						// 	academic_year_list.push({
																						// 		academic_year : 'Fourth Year'
																						// 	})
																						// }
																						differentCollege.push({
																							faculty : marklist.faculty,
																							patteren : marklist.patteren,
																							collegeId : marklist.collegeId,
																							instructionalDetails : bach.instructionalDetails,
																							type : marklist.type,
																							// college_List : college_List,
																							clg_duration: facultyMaster.year,
																							form : true
																						})
																					}
																				})
																			}
																		}
																	}
																})
															})
														})
														setTimeout(()=>{
															var bachelors = [];
															differentCollege.forEach(coll=>{
																var college = [];
																var bachFlag = false;
																if(bachelors.length > 0){
																	bachelors.forEach(bach=>{
																		if(bach.faculty == coll.faculty){
																			bachFlag = true;
																			var count = 0;
																			bach.colleges.forEach(clg=>{
																				if(clg.collegeId == coll.collegeId){
																					count ++;
																				}
																			})
																			if(count <= bach.colleges.length){
																				bach.colleges.push({
																					collegeId : coll.collegeId
																				})
																			}

																			if(bach.instructionalDetails.length >= 0) {
																				bach.form = true;
																			}
																		}
																	})

																	if(bachFlag == false){
																		college.push({
																			collegeId : coll.collegeId
																		})

																		bachelors.push({
																			faculty : coll.faculty,
																			patteren : coll.patteren,
																			colleges : college,
																			instructionalDetails : coll.instructionalDetails,
																			college_List : college_List,
																			type: coll.type +' of '+ coll.faculty,
																			clg_duration : coll.clg_duration,
																			form : true
																			// academic_year : academic_year_list
																		})
																	}
																}else{
																	college.push({
																		collegeId : coll.collegeId
																	})
																	bachelors.push({
																		faculty : coll.faculty,
																		colleges :college,
																		patteren : coll.patteren,
																		instructionalDetails : coll.instructionalDetails,
																		college_List : college_List,
																		type: coll.type +' of '+ coll.faculty,
																		clg_duration : coll.clg_duration,
																		// academic_year : academic_year_list
																	})
																}
															})
															educationDetails.bachelors = bachelors;
															res.json({
																status : 200,
																data : educationDetails
															})
														},3000)
													},4000)

												}else if(bachelorDetails[0].college_stream_type == false){
													models.College.find({
														where :{
															id : bachelorDetails[0].collegeId
														}
													}).then(collegename=>{
														models.Program_List.find({
															where :{
																degree : 'Bachelors',
																faculty : bachelorDetails[0].faculty
															}
														}).then(function(facultyMaster){
													models.InstructionalDetails.findAll({
														where:{
															userId : req.User.id,
															education : 'Bachelors_' + bachelorDetails[0].faculty
														}
													}).then(function(instructionalDetails){
														var college = [];
														college.push({
															collegeId : bachelorDetails[0].collegeId
														})
														educationDetails.bachelors.push({
															faculty : bachelorDetails[0].faculty,
															patteren : bachelorDetails[0].patteren,
															colleges : college,
															instructionalDetails : instructionalDetails,
															type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
															college_name: collegename.name,
															clg_duration : facultyMaster.year,
															form : true
														})
														res.json({
															status : 200,
															data : educationDetails
														})
													})
												})
											})
												}
											}
										})
									},3000)
								},4000)

							}else if(masterDetails[0].college_stream_type == false){
								console.log("inside stream false");
								// models.College.find({
								// 	where :{
								// 		id : masterDetails[0].collegeId
								// 	}
								// }).then(master_collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Masters',
											faculty : masterDetails[0].faculty
										}
									}).then(function(facultyMaster){
								// models.InstructionalDetails.findAll({
								// 	where:{
								// 		userId : req.User.id,
								// 		education : 'Masters_' + masterDetails[0].faculty
								// 	}
								// }).then(function(instructionalDetails){
									var college = [];
									college.push({
										collegeId : masterDetails[0].collegeId
									})
									educationDetails.masters.push({
										patteren : masterDetails[0].patteren,
										type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
										fullName :uservalues[0].name + ' ' +uservalues[0].surname
									})
									models.userMarkList.findAll({
										where :{
											user_id : req.User.id,
											type : "Bachelors",
											app_id : null,
											source : 'guattestation'
										}
									}).then(function(bachelorDetails){
										// let clg_duration ;
										var differentStream = [];
										if(bachelorDetails.length >0){
											if(bachelorDetails[0].college_stream_type == true){
												let college_List=[];
												bachelorDetails.forEach(bachelor=>{
													models.College.find({
														where :{
															id : bachelor.collegeId
														}
													}).then(collegename=>{
														if(bachelor.patteren == "Annual"){
															//academic_year = bachelor.name;
															college_List.push({
																clg_name : collegename.name,
																academic_year : bachelor.name
															})
														}else if(bachelor.patteren == "Semester"){
															switch(bachelor.name){
																case 'Semester 2' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'First Year'
																	})
																	break;
																case 'Semester 4' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'Second Year'
																	})
																	break;
																case 'Semester 6' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'Third Year'
																	})
																	break;
																case 'Semester 8' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'Fourth Year'
																	})

																	break;
																case 'Semester 10' :
																	college_List.push({
																		clg_name : collegename.name,
																		academic_year : 'Fifth Year'
																	})
																	break;
															}
														}
													models.InstructionalDetails.findAll({
														where:{
															userId : req.User.id,
															education : 'Bachelors_' + bachelor.faculty
														}
													}).then(function(instructionalDetails){
														if(differentStream.length > 0){
															var flag = false;
															differentStream.forEach(single=>{
																if(single.faculty == bachelor.faculty){
																	flag = true;
																}
															})
															if(flag == false){

																differentStream.push({
																	faculty : bachelor.faculty,
																	instructionalDetails : instructionalDetails,
																	type : bachelor.type,
																	patteren : bachelor.patteren,

																})
															}
														}else{
															differentStream.push({
																faculty : bachelor.faculty,
																instructionalDetails : instructionalDetails,
																type : bachelor.type,
																patteren : bachelor.patteren,
															})
														}
													})
												})
												})
												setTimeout(() =>{
													var differentCollege = []
													differentStream.forEach(bach=>{
														models.Program_List.find({
															where :{
																degree : 'Bachelors',
																faculty : bach.faculty
															}
														}).then(function(facultyMaster){
															models.userMarkList.findAll({
																where:{
																	user_id : req.User.id,
																	type : "Bachelors",
																	faculty : bach.faculty,
																	source : 'guattestation'
																}
															}).then(function(userMarklist){
																if(userMarklist.length > 0){
																	userMarklist.forEach(user_Marklist=>{
																		if(user_Marklist.patteren == "Annual"){
																			differentCollege.push({
																				faculty : user_Marklist.faculty,
																				patteren: user_Marklist.patteren,
																				collegeId : user_Marklist.collegeId,
																				instructionalDetails : bach.instructionalDetails,
																				// college_List : college_List,
																				type : user_Marklist.type,
																				clg_duration: facultyMaster.year
																			})
																		}else if(user_Marklist.patteren == "Semester"){
																			var semesters = facultyMaster.year * 2;
																			for(var i = 2; i <= semesters; i=i+2){
																				var sem = "Semester " + i
																				if(user_Marklist.name == sem){
																					differentCollege.push({
																						faculty : user_Marklist.faculty,
																						patteren : user_Marklist.patteren,
																						collegeId : user_Marklist.collegeId,
																						instructionalDetails : bach.instructionalDetails,
																						// college_List : college_List,
																						type : user_Marklist.type,
																						clg_duration: facultyMaster.year
																					})
																				}
																			}
																		}
																	})
																}
															})
														})
													})
													setTimeout(()=>{
														var bachelors = [];
														differentCollege.forEach(coll=>{
															var college = [];
															var bachFlag = false;
															if(bachelors.length > 0){
																bachelors.forEach(bach=>{
																	if(bach.faculty == coll.faculty){
																		bachFlag = true;
																		var count = 0;
																		bach.colleges.forEach(clg=>{
																			if(clg.collegeId == coll.collegeId){
																				count ++;
																			}
																		})
																		if(count <= bach.colleges.length){
																			bach.colleges.push({
																				collegeId : coll.collegeId
																			})
																		}

																		if(bach.instructionalDetails.length > 0) {
																			bach.form = true;
																		}
																	}
																})

																if(bachFlag == false){
																	college.push({
																		collegeId : coll.collegeId
																	})

																	bachelors.push({
																		faculty : coll.faculty,
																		patteren : coll.patteren,
																		colleges : college,
																		instructionalDetails : coll.instructionalDetails,
																		type: coll.type +' of '+ coll.faculty,
																		college_List : college_List,
																		clg_duration : coll.clg_duration,
																	})
																}
															}else{
																college.push({
																	collegeId : coll.collegeId
																})
																bachelors.push({
																	faculty : coll.faculty,
																	patteren : coll.patteren,
																	colleges :college,
																	instructionalDetails : coll.instructionalDetails,
																	type: coll.type +' of '+ coll.faculty,
																	college_List : college_List,
																	clg_duration : coll.clg_duration,
																})
															}
														})
														educationDetails.bachelors = bachelors;
														res.json({
															status : 200,
															data : educationDetails
														})
													},5000)
												},6000)

											}else if(bachelorDetails[0].college_stream_type == false){
												// models.College.find({
												// 	where :{
												// 		id : bachelorDetails[0].collegeId
												// 	}
												// }).then(collegename=>{
													models.Program_List.find({
														where :{
															degree : 'Bachelors',
															faculty : bachelorDetails[0].faculty
														}
													}).then(function(facultyMaster){
												// models.InstructionalDetails.findAll({
												// 	where:{
												// 		userId : req.User.id,
												// 		education : 'Bachelors_' + bachelorDetails[0].faculty
												// 	}
												// }).then(function(instructionalDetails){
													var college = [];
													college.push({
														collegeId : bachelorDetails[0].collegeId
													})
													educationDetails.bachelors.push({
														type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
														fullName :uservalues[0].name + ' ' +uservalues[0].surname,
														patteren : bachelorDetails[0].patteren,

													})
													res.json({
														status : 200,
														data : educationDetails
													})
												// })
											})
										// })
											}

										}else {
											console.log('else');
											setTimeout(()=>{
												res.json({
													status : 200,
													data : educationDetails
												})
											},10000)

										}
										// setTimeout(()=>{
										// 	res.json({
										// 		status : 200,
										// 		data : educationDetails
										// 	})
										// },10000)
									})
								// })
							})
							// })
							}
						}


					})
				}else if(user[0].applying_for == 'Bachelors'){
					console.log("in bachloeors");
					let college_List = [];
					let academic_year_list =[];
					models.userMarkList.findAll({
						where :{
							user_id : req.User.id,
							type : "Bachelors",
							// app_id : null
							source : 'guattestation'
						}
					}).then(function(bachelorDetails){
						var differentStream = [];
						if(bachelorDetails.length >0){
							if(bachelorDetails[0].college_stream_type == true){
								console.log('true');
								bachelorDetails.forEach(bachelor=>{
									// models.College.find({
									// 	where :{
									// 		id : bachelor.collegeId
									// 	}
									// }).then(collegename=>{
									// 	if(bachelor.patteren == "Annual"){
									// 		//academic_year = bachelor.name;
									// 		college_List.push({
									// 			clg_name : collegename.name,
									// 			academic_year : bachelor.name
									// 		})
									// 	}else if(bachelor.patteren == "Semester"){
									// 		switch(bachelor.name){
									// 			case 'Semester 2' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'First Year'
									// 				})
									// 				break;
									// 			case 'Semester 4' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Second Year'
									// 				})
									// 				break;
									// 			case 'Semester 6' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Third Year'
									// 				})
									// 				break;
									// 			case 'Semester 8' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fourth Year'
									// 				})

									// 				break;
									// 			case 'Semester 10' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fifth Year'
									// 				})
									// 				break;
									// 		}
									// 	}

									differentStream.push({
										faculty : bachelor.faculty,
										// instructionalDetails : instructionalDetails,
										type : bachelor.type
									})
									// })
								})
								setTimeout(() =>{
									var differentCollege = []
									differentStream.forEach(bach=>{
										console.log("bach==>"+JSON.stringify(bach))
										models.Program_List.find({
											where :{
												degree : 'Bachelors',
												faculty : bach.faculty
											}
										}).then(function(facultyMaster){
											console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
											models.userMarkList.findAll({
												where:{
													user_id : req.User.id,
													type : "Bachelors",
													faculty : bach.faculty,
													source : 'guattestation'
													// app_id : null
												}
											}).then(function(userMarklist){
												if(userMarklist.length > 0){
													// console.log("userMarklist===>"+JSON.stringify(userMarklist))
													if(userMarklist[0].patteren == "Annual"){
														userMarklist.forEach(marklist=>{
															// college_List.push({
															// 	academic_year : marklist.name
															// })
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																// instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// academic_year : marklist.name,
																// college_List : Updated_list,
																clg_duration: facultyMaster.year
															})
														})
													}else if(userMarklist[0].patteren == "Semester"){
														console.log('semesterrrrr');
														var semesters = facultyMaster.year * 2;
														for(var i = 2; i <= semesters; i=i+2){
															var sem = "Semester " + i
															userMarklist.forEach(marklist=>{

																// console.log("userMarklist===>"+JSON.stringify(marklist))
																if(marklist.name == sem){
																	// if(marklist.name == 'Semester 2'){
																	// 	college_List.push({
																	// 		academic_year : 'First Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 4'){
																	// 	college_List.push({
																	// 		academic_year : 'Second Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 6'){
																	// 	college_List.push({
																	// 		academic_year : 'Third Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 8'){
																	// 	college_List.push({
																	// 		academic_year : 'Fourth Year'
																	// 	})
																	// }
																	differentCollege.push({
																		faculty : marklist.faculty,
																		patteren : marklist.patteren,

																		collegeId : marklist.collegeId,
																		// instructionalDetails : bach.instructionalDetails,
																		type : marklist.type,
																		// college_List : Updated_list,
																		clg_duration: facultyMaster.year
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(()=>{
										console.log('settimeout');
										/** Updating college list **/
									// jsonObject = college_List.map(JSON.stringify);
									// console.log("Data===>"+jsonObject);
									// uniqueSet = new Set(jsonObject);
									// Updated_list = Array.from(uniqueSet).map(JSON.parse);
									/** Updating college list **/
										console.log("college_List===>"+JSON.stringify(college_List))
										var bachelors = [];
										differentCollege.forEach(coll=>{
											var college = [];
											var bachFlag = false;
											if(bachelors.length > 0){
												bachelors.forEach(bach=>{
													if(bach.faculty == coll.faculty){
														bachFlag = true;
														var count = 0;
														bach.colleges.forEach(clg=>{
															if(clg.collegeId == coll.collegeId){
																count ++;
															}
														})
														if(count <= bach.colleges.length){
															bach.colleges.push({
																collegeId : coll.collegeId
															})
														}

														// if(bach.instructionalDetails.length > 0) {
														// 	bach.form = true;
														// }
													}
												})

												if(bachFlag == false){
													college.push({
														collegeId : coll.collegeId
													})

													bachelors.push({
														faculty : coll.faculty,
														patteren : coll.patteren,
														colleges : college,
														instructionalDetails : coll.instructionalDetails,
														type: coll.type +' of '+ coll.faculty,
														college_List : college_List,
														clg_duration : coll.clg_duration,
														// academic_year : academic_year_list
													})
												}
											}else{
												college.push({
													collegeId : coll.collegeId
												})
												bachelors.push({
													faculty : coll.faculty,
													patteren : coll.patteren,
													colleges :college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration,
													fullName :uservalues[0].name + ' ' +uservalues[0].surname

												})
											}
										})
										educationDetails.bachelors = bachelors;
										res.json({
											status : 200,
											data : educationDetails
										})
									},3000)
								},4000)

							}else if(bachelorDetails[0].college_stream_type == false){
								console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
								models.College.find({
									where :{
										id : bachelorDetails[0].collegeId
									}
								}).then(collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Bachelors',
											faculty : bachelorDetails[0].faculty
										}
									}).then(function(facultyMaster){

									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;
									// }
									college.push({
										collegeId : bachelorDetails[0].collegeId
									})
									educationDetails.bachelors.push({
										 faculty : bachelorDetails[0].faculty,
										 patteren : bachelorDetails[0].patteren,
										// colleges : college,
										// instructionalDetails : instructionalDetails,
										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
										fullName :uservalues[0].name + ' ' +uservalues[0].surname
										// college_name: collegename.name,
										// clg_duration : facultyMaster.year,
										// form : true
									})
									res.json({
										status : 200,
										data : educationDetails
									})

								})
							})
							}
						}
					})
				}else if(user[0].applying_for == 'Masters'){
					console.log("in masters");
					let college_List = [];
					let academic_year_list =[];
					models.userMarkList.findAll({
						where :{
							user_id : req.User.id,
							type : "Masters",
							source : 'guattestation'
							// app_id : null
						}
					}).then(function(bachelorDetails){
						var differentStream = [];
						if(bachelorDetails.length >0){
							if(bachelorDetails[0].college_stream_type == true){
								console.log('true');
								bachelorDetails.forEach(bachelor=>{
									// models.College.find({
									// 	where :{
									// 		id : bachelor.collegeId
									// 	}
									// }).then(collegename=>{
									// 	if(bachelor.patteren == "Annual"){
									// 		//academic_year = bachelor.name;
									// 		college_List.push({
									// 			clg_name : collegename.name,
									// 			academic_year : bachelor.name
									// 		})
									// 	}else if(bachelor.patteren == "Semester"){
									// 		switch(bachelor.name){
									// 			case 'Semester 2' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'First Year'
									// 				})
									// 				break;
									// 			case 'Semester 4' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Second Year'
									// 				})
									// 				break;
									// 			case 'Semester 6' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Third Year'
									// 				})
									// 				break;
									// 			case 'Semester 8' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fourth Year'
									// 				})

									// 				break;
									// 			case 'Semester 10' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fifth Year'
									// 				})
									// 				break;
									// 		}
									// 	}

									differentStream.push({
										faculty : bachelor.faculty,
										// instructionalDetails : instructionalDetails,
										type : bachelor.type
									})
									// })
								})
								setTimeout(() =>{
									var differentCollege = []
									differentStream.forEach(bach=>{
										console.log("bach==>"+JSON.stringify(bach))
										models.Program_List.find({
											where :{
												degree : 'Masters',
												faculty : bach.faculty
											}
										}).then(function(facultyMaster){
											console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
											models.userMarkList.findAll({
												where:{
													user_id : req.User.id,
													type : "Masters",
													faculty : bach.faculty,
													source : 'guattestation'
													// app_id : null
												}
											}).then(function(userMarklist){
												if(userMarklist.length > 0){
													// console.log("userMarklist===>"+JSON.stringify(userMarklist))
													if(userMarklist[0].patteren == "Annual"){
														userMarklist.forEach(marklist=>{
															// college_List.push({
															// 	academic_year : marklist.name
															// })
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																// instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// academic_year : marklist.name,
																// college_List : Updated_list,
																clg_duration: facultyMaster.year
															})
														})
													}else if(userMarklist[0].patteren == "Semester"){
														console.log('semesterrrrr');
														var semesters = facultyMaster.year * 2;
														for(var i = 2; i <= semesters; i=i+2){
															var sem = "Semester " + i
															userMarklist.forEach(marklist=>{

																// console.log("userMarklist===>"+JSON.stringify(marklist))
																if(marklist.name == sem){
																	// if(marklist.name == 'Semester 2'){
																	// 	college_List.push({
																	// 		academic_year : 'First Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 4'){
																	// 	college_List.push({
																	// 		academic_year : 'Second Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 6'){
																	// 	college_List.push({
																	// 		academic_year : 'Third Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 8'){
																	// 	college_List.push({
																	// 		academic_year : 'Fourth Year'
																	// 	})
																	// }
																	differentCollege.push({
																		faculty : marklist.faculty,
																		patteren : marklist.patteren,

																		collegeId : marklist.collegeId,
																		// instructionalDetails : bach.instructionalDetails,
																		type : marklist.type,
																		// college_List : Updated_list,
																		clg_duration: facultyMaster.year
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(()=>{
										console.log('settimeout');
										/** Updating college list **/
									// jsonObject = college_List.map(JSON.stringify);
									// console.log("Data===>"+jsonObject);
									// uniqueSet = new Set(jsonObject);
									// Updated_list = Array.from(uniqueSet).map(JSON.parse);
									/** Updating college list **/
										console.log("college_List===>"+JSON.stringify(college_List))
										var masters = [];
										differentCollege.forEach(coll=>{
											var college = [];
											var bachFlag = false;
											if(masters.length > 0){
												masters.forEach(bach=>{
													if(bach.faculty == coll.faculty){
														bachFlag = true;
														var count = 0;
														bach.colleges.forEach(clg=>{
															if(clg.collegeId == coll.collegeId){
																count ++;
															}
														})
														if(count <= bach.colleges.length){
															bach.colleges.push({
																collegeId : coll.collegeId
															})
														}

														// if(bach.instructionalDetails.length > 0) {
														// 	bach.form = true;
														// }
													}
												})

												if(bachFlag == false){
													college.push({
														collegeId : coll.collegeId
													})

													masters.push({
														faculty : coll.faculty,
														patteren : coll.patteren,
														colleges : college,
														// instructionalDetails : coll.instructionalDetails,
														type: coll.type +' of '+ coll.faculty,
														college_List : college_List,
														clg_duration : coll.clg_duration,
														// academic_year : academic_year_list
													})
												}
											}else{
												college.push({
													collegeId : coll.collegeId
												})
												masters.push({
													faculty : coll.faculty,
													patteren : coll.patteren,
													colleges :college,
													// instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration,
													fullName :uservalues[0].name + ' ' +uservalues[0].surname

												})
											}
										})
										educationDetails.masters = masters;
										res.json({
											status : 200,
											data : educationDetails
										})
									},3000)
								},4000)

							}else if(bachelorDetails[0].college_stream_type == false){
								console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
								models.College.find({
									where :{
										id : bachelorDetails[0].collegeId
									}
								}).then(collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Masters',
											faculty : bachelorDetails[0].faculty
										}
									}).then(function(facultyMaster){

									console.log("userrrrr" + uservalues[0].surname);
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;
									// }
									college.push({
										collegeId : bachelorDetails[0].collegeId
									})
									educationDetails.masters.push({
										 faculty : bachelorDetails[0].faculty,
										 patteren : bachelorDetails[0].patteren,
										// colleges : college,
										// instructionalDetails : instructionalDetails,
										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
										fullName :uservalues[0].name + ' ' +uservalues[0].surname
										// college_name: collegename.name,
										// clg_duration : facultyMaster.year,
										// form : true
									})
									res.json({
										status : 200,
										data : educationDetails
									})

								})
							})
							}
						}
					})
				}else if(user[0].applying_for == 'Phd,Masters,Bachelors'){
					console.log("in only Phd");
					let college_List = [];
					let academic_year_list =[];
					models.userMarkList.findAll({
						where :{
							user_id : req.User.id,
							type : "Phd",
							source : 'guattestation'
							// app_id : null
						}
					}).then(function(bachelorDetails){
						var differentStream = [];
						if(bachelorDetails.length >0){
							if(bachelorDetails[0].college_stream_type == true){
								console.log('true');
								bachelorDetails.forEach(bachelor=>{
									// models.College.find({
									// 	where :{
									// 		id : bachelor.collegeId
									// 	}
									// }).then(collegename=>{
									// 	if(bachelor.patteren == "Annual"){
									// 		//academic_year = bachelor.name;
									// 		college_List.push({
									// 			clg_name : collegename.name,
									// 			academic_year : bachelor.name
									// 		})
									// 	}else if(bachelor.patteren == "Semester"){
									// 		switch(bachelor.name){
									// 			case 'Semester 2' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'First Year'
									// 				})
									// 				break;
									// 			case 'Semester 4' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Second Year'
									// 				})
									// 				break;
									// 			case 'Semester 6' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Third Year'
									// 				})
									// 				break;
									// 			case 'Semester 8' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fourth Year'
									// 				})

									// 				break;
									// 			case 'Semester 10' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fifth Year'
									// 				})
									// 				break;
									// 		}
									// 	}

									differentStream.push({
										faculty : bachelor.faculty,
										patteren : bachelor.patteren,
										// instructionalDetails : instructionalDetails,
										type : bachelor.type
									})
									// })
								})
								setTimeout(() =>{
									var differentCollege = []
									differentStream.forEach(bach=>{
										console.log("bach==>"+JSON.stringify(bach))
										models.Program_List.find({
											where :{
												degree : 'Phd',
												faculty : bach.faculty
											}
										}).then(function(facultyMaster){
											console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
											models.userMarkList.findAll({
												where:{
													user_id : req.User.id,
													type : "Phd",
													faculty : bach.faculty,
													source : 'guattestation'
													// app_id : null
												}
											}).then(function(userMarklist){
												if(userMarklist.length > 0){
													// console.log("userMarklist===>"+JSON.stringify(userMarklist))
													if(userMarklist[0].patteren == "Annual"){
														userMarklist.forEach(marklist=>{
															// college_List.push({
															// 	academic_year : marklist.name
															// })
															differentCollege.push({
																faculty : marklist.faculty,
																patteren : marklist.patteren,
																collegeId : marklist.collegeId,
																// instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// academic_year : marklist.name,
																// college_List : Updated_list,
																clg_duration: facultyMaster.year
															})
														})
													}else if(userMarklist[0].patteren == "Semester"){
														console.log('semesterrrrr');
														var semesters = facultyMaster.year * 2;
														for(var i = 2; i <= semesters; i=i+2){
															var sem = "Semester " + i
															userMarklist.forEach(marklist=>{

																// console.log("userMarklist===>"+JSON.stringify(marklist))
																if(marklist.name == sem){
																	// if(marklist.name == 'Semester 2'){
																	// 	college_List.push({
																	// 		academic_year : 'First Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 4'){
																	// 	college_List.push({
																	// 		academic_year : 'Second Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 6'){
																	// 	college_List.push({
																	// 		academic_year : 'Third Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 8'){
																	// 	college_List.push({
																	// 		academic_year : 'Fourth Year'
																	// 	})
																	// }
																	differentCollege.push({
																		faculty : marklist.faculty,
																		patteren : marklist.patteren,
																		collegeId : marklist.collegeId,
																		// instructionalDetails : bach.instructionalDetails,
																		type : marklist.type,
																		// college_List : Updated_list,
																		clg_duration: facultyMaster.year
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(()=>{
										console.log('settimeout');
										/** Updating college list **/
									// jsonObject = college_List.map(JSON.stringify);
									// console.log("Data===>"+jsonObject);
									// uniqueSet = new Set(jsonObject);
									// Updated_list = Array.from(uniqueSet).map(JSON.parse);
									/** Updating college list **/
										console.log("college_List===>"+JSON.stringify(college_List))
										var phd = [];
										differentCollege.forEach(coll=>{
											var college = [];
											var bachFlag = false;
											if(phd.length > 0){
												phd.forEach(bach=>{
													if(bach.faculty == coll.faculty){
														bachFlag = true;
														var count = 0;
														bach.colleges.forEach(clg=>{
															if(clg.collegeId == coll.collegeId){
																count ++;
															}
														})
														if(count <= bach.colleges.length){
															bach.colleges.push({
																collegeId : coll.collegeId
															})
														}

														// if(bach.instructionalDetails.length > 0) {
														// 	bach.form = true;
														// }
													}
												})

												if(bachFlag == false){
													college.push({
														collegeId : coll.collegeId
													})

													phd.push({
														faculty : coll.faculty,
														patteren : coll.patteren,
														colleges : college,
														instructionalDetails : coll.instructionalDetails,
														type: coll.type +' of '+ coll.faculty,
														college_List : college_List,
														clg_duration : coll.clg_duration,
														// academic_year : academic_year_list
													})
												}
											}else{
												college.push({
													collegeId : coll.collegeId
												})
												phd.push({
													faculty : coll.faculty,
													patteren : coll.patteren,
													colleges :college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration,
													fullName :uservalues[0].name + ' ' +uservalues[0].surname
													// academic_year : academic_year_list
												})
											}
										})
										educationDetails.phd = phd;
										res.json({
											status : 200,
											data : educationDetails
										})
									},3000)
								},4000)

							}else if(bachelorDetails[0].college_stream_type == false){
								console.log("Phd[0].===>"+JSON.stringify(bachelorDetails[0]))
								models.College.find({
									where :{
										id : bachelorDetails[0].collegeId
									}
								}).then(collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Phd',
											faculty : bachelorDetails[0].faculty
										}
									}).then(function(facultyMaster){
								// models.Hrd_details.findAll({
								// 	where:{
								// 		userId : req.User.id,
								// 		education : 'Bachelors_' + bachelorDetails[0].faculty
								// 	}
								// }).then(function(instructionalDetails){
									console.log("userrrrr" + uservalues[0].name );
									console.log("userrrrr" + uservalues[0].surname);
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;
									// }
									college.push({
										collegeId : bachelorDetails[0].collegeId
									})
									educationDetails.phd.push({
										 patteren : bachelorDetails[0].patteren,
										// colleges : college,
										// instructionalDetails : instructionalDetails,
										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
										fullName :uservalues[0].name + ' ' +uservalues[0].surname
										// college_name: collegename.name,
										// clg_duration : facultyMaster.year,
										// form : true
									})

									res.json({
										status : 200,
										data : educationDetails
									})
								// })
								})
							})
							}
						}
					})
				}
			}else{
				console.log("user[0].applying_for" +user[0].applying_for );
				if(user[0].applying_for == 'Masters,Bachelors'){
					console.log("'Masters,Bachelors");
					models.userMarkList.findAll({
						where :{
							user_id : req.User.id,
							type : "Masters",
							source : 'guattestation'
							// app_id : null
						}
					}).then(function(masterDetails){
						let masters_duration;
						var differentStream = [];
						if(masterDetails.length >0){
							if(masterDetails[0].college_stream_type == true){
								console.log("colege strea,, true");
								let college_List=[]
								let academic_year_master =[]
								masterDetails.forEach(master=>{
										// models.InstructionalDetails.findAll({
										// 	where:{
										// 		userId : req.User.id,
										// 		education : 'Masters_' + master.faculty
										// 	}
										// }).then(function(instructionalDetails){
											// if(differentStream.length > 0){
											// 	var flag = false;
											// 	differentStream.forEach(single=>{
											// 		if(single.faculty == master.faculty){
											// 			flag = true;
											// 		}
											// 	})
											// 	if(flag == false){

											// 		differentStream.push({
											// 			faculty : master.faculty,
											// 			instructionalDetails : instructionalDetails,
											// 			type : master.type
											// 		})
											// 	}
											// }else{
												differentStream.push({
													faculty : master.faculty,
													patteren : master.patteren,
													instructionalDetails : instructionalDetails,
													type : master.type
												})
											// }
										// })
									// })
								})
								setTimeout(() =>{
									/** Updating college list **/
									// jsonObject = college_List.map(JSON.stringify);
									// console.log("Data===>"+jsonObject);
									// uniqueSet = new Set(jsonObject);
									// Updated_list = Array.from(uniqueSet).map(JSON.parse);
									/** Updating college list **/
									var differentCollege = []
									differentStream.forEach(mast=>{
										console.log("mast==>"+JSON.stringify(mast))
										models.Program_List.find({
											where :{
												degree : 'Masters',
												faculty : mast.faculty
											}
										}).then(function(facultyMaster){
											models.userMarkList.findAll({
												where:{
													user_id : req.User.id,
													type : "Masters",
													faculty : mast.faculty,
													app_id : null,
													source : 'guattestation'
												}
											}).then(function(userMarklist){
												if(userMarklist.length > 0){
													if(userMarklist[0].patteren == "Annual"){
														userMarklist.forEach(marklist=>{
															// academic_year_master.push({
															// 	academic_year : marklist.name
															// })
															differentCollege.push({
																faculty : marklist.faculty,
																patteren : marklist.patteren,
																collegeId : marklist.collegeId,
																instructionalDetails : mast.instructionalDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year,
																college_name: marklist.name
															})
														})
													}else if(userMarklist[0].patteren == "Semester"){
														var semesters = facultyMaster.year * 2;
														for(var i = 2; i <= semesters; i=i+2){
															var sem = "Semester " + i
															userMarklist.forEach(marklist=>{
																if(marklist.name == sem){
																	// if(marklist.name == 'Semester 2'){
																	// 	academic_year_master.push({
																	// 		academic_year : 'First Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 4'){
																	// 	academic_year_master.push({
																	// 		academic_year : 'Second Year'
																	// 	})
																	// }
																	differentCollege.push({
																		faculty : marklist.faculty,
																		patteren : marklist.patteren,
																		collegeId : marklist.collegeId,
																		instructionalDetails : mast.instructionalDetails,
																		type : marklist.type,
																		// college_List : college_List,
																		clg_duration: facultyMaster.year,
																		// college_name: collegename.name,
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(()=>{
										var masters = [];
										differentCollege.forEach(coll=>{
											console.log("coll==."+JSON.stringify(coll))
											models.College.find({
												where :{
													id : coll.collegeId
												}
											}).then(collegename=>{

											var mastFlag = false
											var college = [];
											if(masters.length > 0){
												masters.forEach(mast=>{
													if(mast.faculty == coll.faculty){
														mastFlag = true;
														var count = 0;
														mast.colleges.forEach(clg=>{
															if(clg.collegeId == coll.collegeId){
																count ++;
															}
														})
														if(count <= mast.colleges.length){
															mast.colleges.push({
																collegeId : coll.collegeId
															})
														}

														// if(mast.instructionalDetails.length >= 0) {
														// 	mast.form = true;
														// }
													}
												})

												if(mastFlag == false){
													college.push({
														collegeId : coll.collegeId
													})

													masters.push({
														faculty : coll.faculty,
														patteren : coll.patteren,
														colleges : college,
														instructionalDetails : coll.instructionalDetails,
														type: coll.type +' of '+ coll.faculty,
														college_List : college_List,
														clg_duration : coll.clg_duration,
														college_name: collegename.name,
														form : true
														// academic_year : academic_year_master
													})
												}
											}else{
												college.push({
													collegeId : coll.collegeId
												})
												masters.push({
													faculty : coll.faculty,
													patteren : coll.patteren,
													colleges :college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration,
													college_name: collegename.name,
													form : true
													// academic_year : academic_year_master
												})
											}
										})
									})
										educationDetails.masters = masters;
										models.userMarkList.findAll({
											where :{
												user_id : req.User.id,
												type : "Bachelors",
												app_id : null,
												source : 'guattestation'
											}
										}).then(function(bachelorDetails){
											let clg_duration;
											var differentStream = [];
											// let academic_year_list =[];
											if(bachelorDetails.length >0){
												if(bachelorDetails[0].college_stream_type == true){
													let college_List =[];
													bachelorDetails.forEach(bachelor=>{
														models.College.find({
															where :{
																id : bachelor.collegeId
															}
														}).then(collegename=>{
															if(bachelor.patteren == "Annual"){
																//academic_year = bachelor.name;
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : bachelor.name
																})
															}else if(bachelor.patteren == "Semester"){
																switch(bachelor.name){
																	case 'Semester 2' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'First Year'
																		})
																		break;
																	case 'Semester 4' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'Second Year'
																		})
																		break;
																	case 'Semester 6' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'Third Year'
																		})
																		break;
																	case 'Semester 8' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'Fourth Year'
																		})

																		break;
																	case 'Semester 10' :
																		college_List.push({
																			clg_name : collegename.name,
																			academic_year : 'Fifth Year'
																		})
																		break;
																}
															}
														models.InstructionalDetails.findAll({
															where:{
																userId : req.User.id,
																education : 'Bachelors_' + bachelor.faculty
															}
														}).then(function(instructionalDetails){
															if(differentStream.length > 0){
																var flag = false;
																differentStream.forEach(single=>{
																	if(single.faculty == bachelor.faculty){
																		flag = true;
																	}
																})
																if(flag == false){

																	differentStream.push({
																		faculty : bachelor.faculty,
																		patteren : bachelor.patteren,
																		instructionalDetails : instructionalDetails,
																		type : bachelor.type,
																	})
																}
															}else{
																differentStream.push({
																	faculty : bachelor.faculty,
																	patteren : bachelor.patteren,
																	instructionalDetails : instructionalDetails,
																	type : bachelor.type,
																})
															}
														})
													})
													})
													setTimeout(() =>{
														/** Updating college list **/
														// jsonObject = college_List.map(JSON.stringify);
														// console.log("Data===>"+jsonObject);
														// uniqueSet = new Set(jsonObject);
														// Updated_list = Array.from(uniqueSet).map(JSON.parse);
														/** Updating college list **/
														var differentCollege = []
														differentStream.forEach(bach=>{
															models.Program_List.find({
																where :{
																	degree : 'Bachelors',
																	faculty : bach.faculty
																}
															}).then(function(facultyMaster){
																models.userMarkList.findAll({
																	where:{
																		user_id : req.User.id,
																		type : "Bachelors",
																		faculty : bach.faculty,
																		app_id : null,
																		source : 'guattestation'
																	}
																}).then(function(userMarklist){
																	if(userMarklist.length > 0){
																		if(userMarklist[0].patteren == "Annual"){
																			userMarklist.forEach(marklist=>{
																				// academic_year_list.push({
																				// 	academic_year : marklist.name
																				// })
																				differentCollege.push({
																					faculty : marklist.faculty,
																					patteren : marklist.patteren,
																					collegeId : marklist.collegeId,
																					instructionalDetails : bach.instructionalDetails,
																					type : marklist.type,
																					// college_List : college_List.push,
																					clg_duration: facultyMaster.year
																				})
																			})
																		}else if(userMarklist[0].patteren == "Semester"){
																			var semesters = facultyMaster.year * 2;
																			for(var i = 2; i <= semesters; i=i+2){
																				var sem = "Semester " + i
																				userMarklist.forEach(marklist=>{
																					if(marklist.name == sem){
																						// if(marklist.name == 'Semester 2'){
																						// 	academic_year_list.push({
																						// 		academic_year : 'First Year'
																						// 	})
																						// }
																						// if(marklist.name == 'Semester 4'){
																						// 	academic_year_list.push({
																						// 		academic_year : 'Second Year'
																						// 	})
																						// }
																						// if(marklist.name == 'Semester 6'){
																						// 	academic_year_list.push({
																						// 		academic_year : 'Third Year'
																						// 	})
																						// }
																						// if(marklist.name == 'Semester 8'){
																						// 	academic_year_list.push({
																						// 		academic_year : 'Fourth Year'
																						// 	})
																						// }
																						differentCollege.push({
																							faculty : marklist.faculty,
																							patteren : marklist.patteren,
																							collegeId : marklist.collegeId,
																							instructionalDetails : bach.instructionalDetails,
																							type : marklist.type,
																							// college_List : college_List,
																							clg_duration: facultyMaster.year,
																							form : true
																						})
																					}
																				})
																			}
																		}
																	}
																})
															})
														})
														setTimeout(()=>{
															var bachelors = [];
															differentCollege.forEach(coll=>{
																var college = [];
																var bachFlag = false;
																if(bachelors.length > 0){
																	bachelors.forEach(bach=>{
																		if(bach.faculty == coll.faculty){
																			bachFlag = true;
																			var count = 0;
																			bach.colleges.forEach(clg=>{
																				if(clg.collegeId == coll.collegeId){
																					count ++;
																				}
																			})
																			if(count <= bach.colleges.length){
																				bach.colleges.push({
																					collegeId : coll.collegeId
																				})
																			}

																			// if(bach.instructionalDetails.length >= 0) {
																			// 	bach.form = true;
																			// }
																		}
																	})

																	if(bachFlag == false){
																		college.push({
																			collegeId : coll.collegeId
																		})

																		bachelors.push({
																			faculty : coll.faculty,
																			patteren : coll.patteren,
																			colleges : college,
																			instructionalDetails : coll.instructionalDetails,
																			college_List : college_List,
																			type: coll.type +' of '+ coll.faculty,
																			clg_duration : coll.clg_duration,
																			form : true
																			// academic_year : academic_year_list
																		})
																	}
																}else{
																	college.push({
																		collegeId : coll.collegeId
																	})
																	bachelors.push({
																		faculty : coll.faculty,
																		patteren : coll.patteren,
																		colleges :college,
																		instructionalDetails : coll.instructionalDetails,
																		college_List : college_List,
																		type: coll.type +' of '+ coll.faculty,
																		clg_duration : coll.clg_duration,
																		// academic_year : academic_year_list
																	})
																}
															})
															educationDetails.bachelors = bachelors;
															res.json({
																status : 200,
																data : educationDetails
															})
														},3000)
													},4000)

												}else if(bachelorDetails[0].college_stream_type == false){
													models.College.find({
														where :{
															id : bachelorDetails[0].collegeId
														}
													}).then(collegename=>{
														models.Program_List.find({
															where :{
																degree : 'Bachelors',
																faculty : bachelorDetails[0].faculty
															}
														}).then(function(facultyMaster){
													models.InstructionalDetails.findAll({
														where:{
															userId : req.User.id,
															education : 'Bachelors_' + bachelorDetails[0].faculty
														}
													}).then(function(instructionalDetails){
														var college = [];
														college.push({
															collegeId : bachelorDetails[0].collegeId
														})
														educationDetails.bachelors.push({
															faculty : bachelorDetails[0].faculty,
															patteren : bachelorDetails[0].patteren,
															colleges : college,
															instructionalDetails : instructionalDetails,
															type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
															college_name: collegename.name,
															clg_duration : facultyMaster.year,
															form : true
														})
														res.json({
															status : 200,
															data : educationDetails
														})
													})
												})
											})
												}
											}
										})
									},3000)
								},4000)

							}else if(masterDetails[0].college_stream_type == false){
								// models.College.find({
								// 	where :{
								// 		id : masterDetails[0].collegeId
								// 	}
								// }).then(master_collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Masters',
											faculty : masterDetails[0].faculty
										}
									}).then(function(facultyMaster){
								// models.InstructionalDetails.findAll({
								// 	where:{
								// 		userId : req.User.id,
								// 		education : 'Masters_' + masterDetails[0].faculty
								// 	}
								// }).then(function(instructionalDetails){
									var college = [];
									college.push({
										collegeId : masterDetails[0].collegeId
									})
									educationDetails.masters.push({
										 patteren : masterDetails[0].patteren,
										// colleges : college,
										// // instructionalDetails : instructionalDetails,
										// type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
										// // college_name: master_collegename.name,
										// clg_duration :  facultyMaster.year,
										// form : masterDetails
										type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
										fullName :uservalues[0].name + ' ' +uservalues[0].surname
									})
									models.userMarkList.findAll({
										where :{
											user_id : req.User.id,
											type : "Bachelors",
											app_id : null,
											source : 'guattestation'
										}
									}).then(function(bachelorDetails){
										// let clg_duration ;
										var differentStream = [];
										if(bachelorDetails.length >0){
											if(bachelorDetails[0].college_stream_type == true){
												let college_List=[];
												bachelorDetails.forEach(bachelor=>{


														if(differentStream.length > 0){
															var flag = false;
															differentStream.forEach(single=>{
																if(single.faculty == bachelor.faculty){
																	flag = true;
																}
															})
															if(flag == false){

																differentStream.push({
																	faculty : bachelor.faculty,
																	patteren : bachelor.patteren,
																	instructionalDetails : instructionalDetails,
																	type : bachelor.type,
																})
															}
														}else{
															differentStream.push({
																faculty : bachelor.faculty,
																patteren : bachelor.patteren,
																instructionalDetails : instructionalDetails,
																type : bachelor.type,
															})
														}
													// })
												// })
												})
												setTimeout(() =>{
													var differentCollege = []
													differentStream.forEach(bach=>{
														models.Program_List.find({
															where :{
																degree : 'Bachelors',
																faculty : bach.faculty
															}
														}).then(function(facultyMaster){
															models.userMarkList.findAll({
																where:{
																	user_id : req.User.id,
																	type : "Bachelors",
																	faculty : bach.faculty,
																	source : 'guattestation'
																}
															}).then(function(userMarklist){
																if(userMarklist.length > 0){
																	userMarklist.forEach(user_Marklist=>{
																		if(user_Marklist.patteren == "Annual"){
																			differentCollege.push({
																				faculty : user_Marklist.faculty,
																				patteren : user_Marklist.patteren,
																				collegeId : user_Marklist.collegeId,
																				instructionalDetails : bach.instructionalDetails,
																				// college_List : college_List,
																				type : user_Marklist.type,
																				clg_duration: facultyMaster.year
																			})
																		}else if(user_Marklist.patteren == "Semester"){
																			var semesters = facultyMaster.year * 2;
																			for(var i = 2; i <= semesters; i=i+2){
																				var sem = "Semester " + i
																				if(user_Marklist.name == sem){
																					differentCollege.push({
																						faculty : user_Marklist.faculty,
																						patteren : user_Marklist.patteren,
																						collegeId : user_Marklist.collegeId,
																						instructionalDetails : bach.instructionalDetails,
																						// college_List : college_List,
																						type : user_Marklist.type,
																						clg_duration: facultyMaster.year
																					})
																				}
																			}
																		}
																	})
																}
															})
														})
													})
													setTimeout(()=>{
														var bachelors = [];
														differentCollege.forEach(coll=>{
															var college = [];
															var bachFlag = false;
															if(bachelors.length > 0){
																bachelors.forEach(bach=>{
																	if(bach.faculty == coll.faculty){
																		bachFlag = true;
																		var count = 0;
																		bach.colleges.forEach(clg=>{
																			if(clg.collegeId == coll.collegeId){
																				count ++;
																			}
																		})
																		if(count <= bach.colleges.length){
																			bach.colleges.push({
																				collegeId : coll.collegeId
																			})
																		}

																		if(bach.instructionalDetails.length > 0) {
																			bach.form = true;
																		}
																	}
																})

																if(bachFlag == false){
																	college.push({
																		collegeId : coll.collegeId
																	})

																	bachelors.push({
																		faculty : coll.faculty,
																		patteren : coll.patteren,
																		colleges : college,
																		instructionalDetails : coll.instructionalDetails,
																		type: coll.type +' of '+ coll.faculty,
																		college_List : college_List,
																		clg_duration : coll.clg_duration,
																	})
																}
															}else{
																college.push({
																	collegeId : coll.collegeId
																})
																bachelors.push({
																	faculty : coll.faculty,
																	patteren : coll.patteren,
																	colleges :college,
																	instructionalDetails : coll.instructionalDetails,
																	type: coll.type +' of '+ coll.faculty,
																	college_List : college_List,
																	clg_duration : coll.clg_duration,
																})
															}
														})
														educationDetails.bachelors = bachelors;
														res.json({
															status : 200,
															data : educationDetails
														})
													},5000)
												},6000)

											}else if(bachelorDetails[0].college_stream_type == false){
												// models.College.find({
												// 	where :{
												// 		id : bachelorDetails[0].collegeId
												// 	}
												// }).then(collegename=>{
													models.Program_List.find({
														where :{
															degree : 'Bachelors',
															faculty : bachelorDetails[0].faculty
														}
													}).then(function(facultyMaster){
												// models.InstructionalDetails.findAll({
												// 	where:{
												// 		userId : req.User.id,
												// 		education : 'Bachelors_' + bachelorDetails[0].faculty
												// 	}
												// }).then(function(instructionalDetails){
													var college = [];
													college.push({
														collegeId : bachelorDetails[0].collegeId
													})
													educationDetails.bachelors.push({
														type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
														patteren: bachelorDetails[0].patteren,
														fullName :uservalues[0].name + ' ' +uservalues[0].surname
													})
													res.json({
														status : 200,
														data : educationDetails
													})
												// })
											})
										// })
											}

										}else {
											console.log('else');
											setTimeout(()=>{
												res.json({
													status : 200,
													data : educationDetails
												})
											},10000)

										}
										// setTimeout(()=>{
										// 	res.json({
										// 		status : 200,
										// 		data : educationDetails
										// 	})
										// },10000)
									})
								// })
							})
							// })
							}
						}


					})
				}else if(user[0].applying_for == 'Bachelors'){
					console.log("in bachloeors");
					let college_List = [];
					let academic_year_list =[];
					models.userMarkList.findAll({
						where :{
							user_id : req.User.id,
							type : "Bachelors",
							source : 'guattestation'
							// app_id : null
						}
					}).then(function(bachelorDetails){
						var differentStream = [];
						if(bachelorDetails.length >0){
							if(bachelorDetails[0].college_stream_type == true){
								console.log('true');
								bachelorDetails.forEach(bachelor=>{
									// models.College.find({
									// 	where :{
									// 		id : bachelor.collegeId
									// 	}
									// }).then(collegename=>{
									// 	if(bachelor.patteren == "Annual"){
									// 		//academic_year = bachelor.name;
									// 		college_List.push({
									// 			clg_name : collegename.name,
									// 			academic_year : bachelor.name
									// 		})
									// 	}else if(bachelor.patteren == "Semester"){
									// 		switch(bachelor.name){
									// 			case 'Semester 2' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'First Year'
									// 				})
									// 				break;
									// 			case 'Semester 4' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Second Year'
									// 				})
									// 				break;
									// 			case 'Semester 6' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Third Year'
									// 				})
									// 				break;
									// 			case 'Semester 8' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fourth Year'
									// 				})

									// 				break;
									// 			case 'Semester 10' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fifth Year'
									// 				})
									// 				break;
									// 		}
									// 	}

									differentStream.push({
										faculty : bachelor.faculty,
										patteren : bachelor.patteren,
										// instructionalDetails : instructionalDetails,
										type : bachelor.type
									})
									// })
								})
								setTimeout(() =>{
									var differentCollege = []
									differentStream.forEach(bach=>{
										console.log("bach==>"+JSON.stringify(bach))
										models.Program_List.find({
											where :{
												degree : 'Bachelors',
												faculty : bach.faculty
											}
										}).then(function(facultyMaster){
											console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
											models.userMarkList.findAll({
												where:{
													user_id : req.User.id,
													type : "Bachelors",
													faculty : bach.faculty,
													// app_id : null
													source : 'guattestation'
												}
											}).then(function(userMarklist){
												if(userMarklist.length > 0){
													// console.log("userMarklist===>"+JSON.stringify(userMarklist))
													if(userMarklist[0].patteren == "Annual"){
														userMarklist.forEach(marklist=>{
															// college_List.push({
															// 	academic_year : marklist.name
															// })
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																// instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// academic_year : marklist.name,
																// college_List : Updated_list,
																clg_duration: facultyMaster.year
															})
														})
													}else if(userMarklist[0].patteren == "Semester"){
														console.log('semesterrrrr');
														var semesters = facultyMaster.year * 2;
														for(var i = 2; i <= semesters; i=i+2){
															var sem = "Semester " + i
															userMarklist.forEach(marklist=>{

																// console.log("userMarklist===>"+JSON.stringify(marklist))
																if(marklist.name == sem){
																	// if(marklist.name == 'Semester 2'){
																	// 	college_List.push({
																	// 		academic_year : 'First Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 4'){
																	// 	college_List.push({
																	// 		academic_year : 'Second Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 6'){
																	// 	college_List.push({
																	// 		academic_year : 'Third Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 8'){
																	// 	college_List.push({
																	// 		academic_year : 'Fourth Year'
																	// 	})
																	// }
																	differentCollege.push({
																		faculty : marklist.faculty,
																		patteren : marklist.patteren,
																		collegeId : marklist.collegeId,
																		// instructionalDetails : bach.instructionalDetails,
																		type : marklist.type,
																		// college_List : Updated_list,
																		clg_duration: facultyMaster.year
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(()=>{
										console.log('settimeout');
										/** Updating college list **/
									// jsonObject = college_List.map(JSON.stringify);
									// console.log("Data===>"+jsonObject);
									// uniqueSet = new Set(jsonObject);
									// Updated_list = Array.from(uniqueSet).map(JSON.parse);
									/** Updating college list **/
										console.log("college_List===>"+JSON.stringify(college_List))
										var bachelors = [];
										differentCollege.forEach(coll=>{
											var college = [];
											var bachFlag = false;
											if(bachelors.length > 0){
												bachelors.forEach(bach=>{
													if(bach.faculty == coll.faculty){
														bachFlag = true;
														var count = 0;
														bach.colleges.forEach(clg=>{
															if(clg.collegeId == coll.collegeId){
																count ++;
															}
														})
														if(count <= bach.colleges.length){
															bach.colleges.push({
																collegeId : coll.collegeId
															})
														}

														// if(bach.instructionalDetails.length > 0) {
														// 	bach.form = true;
														// }
													}
												})

												if(bachFlag == false){
													college.push({
														collegeId : coll.collegeId
													})

													bachelors.push({
														faculty : coll.faculty,
														patteren : coll.patteren,
														colleges : college,
														instructionalDetails : coll.instructionalDetails,
														type: coll.type +' of '+ coll.faculty,
														college_List : college_List,
														clg_duration : coll.clg_duration,
														// academic_year : academic_year_list
													})
												}
											}else{
												college.push({
													collegeId : coll.collegeId
												})
												bachelors.push({
													faculty : coll.faculty,
													patteren : coll.patteren,
													colleges :college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration,
													// academic_year : academic_year_list
												})
											}
										})
										educationDetails.bachelors = bachelors;
										res.json({
											status : 200,
											data : educationDetails
										})
									},3000)
								},4000)

							}else if(bachelorDetails[0].college_stream_type == false){
								console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
								models.College.find({
									where :{
										id : bachelorDetails[0].collegeId
									}
								}).then(collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Bachelors',
											faculty : bachelorDetails[0].faculty
										}
									}).then(function(facultyMaster){
										console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Bachelors_' + bachelorDetails[0].faculty
									}
								}).then(function(instructionalDetails){
									console.log("userrrrr" + uservalues[0].name );
									console.log("userrrrr" + uservalues[0].surname);
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;
									// }
									college.push({
										collegeId : bachelorDetails[0].collegeId
									})
									educationDetails.bachelors.push({
										patteren : bachelorDetails[0].patteren,
										// colleges : college,
										// instructionalDetails : instructionalDetails,
										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
										fullName :uservalues[0].name + ' ' +uservalues[0].surname
										// college_name: collegename.name,
										// clg_duration : facultyMaster.year,
										// form : true
									})
									res.json({
										status : 200,
										data : educationDetails
									})
								})
								})
							})
							}
						}
					})
				}else if(user[0].applying_for == 'Masters'){
					console.log("in Masters");
					let college_List = [];
					let academic_year_list =[];
					models.userMarkList.findAll({
						where :{
							user_id : req.User.id,
							type : "Masters",
							// app_id : null
							source : 'guattestation'
						}
					}).then(function(bachelorDetails){
						var differentStream = [];
						if(bachelorDetails.length >0){
							if(bachelorDetails[0].college_stream_type == true){
								console.log('true');
								bachelorDetails.forEach(bachelor=>{
									// models.College.find({
									// 	where :{
									// 		id : bachelor.collegeId
									// 	}
									// }).then(collegename=>{
									// 	if(bachelor.patteren == "Annual"){
									// 		//academic_year = bachelor.name;
									// 		college_List.push({
									// 			clg_name : collegename.name,
									// 			academic_year : bachelor.name
									// 		})
									// 	}else if(bachelor.patteren == "Semester"){
									// 		switch(bachelor.name){
									// 			case 'Semester 2' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'First Year'
									// 				})
									// 				break;
									// 			case 'Semester 4' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Second Year'
									// 				})
									// 				break;
									// 			case 'Semester 6' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Third Year'
									// 				})
									// 				break;
									// 			case 'Semester 8' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fourth Year'
									// 				})

									// 				break;
									// 			case 'Semester 10' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fifth Year'
									// 				})
									// 				break;
									// 		}
									// 	}

									differentStream.push({
										faculty : bachelor.faculty,
										// instructionalDetails : instructionalDetails,
										type : bachelor.type
									})
									// })
								})
								setTimeout(() =>{
									var differentCollege = []
									differentStream.forEach(bach=>{
										console.log("bach==>"+JSON.stringify(bach))
										models.Program_List.find({
											where :{
												degree : 'Masters',
												faculty : bach.faculty
											}
										}).then(function(facultyMaster){
											console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
											models.userMarkList.findAll({
												where:{
													user_id : req.User.id,
													type : "Masters",
													faculty : bach.faculty,
													// app_id : null
													source : 'guattestation'
												}
											}).then(function(userMarklist){
												if(userMarklist.length > 0){
													// console.log("userMarklist===>"+JSON.stringify(userMarklist))
													if(userMarklist[0].patteren == "Annual"){
														userMarklist.forEach(marklist=>{
															// college_List.push({
															// 	academic_year : marklist.name
															// })
															differentCollege.push({
																faculty : marklist.faculty,
																patteren : marklist.patteren,
																collegeId : marklist.collegeId,
																// instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// academic_year : marklist.name,
																// college_List : Updated_list,
																clg_duration: facultyMaster.year
															})
														})
													}else if(userMarklist[0].patteren == "Semester"){
														console.log('semesterrrrr');
														var semesters = facultyMaster.year * 2;
														for(var i = 2; i <= semesters; i=i+2){
															var sem = "Semester " + i
															userMarklist.forEach(marklist=>{

																// console.log("userMarklist===>"+JSON.stringify(marklist))
																if(marklist.name == sem){
																	// if(marklist.name == 'Semester 2'){
																	// 	college_List.push({
																	// 		academic_year : 'First Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 4'){
																	// 	college_List.push({
																	// 		academic_year : 'Second Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 6'){
																	// 	college_List.push({
																	// 		academic_year : 'Third Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 8'){
																	// 	college_List.push({
																	// 		academic_year : 'Fourth Year'
																	// 	})
																	// }
																	differentCollege.push({
																		faculty : marklist.faculty,
																		patteren : marklist.patteren,
																		collegeId : marklist.collegeId,
																		// instructionalDetails : bach.instructionalDetails,
																		type : marklist.type,
																		// college_List : Updated_list,
																		clg_duration: facultyMaster.year
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(()=>{
										console.log('settimeout');
										/** Updating college list **/
									// jsonObject = college_List.map(JSON.stringify);
									// console.log("Data===>"+jsonObject);
									// uniqueSet = new Set(jsonObject);
									// Updated_list = Array.from(uniqueSet).map(JSON.parse);
									/** Updating college list **/
										console.log("college_List===>"+JSON.stringify(college_List))
										var masters = [];
										differentCollege.forEach(coll=>{
											var college = [];
											var bachFlag = false;
											if(masters.length > 0){
												masters.forEach(bach=>{
													if(bach.faculty == coll.faculty){
														bachFlag = true;
														var count = 0;
														bach.colleges.forEach(clg=>{
															if(clg.collegeId == coll.collegeId){
																count ++;
															}
														})
														if(count <= bach.colleges.length){
															bach.colleges.push({
																collegeId : coll.collegeId
															})
														}

														// if(bach.instructionalDetails.length > 0) {
														// 	bach.form = true;
														// }
													}
												})

												if(bachFlag == false){
													college.push({
														collegeId : coll.collegeId
													})

													masters.push({
														faculty : coll.faculty,
														colleges : college,
														instructionalDetails : coll.instructionalDetails,
														type: coll.type +' of '+ coll.faculty,
														college_List : college_List,
														clg_duration : coll.clg_duration,
														// academic_year : academic_year_list
													})
												}
											}else{
												college.push({
													collegeId : coll.collegeId
												})
												masters.push({
													faculty : coll.faculty,
													patteren : coll.patteren,
													colleges :college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration,
													// academic_year : academic_year_list
												})
											}
										})
										educationDetails.masters = masters;
										res.json({
											status : 200,
											data : educationDetails
										})
									},3000)
								},4000)

							}else if(bachelorDetails[0].college_stream_type == false){
								console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
								models.College.find({
									where :{
										id : bachelorDetails[0].collegeId
									}
								}).then(collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Masters',
											faculty : bachelorDetails[0].faculty
										}
									}).then(function(facultyMaster){
										console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Masters_' + bachelorDetails[0].faculty
									}
								}).then(function(instructionalDetails){
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;
									// }
									college.push({
										collegeId : bachelorDetails[0].collegeId
									})
									educationDetails.masters.push({
										patteren : bachelorDetails[0].patteren,
										// colleges : college,
										// instructionalDetails : instructionalDetails,
										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
										fullName :uservalues[0].name + ' ' +uservalues[0].surname
										// college_name: collegename.name,
										// clg_duration : facultyMaster.year,
										// form : true
									})
									res.json({
										status : 200,
										data : educationDetails
									})
								})
								})
							})
							}
						}
					})
				}else if(user[0].applying_for == 'Phd,Masters,Bachelors'){
					console.log("in Phd");
					let college_List = [];
					let academic_year_list =[];
					models.userMarkList.findAll({
						where :{
							user_id : req.User.id,
							type : "Phd",source : 'guattestation'
							// app_id : null
						}
					}).then(function(bachelorDetails){
						var differentStream = [];
						if(bachelorDetails.length >0){
							if(bachelorDetails[0].college_stream_type == true){
								console.log('true');
								bachelorDetails.forEach(bachelor=>{
									// models.College.find({
									// 	where :{
									// 		id : bachelor.collegeId
									// 	}
									// }).then(collegename=>{
									// 	if(bachelor.patteren == "Annual"){
									// 		//academic_year = bachelor.name;
									// 		college_List.push({
									// 			clg_name : collegename.name,
									// 			academic_year : bachelor.name
									// 		})
									// 	}else if(bachelor.patteren == "Semester"){
									// 		switch(bachelor.name){
									// 			case 'Semester 2' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'First Year'
									// 				})
									// 				break;
									// 			case 'Semester 4' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Second Year'
									// 				})
									// 				break;
									// 			case 'Semester 6' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Third Year'
									// 				})
									// 				break;
									// 			case 'Semester 8' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fourth Year'
									// 				})

									// 				break;
									// 			case 'Semester 10' :
									// 				college_List.push({
									// 					clg_name : collegename.name,
									// 					academic_year : 'Fifth Year'
									// 				})
									// 				break;
									// 		}
									// 	}

									differentStream.push({
										faculty : bachelor.faculty,
										patteren : bachelor.patteren,
										// patteren : instructionalDetails,
										type : bachelor.type
									})
									// })
								})
								setTimeout(() =>{
									var differentCollege = []
									differentStream.forEach(bach=>{
										console.log("Phd==>"+JSON.stringify(bach))
										models.Program_List.find({
											where :{
												degree : 'Phd',
												faculty : bach.faculty
											}
										}).then(function(facultyMaster){
											console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
											models.userMarkList.findAll({
												where:{
													user_id : req.User.id,
													type : "Masters",
													faculty : bach.faculty,source : 'guattestation'
													// app_id : null
												}
											}).then(function(userMarklist){
												if(userMarklist.length > 0){
													// console.log("userMarklist===>"+JSON.stringify(userMarklist))
													if(userMarklist[0].patteren == "Annual"){
														userMarklist.forEach(marklist=>{
															// college_List.push({
															// 	academic_year : marklist.name
															// })
															differentCollege.push({
																faculty : marklist.faculty,
																patteren : marklist.patteren,
																collegeId : marklist.collegeId,
																// instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// academic_year : marklist.name,
																// college_List : Updated_list,
																clg_duration: facultyMaster.year
															})
														})
													}else if(userMarklist[0].patteren == "Semester"){
														console.log('semesterrrrr');
														var semesters = facultyMaster.year * 2;
														for(var i = 2; i <= semesters; i=i+2){
															var sem = "Semester " + i
															userMarklist.forEach(marklist=>{

																// console.log("userMarklist===>"+JSON.stringify(marklist))
																if(marklist.name == sem){
																	// if(marklist.name == 'Semester 2'){
																	// 	college_List.push({
																	// 		academic_year : 'First Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 4'){
																	// 	college_List.push({
																	// 		academic_year : 'Second Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 6'){
																	// 	college_List.push({
																	// 		academic_year : 'Third Year'
																	// 	})
																	// }
																	// if(marklist.name == 'Semester 8'){
																	// 	college_List.push({
																	// 		academic_year : 'Fourth Year'
																	// 	})
																	// }
																	differentCollege.push({
																		faculty : marklist.faculty,
																		patteren : marklist.patteren,
																		collegeId : marklist.collegeId,
																		// instructionalDetails : bach.instructionalDetails,
																		type : marklist.type,
																		// college_List : Updated_list,
																		clg_duration: facultyMaster.year
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(()=>{
										console.log('settimeout');
										/** Updating college list **/
									// jsonObject = college_List.map(JSON.stringify);
									// console.log("Data===>"+jsonObject);
									// uniqueSet = new Set(jsonObject);
									// Updated_list = Array.from(uniqueSet).map(JSON.parse);
									/** Updating college list **/
										console.log("college_List===>"+JSON.stringify(college_List))
										var phd = [];
										differentCollege.forEach(coll=>{
											var college = [];
											var bachFlag = false;
											if(phd.length > 0){
												phd.forEach(bach=>{
													if(bach.faculty == coll.faculty){
														bachFlag = true;
														var count = 0;
														bach.colleges.forEach(clg=>{
															if(clg.collegeId == coll.collegeId){
																count ++;
															}
														})
														if(count <= bach.colleges.length){
															bach.colleges.push({
																collegeId : coll.collegeId
															})
														}

														// if(bach.instructionalDetails.length > 0) {
														// 	bach.form = true;
														// }
													}
												})

												if(bachFlag == false){
													college.push({
														collegeId : coll.collegeId
													})

													phd.push({
														faculty : coll.faculty,
														patteren : coll.patteren,
														colleges : college,
														instructionalDetails : coll.instructionalDetails,
														type: coll.type +' of '+ coll.faculty,
														college_List : college_List,
														clg_duration : coll.clg_duration,
														// academic_year : academic_year_list
													})
												}
											}else{
												college.push({
													collegeId : coll.collegeId
												})
												phd.push({
													faculty : coll.faculty,
													patteren : coll.patteren,
													colleges :college,
													instructionalDetails : coll.instructionalDetails,
													type: coll.type +' of '+ coll.faculty,
													college_List : college_List,
													clg_duration : coll.clg_duration,
													// academic_year : academic_year_list
												})
											}
										})
										educationDetails.phd = phd;
										res.json({
											status : 200,
											data : educationDetails
										})
									},3000)
								},4000)

							}else if(bachelorDetails[0].college_stream_type == false){
								console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
								models.College.find({
									where :{
										id : bachelorDetails[0].collegeId
									}
								}).then(collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Phd',
											faculty : bachelorDetails[0].faculty
										}
									}).then(function(facultyMaster){
										console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
								// models.InstructionalDetails.findAll({
								// 	where:{
								// 		userId : req.User.id,
								// 		education : 'Masters_' + bachelorDetails[0].faculty
								// 	}
								// }).then(function(instructionalDetails){
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;
									// }
									college.push({
										collegeId : bachelorDetails[0].collegeId
									})
									educationDetails.phd.push({
										patteren : bachelorDetails[0].patteren,
										// colleges : college,
										// instructionalDetails : instructionalDetails,
										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
										fullName :uservalues[0].name + ' ' +uservalues[0].surname
										// college_name: collegename.name,
										// clg_duration : facultyMaster.year,
										// form : true
									})
									res.json({
										status : 200,
										data : educationDetails
									})
								// })
								})
							})
							}
						}
					})
				}
			}

		}
	})
})

})

router.get('/suggestInstituteallDATA', middlewares.getUserInfo, function(req,res){
	console.log('/suggestInstituteallDATA');
	var universityName = req.query.universityName;
    models.Institution_details.findAll({
		where :{
			university_name : universityName
		}
    }).then(function(data){
        if(data){
			res.json({
				status:200,
				data : data
			})
        }else{
            res.json({
                status:400,
                message:"data is not inserted"
            })
        }
    })
})

router.post("/updateInstituteData",  middlewares.getUserInfo,middlewares.getUserEducationalInfo, async function(req,res){
	console.log('/updateInstituteData');
	var institudeaddress = req.body.institudeaddress? req.body.institudeaddress  : null
	var deliveryform = req.body.deliveryform;
	var id = req.body.id;
    var universityName = req.body.universityName;
    var country = req.body.country;
	var email = req.body.email;
	var emailArr;
	var anotherEmailArr;
	var anotherEmail;
	if(email){
		emailArr = email.split(',');
		if(emailArr.length  > 1){
			anotherEmailArr = emailArr.shift();
			anotherEmail = emailArr.toString();
		}else{
			anotherEmailArr = email;
			anotherEmail = null;
		}
	}else{
		emailArr = null;
		anotherEmailArr = null;
		anotherEmail = null;
	}
	var contactNumber = req.body.contactNumber;
	var wesno = req.body.wesNumber;
	var icasno = req.body.icasno;
	var cesno = req.body.cesno;
	var eduPerno = req.body.eduperno;
	var iqasno = req.body.iaqsno;
	var icesno = req.body.icesno;
	var nasbano = req.body.nasbano;
	var visarefno = req.body.visarefno;
	var studyrefno = req.body.studyrefno;
	var user_id = req.User.id;
	var studyaccno = req.body.studyaccno;
	var empaccno  = req.body.empaccno;
	var visaaccno = req.body.visaaccno;
	var otheraccno = req.body.otheraccno
	var emprefno = req.body.emprefno;
	var contact_person = req.body.contact_person;
	var myieeno = req.body.mynieeno;
	var nceesno = req.body.nceesno;
	var naricno = req.body.naricno;
	var ncano = req.body.ncano;
	var emailAsWes = req.body.emailAsWes;
	var nameaswes=req.body.nameaswes;
	var lastnameaswes=req.body.lastnameaswes;
	var hrdno = req.body.hrdno;
	var noofcopi= req.body.noofcopi;
	var amount;



amount  = 400  ;

    models.Institution_details.find({
        where:{
            id : id,source : 'guattestation'
        }
    }).then(function(data){
        if(data){
            data.update({
                university_name : (universityName) ? universityName : null,
                country_name : (country) ? country : null,
                email : (emailArr) ? anotherEmailArr : null,
                contact_number : (contactNumber) ? contactNumber : null,
				user_id : user_id,
				contact_person : (contact_person) ? contact_person : null,
				address : (req.body.address) ? req.body.address : null,
				icesno:(icesno) ? icesno : null,
				landmark : (req.body.landmark) ? req.body.landmark : null,
				pincode : (req.body.pincode) ? req.body.pincode : null,
				wesno:(wesno) ? wesno : null,
				cesno:(cesno) ? cesno : null,
				studyrefno:(studyrefno) ? studyrefno : null,
				icasno:(icasno) ? icasno : null,
				eduPerno:(eduPerno) ? eduPerno : null,
				iqasno:(iqasno) ? iqasno : null,
				nasbano:(nasbano) ? nasbano : null,
				visarefno:(visarefno) ? visarefno : null,
				emprefno:(emprefno) ? emprefno : null,
				studyaccno:(studyaccno) ? emprefno : null,
				otheraccno:(otheraccno) ? otheraccno : null,
				empaccno:(empaccno) ? empaccno : null,
				visaaccno:(visaaccno) ? visaaccno : null,
				myieeno:(myieeno) ? myieeno : null,
				OtherEmail : (anotherEmail) ? anotherEmail : null,
				nceesno : (nceesno) ? nceesno : null,
				naricno : (naricno) ? naricno : null,
				ncano : (ncano) ? ncano : null,
				emailAsWes : emailAsWes ? emailAsWes : null,
				nameaswes:nameaswes?nameaswes:null,
				lastnameaswes:lastnameaswes?lastnameaswes:null,
				hrdno:hrdno?hrdno:null,
				lastnameaswes:lastnameaswes?lastnameaswes:null,
				inst_address : institudeaddress,
				noofcopies:noofcopi
            }).then(function(data_updated){
                if(data_updated){
					data.forEach
							res.json({
								status:200,
								message:"data updated"
							})
				}else{
                    res.json({
                        status:400,
                       message:"data not updated"
                    })
                }
            })
        }else{
            res.json({
                status:400,
                message:"data not updated"
            })
        }
    })
});


// router.post("/updateHrdInstituteData" ,  middlewares.getUserInfo,middlewares.getUserEducationalInfo, function(req,res){
// 			console.log("/updateHrdInstituteData" +JSON.stringify(req.body.data));
// 			var data = req.body.data

// 			if(req.User.current_location == "WITHIN"){
// 				amount  = 536 * req.userEducational;
// 			}else if(req.User.current_location == "OUTSIDE"){
// 				if(req.User.id =='54944'){
// 					amount = '100';
// 				}else if(req.User.id =='54946'){
// 					amount = '200';
// 				}else if(req.User.id =='54947'){
// 					amount = '300';
// 				}else if(req.User.id =='54948'){
// 					amount = '400';
// 				}else if(req.User.id =='54949'){
// 					amount = '500';
// 				}else if(req.User.id =='54950'){
// 					amount = '600';
// 				}else if(req.User.id =='54951'){
// 					amount = '700';
// 				}else if(req.User.id =='54952'){
// 					amount = '800';
// 				}else if(req.User.id =='54953'){
// 					amount = '900';
// 				}else if(req.User.id =='54954'){
// 					amount = '1000';
// 				}else if(req.User.id =='54955'){
// 					amount = '1100';
// 				}else if(req.User.id =='54956'){
// 					amount = '1200';
// 				}else if(req.User.id =='54957'){
// 					amount = '1300';
// 				}else if(req.User.id =='54958'){
// 					amount = '1400';
// 				}else if(req.User.id =='54959'){
// 					amount = '1500';
// 				}else if(req.User.id =='54961'){
// 					amount = '1600';
// 				}else if(req.User.id =='54962'){
// 					amount = '1700';
// 				}else if(req.User.id =='54963'){
// 					amount = '1800';
// 				}else if(req.User.id =='54964'){
// 					amount = '1900';
// 				}else if(req.User.id =='54966'){
// 					amount = '2000';
// 				}else{
// 					amount  = 8308 * req.userEducational;
// 				}
// 			}

// 			models.Hrd_details.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					degree : req.body.type

// 				}
// 			}).then(function (hrddetails){
// 				if(hrddetails.length > 0){
// 					console.log("lenghth > 0");
// 					if(req.body.type == 'bachelor'){
// 						models.Hrd_details.update({
// 							fullName : data.fullnameashrd,
// 							course_name :  data.coursenameashrd,
// 							seat_no : data.seatnoCtrlashrd,
// 							prn_no: data.prnnoCtrlashrd,
// 							cgpa :data.cgpaCtrlashrd,
// 							cgpi :data.cgpiCtrlashrd,
// 							transcript_no :data.transcriptCtrlashrd,
// 							transcript_date :data.transcriptdateashrd,
// 							exam_date : data.examdateashrd,
// 							specialization :data.specializationashrd,
// 							user_id : req.User.id,
// 							degree :  req.body.type

// 						}, {
// 							where: {
// 								user_id: req.User.id,
// 								degree :req.body.type
// 							}
// 						}).then(function (data) {
// 							// console.log("data" + data);
// 							// console.log("edudetails-->"+JSON.stringify (edu_details));
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 						})
// 					}else if(req.body.type == 'master'){
// 						models.Hrd_details.update({
// 							fullName : data.fullnameashrd_master,
// 							course_name :  data.coursenameashrd_master,
// 							seat_no : data.seatnoCtrlashrd_master,
// 							prn_no: data.prnnoCtrlashrd_master,
// 							cgpa :data.cgpaCtrlashrd_master,
// 							cgpi :data.cgpiCtrlashrd_master,
// 							transcript_no :data.transcriptCtrlashrd_master,
// 							transcript_date :data.transcriptdateashrd_master,
// 							exam_date : data.examdateashrd_master,
// 							specialization :data.specializationashrd_master,
// 							user_id : req.User.id,
// 							degree :  req.body.type

// 						}, {
// 							where: {
// 								user_id: req.User.id,
// 								degree :req.body.type
// 							}
// 						}).then(function (data) {
// 							// console.log("data" + data);
// 							// console.log("edudetails-->"+JSON.stringify (edu_details));
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 						})
// 					}


// 				}else{
// 					if(req.body.type =='master'){
// 						models.Hrd_details.create({
// 							fullName : data.fullnameashrd_master,
// 							course_name :  data.coursenameashrd_master,
// 							seat_no : data.seatnoCtrlashrd_master,
// 							prn_no: data.prnnoCtrlashrd_master,
// 							cgpa :data.cgpaCtrlashrd_master,
// 							cgpi :data.cgpiCtrlashrd_master,
// 							transcript_no :data.transcriptCtrlashrd_master,
// 							transcript_date :data.transcriptdateashrd_master,
// 							exam_date : data.examdateashrd_master,
// 							specialization :data.specializationashrd_master,
// 							user_id : req.User.id,
// 							degree :  req.body.type
// 						}).then(function (created){
// 							console.log("created"+  created);
// 							models.Institution_details.findAll({
// 								where :{
// 								type : 'HRD',
// 								user_id : req.User.id,
// 								app_id  : null
// 								}
// 							}).then(function (inst){
// 								console.log("inst" +inst);
// 								console.log("inst" +inst.length);
// 								if(inst.length > 0){

// 								}else{
// 									models.Institution_details.create({
// 										email : 'do.asthahte-mh@gov.in',
// 										type : 'HRD',
// 										user_id : req.User.id
// 									}).then(function (institutecreated){
// 										models.Cart.findAll({
// 											where :{
// 												fees : amount,
// 											user_id : req.User.id,
// 											institute_id : institutecreated.id,
// 											}
// 										}).then(function (cart){
// 											if(cart.length > 0){

// 											}else{
// 												models.Cart.create({
// 													// university_name : detail.university_name,
// 													email :'do.asthahte-mh@gov.in' ,
// 													fees : amount,
// 													user_id : req.User.id,
// 													institute_id : institutecreated.id,
// 												})
// 											}
// 										})

// 										res.json({
// 											status : 200,
// 											data : created
// 										})
// 									})
// 								}
// 							})


// 						})
// 					}else if(req.body.type == 'bachelor'){
// 						models.Hrd_details.create({
// 							fullName : data.fullnameashrd,
// 							course_name :  data.coursenameashrd,
// 							seat_no : data.seatnoCtrlashrd,
// 							prn_no: data.prnnoCtrlashrd,
// 							cgpa :data.cgpaCtrlashrd,
// 							cgpi :data.cgpiCtrlashrd,
// 							transcript_no :data.transcriptCtrlashrd,
// 							transcript_date :data.transcriptdateashrd,
// 							exam_date : data.examdateashrd,
// 							specialization :data.specializationashrd,
// 							user_id : req.User.id,
// 							degree :  req.body.type
// 						}).then(function (created){
// 							console.log("created"+  created);
// 							models.Institution_details.findAll({
// 								where :{
// 								type : 'HRD',
// 								user_id : req.User.id,
// 								app_id  :'null'
// 								}
// 							}).then(function (inst){
// 								if(inst.length > 0){

// 								}else{
// 									models.Institution_details.create({
// 										email : 'do.asthahte-mh@gov.in',
// 										type : 'HRD',
// 										user_id : req.User.id
// 									}).then(function (institutecreated){
// 										models.Cart.findAll({
// 											where :{
// 												fees : amount,
// 												user_id : req.User.id,
// 												institute_id : institutecreated.id,
// 											}
// 										}).then(function (cart){
// 											if(cart.length > 0){

// 											}else{
// 												models.Cart.create({
// 													// university_name : detail.university_name,
// 													email :'do.asthahte-mh@gov.in' ,
// 													fees : amount,
// 													user_id : req.User.id,
// 													institute_id : institutecreated.id,
// 												})
// 											}
// 										})

// 										res.json({
// 											status : 200,
// 											data : created
// 										})
// 									})
// 								}
// 							})

// 						})
// 					}

// 				}


// 			})

// })
router.post("/updateHrdInstituteData" ,  middlewares.getUserInfo,middlewares.getUserEducationalInfo, function(req,res){
	console.log("/updateHrdInstituteData" +JSON.stringify(req.body.data));
	var data = req.body.data

	if(req.body.data.hrdEmailCtrl){
		var email = req.body.data.hrdEmailCtrl;

	}else if(req.body.hrdEmailCtrl_master){
		var email = req.body.data.hrdEmailCtrl_master;

	}else{
		var email = req.body.data.hrdEmailCtrl_phd;
	}
	var emailArr;
	var anotherEmailArr;
	var anotherEmail;
	if(email){
		emailArr = email.split(', ');
		if(emailArr.length  > 1){

			anotherEmailArr = emailArr.shift();
			anotherEmail = emailArr.toString();
		}else{
			anotherEmailArr = email;
			anotherEmail = null;
		}
	}else{
		emailArr = null;
		anotherEmailArr = null;
		anotherEmail = null;
	}
	

	models.Hrd_details.findAll({
		where :{
			user_id : req.User.id,
			degree : req.body.type

		}
	}).then(function (hrddetails){
		if(hrddetails.length > 0){
			if(req.body.type == 'bachelor'){
				models.Hrd_details.update({
					fullName : data.fullnameashrd,
					course_name :  data.coursenameashrd,
					seat_no : data.seatnoCtrlashrd,
					seat_no_sem6 : data.seatnoCtrlashrd_sem6,
					seat_no_sem5 : data.seatnoCtrlashrd_sem5,
					prn_no: data.prnnoCtrlashrd,
					cgpa :data.cgpaCtrlashrd,
					cgpi :data.cgpiCtrlashrd,
					transcript_no :data.transcriptCtrlashrd,
					transcript_date :data.transcriptdateashrd,
					exam_date : data.examdateashrd,
					specialization :data.specializationashrd,
					user_id : req.User.id,
					degree :  req.body.type,
					lastsem  : req.body.sem1,
					secondlastsem :  req.body.sem2

				}, {
					where: {
						user_id: req.User.id,
						degree :req.body.type
					}
				}).then(function (data) {
					// console.log("data" + data);
					// console.log("edudetails-->"+JSON.stringify (edu_details));
							res.json({
								status : 200,
								data : data
							})
				})
			}else if(req.body.type == 'master'){
				models.Hrd_details.update({
					fullName : data.fullnameashrd_master,
					course_name :  data.coursenameashrd_master,
					seat_no : data.seatnoCtrlashrd_master,
					seat_no_sem6 : data.seatnoCtrlashrd_sem6_master,
					seat_no_sem5 : data.seatnoCtrlashrd_sem5_master,
					prn_no: data.prnnoCtrlashrd_master,
					cgpa :data.cgpaCtrlashrd_master,
					cgpi :data.cgpiCtrlashrd_master,
					transcript_no :data.transcriptCtrlashrd_master,
					transcript_date :data.transcriptdateashrd_master,
					exam_date : data.examdateashrd_master,
					specialization :data.specializationashrd_master,
					user_id : req.User.id,
					degree :  req.body.type,
					lastsem  : req.body.sem1,
					secondlastsem :  req.body.sem2

				}, {
					where: {
						user_id: req.User.id,
						degree :req.body.type
					}
				}).then(function (data) {
					// console.log("data" + data);
					// console.log("edudetails-->"+JSON.stringify (edu_details));
							res.json({
								status : 200,
								data : data
							})
				})
			}else if(req.body.type == 'phd'){
				models.Hrd_details.update({
					fullName : data.fullnameashrd_phd,
					course_name :  data.coursenameashrd_phd,
					seat_no : data.seatnoCtrlashrd_phd,
					seat_no_sem6 : data.seatnoCtrlashrd_sem6_phd,
					seat_no_sem5 : data.seatnoCtrlashrd_sem5_phd,
					prn_no: data.prnnoCtrlashrd_phd,
					cgpa :data.cgpaCtrlashrd_phd,
					cgpi :data.cgpiCtrlashrd_phd,
					transcript_no :data.transcriptCtrlashrd_phd,
					transcript_date :data.transcriptdateashrd_phd,
					exam_date : data.examdateashrd_phd,
					specialization :data.specializationashrd_phd,
					user_id : req.User.id,
					degree :  req.body.type,
					lastsem  : req.body.sem1,
					secondlastsem :  req.body.sem2

				}, {
					where: {
						user_id: req.User.id,
						degree :req.body.type
					}
				}).then(function (data) {
					// console.log("data" + data);
					// console.log("edudetails-->"+JSON.stringify (edu_details));
							res.json({
								status : 200,
								data : data
							})
				})
			}


		}else{
			if(req.body.type =='master'){
				models.Hrd_details.create({
					fullName : data.fullnameashrd_master,
					course_name :  data.coursenameashrd_master,
					seat_no : data.seatnoCtrlashrd_master,
					seat_no_sem6 : data.seatnoCtrlashrd_sem6_master,
					seat_no_sem5 : data.seatnoCtrlashrd_sem5_master,
					prn_no: data.prnnoCtrlashrd_master,
					cgpa :data.cgpaCtrlashrd_master,
					cgpi :data.cgpiCtrlashrd_master,
					transcript_no :data.transcriptCtrlashrd_master,
					transcript_date :data.transcriptdateashrd_master,
					exam_date : data.examdateashrd_master,
					specialization :data.specializationashrd_master,
					user_id : req.User.id,
					degree :  req.body.type,
					lastsem  : req.body.sem1,
					secondlastsem :  req.body.sem2
				}).then(function (created){
					console.log("created"+  created);
					models.Institution_details.findAll({
						where :{
						type : 'HRD',
						user_id : req.User.id,
						app_id  : null,source : 'guattestation'
						}
					}).then(function (inst){
						console.log("inst" +inst);
						console.log("inst" +inst.length);
						if(inst.length > 0){

						}else{
							models.Institution_details.create({
								email :  (emailArr) ? anotherEmailArr : null,
								OtherEmail : (anotherEmail) ? anotherEmail : null,
								type : 'HRD',
								user_id : req.User.id,source : 'guattestation'
							}).then(function (institutecreated){
								models.Cart.findAll({
									where :{
										fees : amount,
									user_id : req.User.id,
									institute_id : institutecreated.id,
									}
								}).then(function (cart){
									if(cart.length > 0){

									}else{
										models.Cart.create({
											// university_name : detail.university_name,
											// email :'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in' ,
											email : (emailArr) ? anotherEmailArr : null,
											fees : amount,
											user_id : req.User.id,
											institute_id : institutecreated.id,
										})
									}
								})

								res.json({
									status : 200,
									data : created
								})
							})
						}
					})


				})
			}else if(req.body.type == 'bachelor'){
				models.Hrd_details.create({
					fullName : data.fullnameashrd,
					course_name :  data.coursenameashrd,
					seat_no : data.seatnoCtrlashrd,
					seat_no_sem6 : data.seatnoCtrlashrd_sem6,
					seat_no_sem5 : data.seatnoCtrlashrd_sem5,
					prn_no: data.prnnoCtrlashrd,
					cgpa :data.cgpaCtrlashrd,
					cgpi :data.cgpiCtrlashrd,
					transcript_no :data.transcriptCtrlashrd,
					transcript_date :data.transcriptdateashrd,
					exam_date : data.examdateashrd,
					specialization :data.specializationashrd,
					user_id : req.User.id,
					degree :  req.body.type,
					lastsem  : req.body.sem1,
					secondlastsem :  req.body.sem2

				}).then(function (created){
					console.log("created"+  created);
					models.Institution_details.findAll({
						where :{
						type : 'HRD',
						user_id : req.User.id,
						app_id  :'null',source : 'guattestation'
						}
					}).then(function (inst){
						if(inst.length > 0){

						}else{
							models.Institution_details.create({
								// email : 'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in',
								email :  (emailArr) ? anotherEmailArr : null,
								OtherEmail : (anotherEmail) ? anotherEmail : null,
								type : 'HRD',
								user_id : req.User.id,source : 'guattestation'
							}).then(function (institutecreated){
								models.Cart.findAll({
									where :{
										fees : amount,
										user_id : req.User.id,
										institute_id : institutecreated.id,
									}
								}).then(function (cart){
									if(cart.length > 0){

									}else{
										models.Cart.create({
											// university_name : detail.university_name,
											email :'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in' ,
											fees : amount,
											user_id : req.User.id,
											institute_id : institutecreated.id,
										})
									}
								})

								res.json({
									status : 200,
									data : created
								})
							})
						}
					})

				})
			}else if(req.body.type == 'phd'){
				models.Hrd_details.create({
					fullName : data.fullnameashrd_phd,
					course_name :  data.coursenameashrd_phd,
					seat_no : data.seatnoCtrlashrd_phd,
					seat_no_sem6 : data.seatnoCtrlashrd_sem6_phd,
					seat_no_sem5 : data.seatnoCtrlashrd_sem5_phd,
					prn_no: data.prnnoCtrlashrd_phd,
					cgpa :data.cgpaCtrlashrd_phd,
					cgpi :data.cgpiCtrlashrd_phd,
					transcript_no :data.transcriptCtrlashrd_phd,
					transcript_date :data.transcriptdateashrd_phd,
					exam_date : data.examdateashrd_phd,
					specialization :data.specializationashrd_phd,
					user_id : req.User.id,
					degree :  req.body.type,
					lastsem  : req.body.sem1,
					secondlastsem :  req.body.sem2
				}).then(function (created){
					console.log("created"+  created);
					models.Institution_details.findAll({
						where :{
						type : 'HRD',
						user_id : req.User.id,
						app_id  :'null',
						source : 'guattestation'
						}
					}).then(function (inst){
						if(inst.length > 0){

						}else{
							models.Institution_details.create({
								// email : 'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in',
								email :  (emailArr) ? anotherEmailArr : null,
								OtherEmail : (anotherEmail) ? anotherEmail : null,
								type : 'HRD',
								user_id : req.User.id,source : 'guattestation'
							}).then(function (institutecreated){
								models.Cart.findAll({
									where :{
										fees : amount,
										user_id : req.User.id,
										institute_id : institutecreated.id,
									}
								}).then(function (cart){
									if(cart.length > 0){

									}else{
										models.Cart.create({
											// university_name : detail.university_name,
											email :'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in' ,
											fees : amount,
											user_id : req.User.id,
											institute_id : institutecreated.id,
										})
									}
								})

								res.json({
									status : 200,
									data : created
								})
							})
						}
					})

				})
			}

		}


	})

})
router.post("/deleteInstituteData",function(req,res){
	console.log('/deleteInstituteData');
    var inst_id=req.body.id;
    models.Institution_details.destroy({
        where: {
           id: inst_id//this will be your id that you want to delete
		   ,source : 'guattestation'
        }
     }).then(function(rowDeleted){ // rowDeleted will return number of rows deleted
        if(rowDeleted === 1){
			models.Cart.destroy({
				where:
				{
					institute_id : inst_id
				}
			}).then(function(cartdeleted){
				if(cartdeleted === 1){
					res.json({
						status : 200
					});
				}else{
					res.json({
						status : 400
					});
				}
			})
        }else{
            res.json({
                status : 400
            });
        }
    });
});
router.post("/deleteInstituteData_System",middlewares.getUserInfo , function(req,res){
	console.log('/deleteInstituteData_System');
    // var inst_id=req.body.id;
	models.Institution_details.findAll({
		where :{ 
			user_id  : req.User.id,
			app_id :{
				[Op.eq] : null
			},source : 'guattestation'
		}
	}).then(function (inst){
		if(inst.length > 1){
			inst.forEach(function (institute_details){
				models.Institution_details.destroy({
					where: {
					   id: institute_details.id//this will be your id that you want to delete
					   ,source : 'guattestation'
					}
				 }).then(function(rowDeleted){ // rowDeleted will return number of rows deleted
					if(rowDeleted === 1){
						models.Cart.destroy({
							where:
							{
								institute_id : institute_details.id
							}
						}).then(function(cartdeleted){
							if(cartdeleted === 1){
								res.json({
									status : 200
								});
							}else{
								res.json({
									status : 400
								});
							}
						})
					}else{
						res.json({
							status : 400
						});
					}
				});
			})
		
		}else{
			models.Institution_details.destroy({
				where: {
				   id: inst[0].id//this will be your id that you want to delete
				   ,source : 'guattestation'
				}
			 }).then(function(rowDeleted){ // rowDeleted will return number of rows deleted
				if(rowDeleted === 1){
					models.Cart.destroy({
						where:
						{
							institute_id : inst[0].id
						}
					}).then(function(cartdeleted){
						if(cartdeleted === 1){
							res.json({
								status : 200
							});
						}else{
							res.json({
								status : 400
							});
						}
					})
				}else{
					res.json({
						status : 400
					});
				}
			});
		}
		
	})
});
router.post("/deleteInstituteAddress",function(req,res){
	console.log('/deleteInstituteAddress');
    var inst_id=req.body.id;
	models.Institution_details.update({
					inst_address :  null

								}, {
									where: {
											id : inst_id,source : 'guattestation'
									}
								}).then(function (data) {
											res.json({
												status : 200,
												data : data
											})
								})
});


router.post("/deleteInstituteDatahrd",middlewares.getUserInfo,function(req,res){
	console.log('/deleteInstituteDatahrd' +req.body.id);
    var inst_id=req.body.id;
    models.Institution_details.destroy({
        where: {
           user_id : req.User.id//this will be your id that you want to delete
		   ,source : 'guattestation'
        }
     }).then(function(rowDeleted){ // rowDeleted will return number of rows deleted
        if(rowDeleted === 1){
			models.Cart.destroy({
				where:
				{
					user_id : req.User.id
				}
			}).then(function(cartdeleted){
				models.Hrd_details.destroy({
					where :{
						user_id : req.User.id
					}
				}).then(function (hrddeleted){
					if(hrddeleted === 1){
						res.json({
							status : 200
						});
					}else{
						res.json({
							status : 400
						});
					}
				})

			})
        }else{
            res.json({
                status : 400
            });
        }
    });
});
router.get("/addToCart", middlewares.getUserInfo,middlewares.getUserEducationalInfo,  function(req,res){
	console.log('/addToCart');
    var user_id=req.User.id;
	var outercounter = 0;
	var amount;
	if(req.User.current_location == "WITHIN"){
		amount  = 536 * req.userEducational;
	}else if(req.User.current_location == "OUTSIDE"){
		if(req.User.id =='54944'){
            amount = '100';
        }else if(req.User.id =='54946'){
            amount = '200';
        }else if(req.User.id =='54947'){
            amount = '300';
        }else if(req.User.id =='54948'){
            amount = '400';
        }else if(req.User.id =='54949'){
            amount = '500';
        }else if(req.User.id =='54950'){
            amount = '600';
        }else if(req.User.id =='54951'){
            amount = '700';
        }else if(req.User.id =='54952'){
            amount = '800';
        }else if(req.User.id =='54953'){
            amount = '900';
        }else if(req.User.id =='54954'){
            amount = '1000';
        }else if(req.User.id =='54955'){
            amount = '1100';
        }else if(req.User.id =='54956'){
            amount = '1200';
        }else if(req.User.id =='54957'){
            amount = '1300';
        }else if(req.User.id =='54958'){
            amount = '1400';
        }else if(req.User.id =='54959'){
            amount = '1500';
        }else if(req.User.id =='54961'){
            amount = '1600';
        }else if(req.User.id =='54962'){
            amount = '1700';
        }else if(req.User.id =='54963'){
            amount = '1800';
        }else if(req.User.id =='54964'){
            amount = '1900';
        }else if(req.User.id =='54966'){
            amount = '2000';
        }else{
        	amount  = 8308 * req.userEducational;
        }
	}
    models.Institution_details.findAll({
        where : {
            user_id : user_id,source : 'guattestation'
        }
    }).then(function(institute_details){
        if(institute_details.length > 0){
            institute_details.forEach(function(detail){
                if(detail.app_id == null){
                    models.Cart.find({
                        where:{
                            user_id : user_id,
                            email : detail.email,
                        }
                    }).then(function(cart_exists){
                        if(cart_exists){

                        }else{
                            models.Cart.create({
                                university_name : detail.university_name,
                                email : detail.email,
                                fees : amount,
                                user_id : user_id,
                                institute_id : detail.id,
                            });
                        }
                    });
                }
                outercounter ++ ;
            });
            if(outercounter == institute_details.length){
                res.json({
                    status : 200
                });
            }
        }else{
            res.json({
                status : 400
            });
        }
    });
});

router.get("/getCartData", middlewares.getUserInfo,middlewares.getUserEducationalInfo,function(req,res){
	console.log('/getCartData');
    var user_id = req.User.id;
    var data = [];
	var total_amount ;
	var amount;

    models.Cart.findAll({
        where:{
            user_id : user_id
        }
    }).then(function(cartvalues){
        if(cartvalues.length > 0){
				total_amount = amount * cartvalues.length;
			
            res.json({
                status : 200,
                data : cartvalues,
                total_amount : total_amount
            });
        }else{
            res.json({
                status : 400,
                message : "No values in cart"
            })
        }
    });
});

//new set new education step
router.post('/setEducationDetails',middlewares.getUserInfo,function(req,res){
	console.log('/setEducationDetails');
	var body_data = req.body.data;
	var grad_inputSchool = body_data.grad_inputSchool;
	var grad_InputMarks = body_data.grad_InputMarks;
	var grad_OutofMarks = body_data.grad_OutofMarks;
	var grad_type = 'Graduation';
	var master_InputSchool = body_data.master_InputSchool;
	var master_InputMarks = body_data.master_InputMarks;
	var master_OutofMarks = body_data.master_OutofMarks;
	var hiddenMaster	=	'Master';
	var phd_InputSchool = body_data.phd_InputSchool;
	var phd_InputMarks = body_data.phd_InputMarks;
	var phd_OutofMarks = body_data.phd_OutofMarks;
	var hiddenphd	=	'Ph.D';
	var grad_completed ;
	var master_completed ;
	var phd_completed ;
	var applying_courses = ''
	var count = 0;

	if(body_data.applying_for.length > 0){
		body_data.applying_for.forEach((item)=>{
			if(body_data.applying_for.length-1 > count){
				applying_courses = applying_courses+item+", "
			}else if(body_data.applying_for.length-1 == count){
				applying_courses = applying_courses+item
			}
			count++;
		})
	}
	models.User.find({
		where: {
			id : req.User.id,
		}
	}).then(function (user) {
		if (user) {
			user.update({
				applying_for: applying_courses,
			}).then(function (updated_user) {
				if(  (!grad_inputSchool == undefined || !grad_inputSchool == "") && (!grad_InputMarks ==  undefined || !grad_InputMarks ==  "") && (!grad_OutofMarks == undefined || !grad_OutofMarks == "")){
					models.Educational_Details.find({
						where:{
							user_id : req.User.id,
							type : 'Graduation'
						}
					}).then(function(graduation_exists){
						if(graduation_exists){
							graduation_exists.update({
								school_name: grad_inputSchool,
								totalmarks: grad_InputMarks,
								outofmarks: grad_OutofMarks,
								type: grad_type,
							}).then(function(graduation_updated){
								if(graduation_updated){
									grad_completed = 'true';
								}else{
									grad_completed = 'false';
								}
							})
						}else{
							models.Educational_Details.create({
								school_name: grad_inputSchool,
								totalmarks: grad_InputMarks,
								outofmarks: grad_OutofMarks,
								type: grad_type,
								user_id : req.User.id
							}).then(function(graduation_created){
								if(graduation_created){
									grad_completed = 'true';
								}else{
									grad_completed = 'false';
								}
							});
						}
					})

				}else{
					grad_completed = 'true';
				}

				if( (!master_InputSchool == undefined || master_InputSchool != "") && (!master_InputMarks == undefined || master_InputMarks != "") && (!master_OutofMarks == undefined || master_OutofMarks != "" )){
					models.Educational_Details.find({
						where:{
							user_id : req.User.id,
							type : 'Master'
						}
					}).then(function(master_exists){
						if(master_exists){

							master_exists.update({
								school_name: master_InputSchool,
								totalmarks: master_InputMarks,
								outofmarks: master_OutofMarks,
								type: hiddenMaster,
							}).then(function(master_updated){
								if(master_updated){
									master_completed = 'true'
								}else{
									master_completed = 'false';
								}
							})
						}else{
							models.Educational_Details.create({
								school_name: master_InputSchool,
								totalmarks: master_InputMarks,
								outofmarks: master_OutofMarks,
								type: hiddenMaster,
								user_id : req.User.id
							}).then(function(master_created){
								if(master_created){
									master_completed = 'true'
								}else{
									master_completed = 'false';
								}
							});
						}
					});

				}else{
					master_completed = 'true'
				}

				if( (!phd_InputSchool == undefined || phd_InputSchool != "") && (!phd_InputMarks == undefined || phd_InputMarks != "") && (!phd_OutofMarks == undefined || phd_OutofMarks != "" )){
					models.Educational_Details.find({
						where:{
							user_id : req.User.id,
							type : 'Ph.D'
						}
					}).then(function(phd_exists){
						if(phd_exists){

							phd_exists.update({
								school_name: phd_InputSchool,
								totalmarks: phd_InputMarks,
								outofmarks: phd_OutofMarks,
								type: hiddenphd,
							}).then(function(phd_updated){
								if(phd_updated){
									phd_completed = 'true'
								}else{
									phd_completed = 'false';
								}
							})
						}else{
							models.Educational_Details.create({
								school_name: phd_InputSchool,
								totalmarks: phd_InputMarks,
								outofmarks: phd_OutofMarks,
								type: hiddenphd,
								user_id : req.User.id
							}).then(function(phd_created){
								if(phd_created){
									phd_completed = 'true'
								}else{
									phd_completed = 'false';
								}
							});
						}
					});

				}else{
					phd_completed = 'true'
				}

				setTimeout(function(){
					if(grad_completed == 'true' && master_completed == 'true' && phd_completed == 'true'){
						res.json({
							status :200
						})
					}else if(grad_completed == 'false' && master_completed == 'true'&& phd_completed == 'true'){
						res.json({
							status :400,
							message : 'Problem in saving Graduation details'
						});
					}else if(grad_completed == 'true' && master_completed == 'false'&& phd_completed == 'true'){
						res.json({
							status :400,
							message : 'Problem in saving Master details'
						});
					}else if(grad_completed == 'true' && master_completed == 'true'&& phd_completed == 'false'){
						res.json({
							status :400,
							message : 'Problem in saving Ph.D details'
						});
					}
				}, 500);

			});
		} else {
			errors = [];
			res.json({
				status: 400
			});
		}
	});

});

router.get('/getUserEducation',middlewares.getUserInfo,function(req,res){
	console.log('/getUserEducation');
	var view_data = {};
	var previousApp = {
		present : false,
		prevAppData : false
	}

	if(req.query.editFlag == 'true'){
		models.Applied_For_Details.find({
			where : {
				user_id : req.User.id,
				app_id : req.query.app_id,
				source : 'guattestation'
			}
		}).then(function(appliedForDetails){
			view_data.appliedForDetails = appliedForDetails
			res.json({
				status:200,
				data:view_data
			})
		})
	}else{
		models.Application.find({
								where :{
									user_id : req.User.id,
									[Op.or]:[{
										source_from:'guattestation',
									 },
									 {
										source_from:'gumoi',
									 }]
								 }
								}).then(function(application){
			if(application){
				models.userMarkList.find({
					where :{
						user_id  :req.User.id,source : 'guattestation'
					}
				}).then(function(userMarkList){
					// if(userMarkList && userMarkList.previous_data == true){
					// 	previousApp.prevAppData = true;
					// }

					models.Applied_For_Details.find({
						where : {
							user_id : req.User.id,
							app_id :{
								[Op.eq] : null
							},
							source : 'guattestation'
						}
					}).then(function(appliedForDetails){
						models.Applied_For_Details.find({
							where : {
								user_id : req.User.id,
								app_id :{
									[Op.ne] : null
								},
								source : 'guattestation'
							}
						}).then(function(appliedForDetails_old){
							// if(appliedForDetails.applying_for.includes(appliedForDetails_old.applying_for) && (appliedForDetails.attestedfor.includes(appliedForDetails_old.attestedfor) || appliedForDetails.attestedfor == 'both' )){
							// 	previousApp.present = true;
							// }
					
						view_data.appliedForDetails = appliedForDetails
						res.json({
							status:200,
							data:view_data,
							previousApp : previousApp
						})
					})
				})
				})
			}else{

				models.Applied_For_Details.find({
					where : {
						user_id : req.User.id,
						app_id :{
							[Op.eq] : null
						},
						source : 'guattestation'
					}
				}).then(function(appliedForDetails){

					view_data.appliedForDetails = appliedForDetails
					res.json({
						status:200,
						data:view_data,
						previousApp : previousApp
					})
				})
			}
		})
	}
});

// router.get('/getInstructionalDetails',middlewares.getUserInfo,(req,res)=>{
// 	console.log('/getInstructionalDetails');
// 	var educationDetails = {
// 		bachelors : [],
// 		masters : []
// 	};
// 	if(req.query.editFlag == 'true'){
// 		if(req.query.degreeValue == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Masters",
// 				}
// 			}).then(function(master_Details){
// 				var differentStream = [];
// 				var masterDetails = [];
// 				if(master_Details.length > 0){
// 					master_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									masterDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				if(masterDetails.length >0){
// 					if(masterDetails[0].college_stream_type == true){

// 						masterDetails.forEach(master=>{
// 							models.InstructionalDetails.findAll({
// 								where:{
// 									userId : req.User.id,
// 									education : 'Masters_' + master.faculty
// 								}
// 							}).then(function(instructionalDetails){
// 								if(differentStream.length > 0){
// 									var flag = false;
// 									differentStream.forEach(single=>{
// 										if(single.faculty == master.faculty){
// 											flag = true;
// 										}
// 									})
// 									if(flag == false){

// 										differentStream.push({
// 											faculty : master.faculty,
// 											instructionalDetails : instructionalDetails
// 										})
// 									}
// 								}else{
// 									differentStream.push({
// 										faculty : master.faculty,
// 										instructionalDetails : instructionalDetails
// 									})
// 								}
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(mast=>{
// 								models.Program_List.find({
// 									where :{
// 										degree : 'Masters',
// 										faculty : mast.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Masters",
// 											faculty : mast.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : mast.instructionalDetails
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var masters = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									if(masters.length > 0){
// 										masters.forEach(mast=>{
// 											if(mast.faculty == coll.faculty){
// 												mastFlag = true;
// 												var count = 0;
// 												mast.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= mast.colleges.length){
// 													mast.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(mast.instructionalDetails.length > 0) {
// 													mast.form = true;
// 												}
// 											}
// 										})

// 										if(mastFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											masters.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										masters.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails
// 										})
// 									}
// 								})
// 								educationDetails.masters = masters;
// 								models.userMarkList.findAll({
// 									where :{
// 										user_id : req.User.id,
// 										type : "Bachelors",
// 									}
// 								}).then(function(bachelorDetails){
// 									var differentStream = [];
// 									if(bachelorDetails.length >0){
// 										if(bachelorDetails[0].college_stream_type == true){

// 											bachelorDetails.forEach(bachelor=>{
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelor.faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													if(differentStream.length > 0){
// 														var flag = false;
// 														differentStream.forEach(single=>{
// 															if(single.faculty == bachelor.faculty){
// 																flag = true;
// 															}
// 														})
// 														if(flag == false){

// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													}else{
// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails
// 														})
// 													}
// 												})
// 											})
// 											setTimeout(() =>{
// 												var differentCollege = []
// 												differentStream.forEach(bach=>{
// 													models.Program_List.find({
// 														where :{
// 															degree : 'Bachelors',
// 															faculty : bach.faculty
// 														}
// 													}).then(function(facultyMaster){
// 														models.userMarkList.findAll({
// 															where:{
// 																user_id : req.User.id,
// 																type : "Bachelors",
// 																faculty : bach.faculty,
// 															}
// 														}).then(function(userMarklist){
// 															if(userMarklist.length > 0){
// 																if(userMarklist[0].patteren == "Annual"){
// 																	userMarklist.forEach(marklist=>{
// 																		differentCollege.push({
// 																			faculty : marklist.faculty,
// 																			collegeId : marklist.collegeId,
// 																			instructionalDetails : bach.instructionalDetails
// 																		})
// 																	})
// 																}else if(userMarklist[0].patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		userMarklist.forEach(marklist=>{
// 																			if(marklist.name == sem){
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			}
// 																		})
// 																	}
// 																}
// 															}
// 														})
// 													})
// 												})
// 												setTimeout(()=>{
// 													var bachelors = [];
// 													differentCollege.forEach(coll=>{
// 														var college = [];
// 														var bachFlag = false;
// 														if(bachelors.length > 0){
// 															bachelors.forEach(bach=>{
// 																if(bach.faculty == coll.faculty){
// 																	bachFlag = true;
// 																	var count = 0;
// 																	bach.colleges.forEach(clg=>{
// 																		if(clg.collegeId == coll.collegeId){
// 																			count ++;
// 																		}
// 																	})
// 																	if(count <= bach.colleges.length){
// 																		bach.colleges.push({
// 																			collegeId : coll.collegeId
// 																		})
// 																	}

// 																	if(bach.instructionalDetails.length > 0) {
// 																		bach.form = true;
// 																	}
// 																}
// 															})

// 															if(bachFlag == false){
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})

// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges : college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														}else{
// 															college.push({
// 																collegeId : coll.collegeId
// 															})
// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges :college,
// 																instructionalDetails : coll.instructionalDetails
// 															})
// 														}
// 													})
// 													educationDetails.bachelors = bachelors;
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												},3000)
// 											},4000)

// 										}else if(bachelorDetails[0].college_stream_type == false){
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelorDetails[0].faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												var college = [];
// 												college.push({
// 													collegeId : bachelorDetails[0].collegeId
// 												})
// 												educationDetails.bachelors.push({
// 													faculty : bachelorDetails[0].faculty,
// 													colleges : college,
// 													instructionalDetails : instructionalDetails
// 												})
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											})
// 										}
// 									}
// 								})
// 							},3000)
// 						},4000)

// 					}else if(masterDetails[0].college_stream_type == false){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Masters_' + masterDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							college.push({
// 								collegeId : masterDetails[0].collegeId
// 							})
// 							educationDetails.masters.push({
// 								faculty : masterDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								form : true
// 							})
// 							models.userMarkList.findAll({
// 								where :{
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 								}
// 							}).then(function(bachelorDetails){
// 								var differentStream = [];
// 								if(bachelorDetails.length >0){
// 									if(bachelorDetails[0].college_stream_type == true){

// 										bachelorDetails.forEach(bachelor=>{
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelor.faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												if(differentStream.length > 0){
// 													var flag = false;
// 													differentStream.forEach(single=>{
// 														if(single.faculty == bachelor.faculty){
// 															flag = true;
// 														}
// 													})
// 													if(flag == false){

// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails
// 														})
// 													}
// 												}else{
// 													differentStream.push({
// 														faculty : bachelor.faculty,
// 														instructionalDetails : instructionalDetails
// 													})
// 												}
// 											})
// 										})
// 										setTimeout(() =>{
// 											var differentCollege = []
// 											differentStream.forEach(bach=>{
// 												models.Program_List.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bach.faculty
// 													}
// 												}).then(function(facultyMaster){
// 													models.userMarkList.findAll({
// 														where:{
// 															user_id : req.User.id,
// 															type : "Bachelors",
// 															faculty : bach.faculty,
// 														}
// 													}).then(function(userMarklist){
// 														if(userMarklist.length > 0){
// 															if(userMarklist[0].patteren == "Annual"){
// 																userMarklist.forEach(marklist=>{
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails
// 																	})
// 																})
// 															}else if(userMarklist[0].patteren == "Semester"){
// 																var semesters = facultyMaster.year * 2;
// 																for(var i = 2; i <= semesters; i=i+2){
// 																	var sem = "Semester " + i
// 																	userMarklist.forEach(marklist=>{
// 																		if(marklist.name == sem){
// 																			differentCollege.push({
// 																				faculty : marklist.faculty,
// 																				collegeId : marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}
// 																	})
// 																}
// 															}
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(()=>{
// 												var bachelors = [];
// 												differentCollege.forEach(coll=>{
// 													var college = [];
// 													var bachFlag = false;
// 													if(bachelors.length > 0){
// 														bachelors.forEach(bach=>{
// 															if(bach.faculty == coll.faculty){
// 																bachFlag = true;
// 																var count = 0;
// 																bach.colleges.forEach(clg=>{
// 																	if(clg.collegeId == coll.collegeId){
// 																		count ++;
// 																	}
// 																})
// 																if(count <= bach.colleges.length){
// 																	bach.colleges.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																}

// 																if(bach.instructionalDetails.length > 0) {
// 																	bach.form = true;
// 																}
// 															}
// 														})

// 														if(bachFlag == false){
// 															college.push({
// 																collegeId : coll.collegeId
// 															})

// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges : college,
// 																instructionalDetails : coll.instructionalDetails
// 															})
// 														}
// 													}else{
// 														college.push({
// 															collegeId : coll.collegeId
// 														})
// 														bachelors.push({
// 															faculty : coll.faculty,
// 															colleges :college,
// 															instructionalDetails : coll.instructionalDetails
// 														})
// 													}
// 												})
// 												educationDetails.bachelors = bachelors;

// 											},3000)
// 										},4000)

// 									}else if(bachelorDetails[0].college_stream_type == false){
// 										models.InstructionalDetails.findAll({
// 											where:{
// 												userId : req.User.id,
// 												education : 'Bachelors_' + bachelorDetails[0].faculty
// 											}
// 										}).then(function(instructionalDetails){
// 											var college = [];
// 											college.push({
// 												collegeId : bachelorDetails[0].collegeId
// 											})
// 											educationDetails.bachelors.push({
// 												faculty : bachelorDetails[0].faculty,
// 												colleges : college,
// 												instructionalDetails : instructionalDetails,
// 												form :true
// 											})
// 										})
// 									}
// 								}
// 							})
// 							setTimeout(()=>{
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},2000);
// 						})
// 					}
// 				}
// 			})
// 		}else if(req.query.degreeValue == 'Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Bachelors",
// 				}
// 			}).then(function(bachelor_Details){
// 				var differentStream = [];
// 				var bachelorDetails = [];
// 				if(bachelor_Details.length > 0){
// 					bachelor_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									bachelorDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				if(bachelorDetails.length >0){
// 					if(bachelorDetails[0].college_stream_type == true){

// 						bachelorDetails.forEach(bachelor=>{
// 							models.InstructionalDetails.findAll({
// 								where:{
// 									userId : req.User.id,
// 									education : 'Bachelors_' + bachelor.faculty
// 								}
// 							}).then(function(instructionalDetails){
// 								if(differentStream.length > 0){
// 									var flag = false;
// 									differentStream.forEach(single=>{
// 										if(single.faculty == bachelor.faculty){
// 											flag = true;
// 										}
// 									})
// 									if(flag == false){

// 										differentStream.push({
// 											faculty : bachelor.faculty,
// 											instructionalDetails : instructionalDetails
// 										})
// 									}
// 								}else{
// 									differentStream.push({
// 										faculty : bachelor.faculty,
// 										instructionalDetails : instructionalDetails
// 									})
// 								}
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(bach=>{
// 								models.Program_List.find({
// 									where :{
// 										degree : 'Bachelors',
// 										faculty : bach.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											faculty : bach.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : bach.instructionalDetails
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var bachelors = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									var bachFlag = false;
// 									if(bachelors.length > 0){
// 										bachelors.forEach(bach=>{
// 											if(bach.faculty == coll.faculty){
// 												bachFlag = true;
// 												var count = 0;
// 												bach.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= bach.colleges.length){
// 													bach.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(bach.instructionalDetails.length > 0) {
// 													bach.form = true;
// 												}
// 											}
// 										})

// 										if(bachFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											bachelors.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										bachelors.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails
// 										})
// 									}
// 								})
// 								educationDetails.bachelors = bachelors;
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},3000)
// 						},4000)

// 					}else if(bachelorDetails[0].college_stream_type == false){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Bachelors_' + bachelorDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							var form;
// 							// if(instructionalDetails.length > 0){
// 							// 	form = true;
// 							// }else{
// 							// 	form = false;
// 							// }
// 							college.push({
// 								collegeId : bachelorDetails[0].collegeId
// 							})
// 							educationDetails.bachelors.push({
// 								faculty : bachelorDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								form : true
// 							})
// 							res.json({
// 								status : 200,
// 								data : educationDetails
// 							})
// 						})
// 					}
// 				}
// 			})
// 		}
// 	}else{
// 		models.userMarkList.find({
// 			where :{
// 				user_id : req.User.id
// 			}
// 		}).then(function(userMarklist){
// 			if(userMarklist.previous_data == true){
// 				if(req.query.degreeValue == 'Phd,Masters,Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Masters",
// 						}
// 					}).then(function(masterDetails){
// 						var differentStream = [];
// 						if(masterDetails.length >0){
// 							if(masterDetails[0].college_stream_type == true){

// 								masterDetails.forEach(master=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Masters_' + master.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == master.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : master.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(mast=>{
// 										models.Program_List.find({
// 											where :{
// 												degree : 'Masters',
// 												faculty : mast.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Masters",
// 													faculty : mast.faculty,
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : mast.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var masters = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var mastFlag = false;
// 											if(masters.length > 0){
// 												masters.forEach(mast=>{
// 													if(mast.faculty == coll.faculty){
// 														mastFlag = true;
// 														var count = 0;
// 														mast.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= mast.colleges.length){
// 															mast.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(mast.instructionalDetails.length >= 0) {
// 															mast.form = true;
// 														}
// 													}
// 												})

// 												if(mastFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													masters.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												masters.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.masters = masters;
// 										models.userMarkList.findAll({
// 											where :{
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 											}
// 										}).then(function(bachelorDetails){
// 											var differentStream = [];
// 											if(bachelorDetails.length >0){
// 												if(bachelorDetails[0].college_stream_type == true){

// 													bachelorDetails.forEach(bachelor=>{
// 														models.InstructionalDetails.findAll({
// 															where:{
// 																userId : req.User.id,
// 																education : 'Bachelors_' + bachelor.faculty
// 															}
// 														}).then(function(instructionalDetails){
// 															if(differentStream.length > 0){
// 																var flag = false;
// 																differentStream.forEach(single=>{
// 																	if(single.faculty == bachelor.faculty){
// 																		flag = true;
// 																	}
// 																})
// 																if(flag == false){

// 																	differentStream.push({
// 																		faculty : bachelor.faculty,
// 																		instructionalDetails : instructionalDetails
// 																	})
// 																}
// 															}else{
// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														})
// 													})
// 													setTimeout(() =>{
// 														var differentCollege = []
// 														differentStream.forEach(bach=>{
// 															models.Program_List.find({
// 																where :{
// 																	degree : 'Bachelors',
// 																	faculty : bach.faculty
// 																}
// 															}).then(function(facultyMaster){
// 																models.userMarkList.findAll({
// 																	where:{
// 																		user_id : req.User.id,
// 																		type : "Bachelors",
// 																		faculty : bach.faculty,
// 																	}
// 																}).then(function(userMarklist){
// 																	if(userMarklist.length > 0){
// 																		if(userMarklist[0].patteren == "Annual"){
// 																			userMarklist.forEach(marklist=>{
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			})
// 																		}else if(userMarklist[0].patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				userMarklist.forEach(marklist=>{
// 																					if(marklist.name == sem){
// 																						differentCollege.push({
// 																							faculty : marklist.faculty,
// 																							collegeId : marklist.collegeId,
// 																							instructionalDetails : bach.instructionalDetails
// 																						})
// 																					}
// 																				})
// 																			}
// 																		}
// 																	}
// 																})
// 															})
// 														})
// 														setTimeout(()=>{
// 															var bachelors = [];
// 															differentCollege.forEach(coll=>{
// 																var college = [];
// 																var bachFlag = false;
// 																if(bachelors.length > 0){
// 																	bachelors.forEach(bach=>{
// 																		if(bach.faculty == coll.faculty){
// 																			bachFlag = true;
// 																			var count = 0;
// 																			bach.colleges.forEach(clg=>{
// 																				if(clg.collegeId == coll.collegeId){
// 																					count ++;
// 																				}
// 																			})
// 																			if(count <= bach.colleges.length){
// 																				bach.colleges.push({
// 																					collegeId : coll.collegeId
// 																				})
// 																			}

// 																			if(bach.instructionalDetails.length >= 0) {
// 																				bach.form = true;
// 																			}
// 																		}
// 																	})

// 																	if(bachFlag == false){
// 																		college.push({
// 																			collegeId : coll.collegeId
// 																		})

// 																		bachelors.push({
// 																			faculty : coll.faculty,
// 																			colleges : college,
// 																			instructionalDetails : coll.instructionalDetails
// 																		})
// 																	}
// 																}else{
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges :college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															})
// 															educationDetails.bachelors = bachelors;
// 															res.json({
// 																status : 200,
// 																data : educationDetails
// 															})
// 														},3000)
// 													},4000)

// 												}else if(bachelorDetails[0].college_stream_type == false){
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelorDetails[0].faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														var college = [];
// 														college.push({
// 															collegeId : bachelorDetails[0].collegeId
// 														})
// 														educationDetails.bachelors.push({
// 															faculty : bachelorDetails[0].faculty,
// 															colleges : college,
// 															instructionalDetails : instructionalDetails,
// 															form : true
// 														})
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													})
// 												}
// 											}else{
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											}
// 										})
// 									},3000)
// 								},4000)

// 							}else if(masterDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + masterDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									college.push({
// 										collegeId : masterDetails[0].collegeId
// 									})
// 									educationDetails.masters.push({
// 										faculty : masterDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									models.userMarkList.findAll({
// 										where :{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											app_id : null
// 										}
// 									}).then(function(bachelorDetails){
// 										var differentStream = [];
// 										if(bachelorDetails.length >0){
// 											if(bachelorDetails[0].college_stream_type == true){

// 												bachelorDetails.forEach(bachelor=>{
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													})
// 												})
// 												setTimeout(() =>{
// 													var differentCollege = []
// 													differentStream.forEach(bach=>{
// 														models.Program_List.find({
// 															where :{
// 																degree : 'Bachelors',
// 																faculty : bach.faculty
// 															}
// 														}).then(function(facultyMaster){
// 															models.userMarkList.findAll({
// 																where:{
// 																	user_id : req.User.id,
// 																	type : "Bachelors",
// 																	faculty : bach.faculty,
// 																}
// 															}).then(function(userMarklist){
// 																if(userMarklist.length > 0){
// 																	userMarklist.forEach(user_Marklist=>{
// 																		if(user_Marklist.patteren == "Annual"){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}else if(user_Marklist.patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				if(user_Marklist.name == sem){
// 																					differentCollege.push({
// 																						faculty : user_Marklist.faculty,
// 																						collegeId : user_Marklist.collegeId,
// 																						instructionalDetails : bach.instructionalDetails
// 																					})
// 																				}
// 																			}
// 																		}
// 																	})
// 																}
// 															})
// 														})
// 													})
// 													setTimeout(()=>{
// 														var bachelors = [];
// 														differentCollege.forEach(coll=>{
// 															var college = [];
// 															var bachFlag = false;
// 															if(bachelors.length > 0){
// 																bachelors.forEach(bach=>{
// 																	if(bach.faculty == coll.faculty){
// 																		bachFlag = true;
// 																		var count = 0;
// 																		bach.colleges.forEach(clg=>{
// 																			if(clg.collegeId == coll.collegeId){
// 																				count ++;
// 																			}
// 																		})
// 																		if(count <= bach.colleges.length){
// 																			bach.colleges.push({
// 																				collegeId : coll.collegeId
// 																			})
// 																		}

// 																		if(bach.instructionalDetails.length > 0) {
// 																			bach.form = true;
// 																		}
// 																	}
// 																})

// 																if(bachFlag == false){
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})

// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges : college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															}else{
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})
// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges :college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														})
// 														educationDetails.bachelors = bachelors;
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													},5000)
// 												},6000)

// 											}else if(bachelorDetails[0].college_stream_type == false){
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelorDetails[0].faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													var college = [];
// 													college.push({
// 														collegeId : bachelorDetails[0].collegeId
// 													})
// 													educationDetails.bachelors.push({
// 														faculty : bachelorDetails[0].faculty,
// 														colleges : college,
// 														instructionalDetails : instructionalDetails,
// 														form :true
// 													})
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												})
// 											}
// 										}
// 										// setTimeout(()=>{
// 										// 	res.json({
// 										// 		status : 200,
// 										// 		data : educationDetails
// 										// 	})
// 										// },10000)
// 									})
// 								})
// 							}
// 						}


// 					})
// 				}else if(req.query.degreeValue == 'Masters,Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Masters",
// 						}
// 					}).then(function(masterDetails){
// 						var differentStream = [];
// 						if(masterDetails.length >0){
// 							if(masterDetails[0].college_stream_type == true){

// 								masterDetails.forEach(master=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Masters_' + master.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == master.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : master.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(mast=>{
// 										models.Program_List.find({
// 											where :{
// 												degree : 'Masters',
// 												faculty : mast.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Masters",
// 													faculty : mast.faculty,
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : mast.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var masters = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var mastFlag = false;
// 											if(masters.length > 0){
// 												masters.forEach(mast=>{
// 													if(mast.faculty == coll.faculty){
// 														mastFlag = true;
// 														var count = 0;
// 														mast.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= mast.colleges.length){
// 															mast.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(mast.instructionalDetails.length >= 0) {
// 															mast.form = true;
// 														}
// 													}
// 												})

// 												if(mastFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													masters.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												masters.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.masters = masters;
// 										models.userMarkList.findAll({
// 											where :{
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 											}
// 										}).then(function(bachelorDetails){
// 											var differentStream = [];
// 											if(bachelorDetails.length >0){
// 												if(bachelorDetails[0].college_stream_type == true){

// 													bachelorDetails.forEach(bachelor=>{
// 														models.InstructionalDetails.findAll({
// 															where:{
// 																userId : req.User.id,
// 																education : 'Bachelors_' + bachelor.faculty
// 															}
// 														}).then(function(instructionalDetails){
// 															if(differentStream.length > 0){
// 																var flag = false;
// 																differentStream.forEach(single=>{
// 																	if(single.faculty == bachelor.faculty){
// 																		flag = true;
// 																	}
// 																})
// 																if(flag == false){

// 																	differentStream.push({
// 																		faculty : bachelor.faculty,
// 																		instructionalDetails : instructionalDetails
// 																	})
// 																}
// 															}else{
// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														})
// 													})
// 													setTimeout(() =>{
// 														var differentCollege = []
// 														differentStream.forEach(bach=>{
// 															models.Program_List.find({
// 																where :{
// 																	degree : 'Bachelors',
// 																	faculty : bach.faculty
// 																}
// 															}).then(function(facultyMaster){
// 																models.userMarkList.findAll({
// 																	where:{
// 																		user_id : req.User.id,
// 																		type : "Bachelors",
// 																		faculty : bach.faculty,
// 																		app_id : null
// 																	}
// 																}).then(function(userMarklist){
// 																	if(userMarklist.length > 0){
// 																		if(userMarklist[0].patteren == "Annual"){
// 																			userMarklist.forEach(marklist=>{
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			})
// 																		}else if(userMarklist[0].patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				userMarklist.forEach(marklist=>{
// 																					if(marklist.name == sem){
// 																						differentCollege.push({
// 																							faculty : marklist.faculty,
// 																							collegeId : marklist.collegeId,
// 																							instructionalDetails : bach.instructionalDetails
// 																						})
// 																					}
// 																				})
// 																			}
// 																		}
// 																	}
// 																})
// 															})
// 														})
// 														setTimeout(()=>{
// 															var bachelors = [];
// 															differentCollege.forEach(coll=>{
// 																var college = [];
// 																var bachFlag = false;
// 																if(bachelors.length > 0){
// 																	bachelors.forEach(bach=>{
// 																		if(bach.faculty == coll.faculty){
// 																			bachFlag = true;
// 																			var count = 0;
// 																			bach.colleges.forEach(clg=>{
// 																				if(clg.collegeId == coll.collegeId){
// 																					count ++;
// 																				}
// 																			})
// 																			if(count <= bach.colleges.length){
// 																				bach.colleges.push({
// 																					collegeId : coll.collegeId
// 																				})
// 																			}

// 																			if(bach.instructionalDetails.length >= 0) {
// 																				bach.form = true;
// 																			}
// 																		}
// 																	})

// 																	if(bachFlag == false){
// 																		college.push({
// 																			collegeId : coll.collegeId
// 																		})

// 																		bachelors.push({
// 																			faculty : coll.faculty,
// 																			colleges : college,
// 																			instructionalDetails : coll.instructionalDetails
// 																		})
// 																	}
// 																}else{
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges :college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															})
// 															educationDetails.bachelors = bachelors;
// 															res.json({
// 																status : 200,
// 																data : educationDetails
// 															})
// 														},3000)
// 													},4000)

// 												}else if(bachelorDetails[0].college_stream_type == false){
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelorDetails[0].faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														var college = [];
// 														college.push({
// 															collegeId : bachelorDetails[0].collegeId
// 														})
// 														educationDetails.bachelors.push({
// 															faculty : bachelorDetails[0].faculty,
// 															colleges : college,
// 															instructionalDetails : instructionalDetails,
// 															form : true
// 														})
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													})
// 												}
// 											}else{
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											}
// 										})
// 									},3000)
// 								},4000)

// 							}else if(masterDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + masterDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									college.push({
// 										collegeId : masterDetails[0].collegeId
// 									})
// 									educationDetails.masters.push({
// 										faculty : masterDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									models.userMarkList.findAll({
// 										where :{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 										}
// 									}).then(function(bachelorDetails){
// 										var differentStream = [];
// 										if(bachelorDetails.length >0){
// 											if(bachelorDetails[0].college_stream_type == true){

// 												bachelorDetails.forEach(bachelor=>{
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													})
// 												})
// 												setTimeout(() =>{
// 													var differentCollege = []
// 													differentStream.forEach(bach=>{
// 														models.Program_List.find({
// 															where :{
// 																degree : 'Bachelors',
// 																faculty : bach.faculty
// 															}
// 														}).then(function(facultyMaster){
// 															models.userMarkList.findAll({
// 																where:{
// 																	user_id : req.User.id,
// 																	type : "Bachelors",
// 																	faculty : bach.faculty,
// 																}
// 															}).then(function(userMarklist){
// 																if(userMarklist.length > 0){
// 																	userMarklist.forEach(user_Marklist=>{
// 																		if(user_Marklist.patteren == "Annual"){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}else if(user_Marklist.patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				if(user_Marklist.name == sem){
// 																					differentCollege.push({
// 																						faculty : user_Marklist.faculty,
// 																						collegeId : user_Marklist.collegeId,
// 																						instructionalDetails : bach.instructionalDetails
// 																					})
// 																				}
// 																			}
// 																		}
// 																	})
// 																}
// 															})
// 														})
// 													})
// 													setTimeout(()=>{
// 														var bachelors = [];
// 														differentCollege.forEach(coll=>{
// 															var college = [];
// 															var bachFlag = false;
// 															if(bachelors.length > 0){
// 																bachelors.forEach(bach=>{
// 																	if(bach.faculty == coll.faculty){
// 																		bachFlag = true;
// 																		var count = 0;
// 																		bach.colleges.forEach(clg=>{
// 																			if(clg.collegeId == coll.collegeId){
// 																				count ++;
// 																			}
// 																		})
// 																		if(count <= bach.colleges.length){
// 																			bach.colleges.push({
// 																				collegeId : coll.collegeId
// 																			})
// 																		}

// 																		if(bach.instructionalDetails.length > 0) {
// 																			bach.form = true;
// 																		}
// 																	}
// 																})

// 																if(bachFlag == false){
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})

// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges : college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															}else{
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})
// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges :college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														})
// 														educationDetails.bachelors = bachelors;
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													},5000)
// 												},6000)

// 											}else if(bachelorDetails[0].college_stream_type == false){
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelorDetails[0].faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													var college = [];
// 													college.push({
// 														collegeId : bachelorDetails[0].collegeId
// 													})
// 													educationDetails.bachelors.push({
// 														faculty : bachelorDetails[0].faculty,
// 														colleges : college,
// 														instructionalDetails : instructionalDetails,
// 														form :true
// 													})
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												})
// 											}
// 										}
// 										// setTimeout(()=>{
// 										// 	res.json({
// 										// 		status : 200,
// 										// 		data : educationDetails
// 										// 	})
// 										// },10000)
// 									})
// 								})
// 							}
// 						}


// 					})
// 				}else if(req.query.degreeValue == 'Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Bachelors",
// 						}
// 					}).then(function(bachelorDetails){
// 						var differentStream = [];
// 						if(bachelorDetails.length >0){
// 							if(bachelorDetails[0].college_stream_type == true){

// 								bachelorDetails.forEach(bachelor=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Bachelors_' + bachelor.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == bachelor.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : bachelor.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : bachelor.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(bach=>{
// 										models.Program_List.find({
// 											where :{
// 												degree : 'Bachelors',
// 												faculty : bach.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Bachelors",
// 													faculty : bach.faculty,
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var bachelors = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var bachFlag = false;
// 											if(bachelors.length > 0){
// 												bachelors.forEach(bach=>{
// 													if(bach.faculty == coll.faculty){
// 														bachFlag = true;
// 														var count = 0;
// 														bach.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= bach.colleges.length){
// 															bach.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(bach.instructionalDetails.length > 0) {
// 															bach.form = true;
// 														}
// 													}
// 												})

// 												if(bachFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													bachelors.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												bachelors.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.bachelors = bachelors;
// 										res.json({
// 											status : 200,
// 											data : educationDetails
// 										})
// 									},3000)
// 								},4000)

// 							}else if(bachelorDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Bachelors_' + bachelorDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									var form;
// 									// if(instructionalDetails.length > 0){
// 									// 	form = true;
// 									// }else{
// 									// 	form = false;
// 									// }
// 									college.push({
// 										collegeId : bachelorDetails[0].collegeId
// 									})
// 									educationDetails.bachelors.push({
// 										faculty : bachelorDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									res.json({
// 										status : 200,
// 										data : educationDetails
// 									})
// 								})
// 							}
// 						}
// 					})
// 				}
// 			}else{
// 				if(req.query.degreeValue == 'Phd,Masters,Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Masters",
// 							app_id : null
// 						}
// 					}).then(function(masterDetails){
// 						var differentStream = [];
// 						if(masterDetails.length >0){
// 							if(masterDetails[0].college_stream_type == true){

// 								masterDetails.forEach(master=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Masters_' + master.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == master.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : master.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(mast=>{
// 										models.Program_List.find({
// 											where :{
// 												degree : 'Masters',
// 												faculty : mast.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Masters",
// 													faculty : mast.faculty,
// 													app_id : null
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : mast.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var masters = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var mastFlag = false;
// 											if(masters.length > 0){
// 												masters.forEach(mast=>{
// 													if(mast.faculty == coll.faculty){
// 														mastFlag = true;
// 														var count = 0;
// 														mast.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= mast.colleges.length){
// 															mast.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(mast.instructionalDetails.length >= 0) {
// 															mast.form = true;
// 														}
// 													}
// 												})

// 												if(mastFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													masters.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												masters.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.masters = masters;
// 										models.userMarkList.findAll({
// 											where :{
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 												app_id : null
// 											}
// 										}).then(function(bachelorDetails){
// 											var differentStream = [];
// 											if(bachelorDetails.length >0){
// 												if(bachelorDetails[0].college_stream_type == true){

// 													bachelorDetails.forEach(bachelor=>{
// 														models.InstructionalDetails.findAll({
// 															where:{
// 																userId : req.User.id,
// 																education : 'Bachelors_' + bachelor.faculty
// 															}
// 														}).then(function(instructionalDetails){
// 															if(differentStream.length > 0){
// 																var flag = false;
// 																differentStream.forEach(single=>{
// 																	if(single.faculty == bachelor.faculty){
// 																		flag = true;
// 																	}
// 																})
// 																if(flag == false){

// 																	differentStream.push({
// 																		faculty : bachelor.faculty,
// 																		instructionalDetails : instructionalDetails
// 																	})
// 																}
// 															}else{
// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														})
// 													})
// 													setTimeout(() =>{
// 														var differentCollege = []
// 														differentStream.forEach(bach=>{
// 															models.Program_List.find({
// 																where :{
// 																	degree : 'Bachelors',
// 																	faculty : bach.faculty
// 																}
// 															}).then(function(facultyMaster){
// 																models.userMarkList.findAll({
// 																	where:{
// 																		user_id : req.User.id,
// 																		type : "Bachelors",
// 																		faculty : bach.faculty,
// 																		app_id : null
// 																	}
// 																}).then(function(userMarklist){
// 																	if(userMarklist.length > 0){
// 																		if(userMarklist[0].patteren == "Annual"){
// 																			userMarklist.forEach(marklist=>{
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			})
// 																		}else if(userMarklist[0].patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				userMarklist.forEach(marklist=>{
// 																					if(marklist.name == sem){
// 																						differentCollege.push({
// 																							faculty : marklist.faculty,
// 																							collegeId : marklist.collegeId,
// 																							instructionalDetails : bach.instructionalDetails
// 																						})
// 																					}
// 																				})
// 																			}
// 																		}
// 																	}
// 																})
// 															})
// 														})
// 														setTimeout(()=>{
// 															var bachelors = [];
// 															differentCollege.forEach(coll=>{
// 																var college = [];
// 																var bachFlag = false;
// 																if(bachelors.length > 0){
// 																	bachelors.forEach(bach=>{
// 																		if(bach.faculty == coll.faculty){
// 																			bachFlag = true;
// 																			var count = 0;
// 																			bach.colleges.forEach(clg=>{
// 																				if(clg.collegeId == coll.collegeId){
// 																					count ++;
// 																				}
// 																			})
// 																			if(count <= bach.colleges.length){
// 																				bach.colleges.push({
// 																					collegeId : coll.collegeId
// 																				})
// 																			}

// 																			if(bach.instructionalDetails.length >= 0) {
// 																				bach.form = true;
// 																			}
// 																		}
// 																	})

// 																	if(bachFlag == false){
// 																		college.push({
// 																			collegeId : coll.collegeId
// 																		})

// 																		bachelors.push({
// 																			faculty : coll.faculty,
// 																			colleges : college,
// 																			instructionalDetails : coll.instructionalDetails
// 																		})
// 																	}
// 																}else{
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges :college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															})
// 															educationDetails.bachelors = bachelors;
// 															res.json({
// 																status : 200,
// 																data : educationDetails
// 															})
// 														},3000)
// 													},4000)

// 												}else if(bachelorDetails[0].college_stream_type == false){
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelorDetails[0].faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														var college = [];
// 														college.push({
// 															collegeId : bachelorDetails[0].collegeId
// 														})
// 														educationDetails.bachelors.push({
// 															faculty : bachelorDetails[0].faculty,
// 															colleges : college,
// 															instructionalDetails : instructionalDetails,
// 															form : true
// 														})
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													})
// 												}
// 											}else{
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											}
// 										})
// 									},3000)
// 								},4000)

// 							}else if(masterDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + masterDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									college.push({
// 										collegeId : masterDetails[0].collegeId
// 									})
// 									educationDetails.masters.push({
// 										faculty : masterDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									models.userMarkList.findAll({
// 										where :{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											app_id : null
// 										}
// 									}).then(function(bachelorDetails){
// 										var differentStream = [];
// 										if(bachelorDetails.length >0){
// 											if(bachelorDetails[0].college_stream_type == true){

// 												bachelorDetails.forEach(bachelor=>{
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													})
// 												})
// 												setTimeout(() =>{
// 													var differentCollege = []
// 													differentStream.forEach(bach=>{
// 														models.Program_List.find({
// 															where :{
// 																degree : 'Bachelors',
// 																faculty : bach.faculty
// 															}
// 														}).then(function(facultyMaster){
// 															models.userMarkList.findAll({
// 																where:{
// 																	user_id : req.User.id,
// 																	type : "Bachelors",
// 																	faculty : bach.faculty,
// 																}
// 															}).then(function(userMarklist){
// 																if(userMarklist.length > 0){
// 																	userMarklist.forEach(user_Marklist=>{
// 																		if(user_Marklist.patteren == "Annual"){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}else if(user_Marklist.patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				if(user_Marklist.name == sem){
// 																					differentCollege.push({
// 																						faculty : user_Marklist.faculty,
// 																						collegeId : user_Marklist.collegeId,
// 																						instructionalDetails : bach.instructionalDetails
// 																					})
// 																				}
// 																			}
// 																		}
// 																	})
// 																}
// 															})
// 														})
// 													})
// 													setTimeout(()=>{
// 														var bachelors = [];
// 														differentCollege.forEach(coll=>{
// 															var college = [];
// 															var bachFlag = false;
// 															if(bachelors.length > 0){
// 																bachelors.forEach(bach=>{
// 																	if(bach.faculty == coll.faculty){
// 																		bachFlag = true;
// 																		var count = 0;
// 																		bach.colleges.forEach(clg=>{
// 																			if(clg.collegeId == coll.collegeId){
// 																				count ++;
// 																			}
// 																		})
// 																		if(count <= bach.colleges.length){
// 																			bach.colleges.push({
// 																				collegeId : coll.collegeId
// 																			})
// 																		}

// 																		if(bach.instructionalDetails.length > 0) {
// 																			bach.form = true;
// 																		}
// 																	}
// 																})

// 																if(bachFlag == false){
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})

// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges : college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															}else{
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})
// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges :college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														})
// 														educationDetails.bachelors = bachelors;
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													},5000)
// 												},6000)

// 											}else if(bachelorDetails[0].college_stream_type == false){
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelorDetails[0].faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													var college = [];
// 													college.push({
// 														collegeId : bachelorDetails[0].collegeId
// 													})
// 													educationDetails.bachelors.push({
// 														faculty : bachelorDetails[0].faculty,
// 														colleges : college,
// 														instructionalDetails : instructionalDetails,
// 														form :true
// 													})
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												})
// 											}
// 										}
// 										// setTimeout(()=>{
// 										// 	res.json({
// 										// 		status : 200,
// 										// 		data : educationDetails
// 										// 	})
// 										// },10000)
// 									})
// 								})
// 							}
// 						}


// 					})
// 				}else if(req.query.degreeValue == 'Masters,Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Masters",
// 							app_id : null
// 						}
// 					}).then(function(masterDetails){
// 						var differentStream = [];
// 						if(masterDetails.length >0){
// 							if(masterDetails[0].college_stream_type == true){

// 								masterDetails.forEach(master=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Masters_' + master.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == master.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : master.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(mast=>{
// 										models.Program_List.find({
// 											where :{
// 												degree : 'Masters',
// 												faculty : mast.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Masters",
// 													faculty : mast.faculty,
// 													app_id : null
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : mast.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var masters = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var mastFlag = false;
// 											if(masters.length > 0){
// 												masters.forEach(mast=>{
// 													if(mast.faculty == coll.faculty){
// 														mastFlag = true;
// 														var count = 0;
// 														mast.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= mast.colleges.length){
// 															mast.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(mast.instructionalDetails.length >= 0) {
// 															mast.form = true;
// 														}
// 													}
// 												})

// 												if(mastFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													masters.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												masters.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.masters = masters;
// 										models.userMarkList.findAll({
// 											where :{
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 												app_id : null
// 											}
// 										}).then(function(bachelorDetails){
// 											var differentStream = [];
// 											if(bachelorDetails.length >0){
// 												if(bachelorDetails[0].college_stream_type == true){

// 													bachelorDetails.forEach(bachelor=>{
// 														models.InstructionalDetails.findAll({
// 															where:{
// 																userId : req.User.id,
// 																education : 'Bachelors_' + bachelor.faculty
// 															}
// 														}).then(function(instructionalDetails){
// 															if(differentStream.length > 0){
// 																var flag = false;
// 																differentStream.forEach(single=>{
// 																	if(single.faculty == bachelor.faculty){
// 																		flag = true;
// 																	}
// 																})
// 																if(flag == false){

// 																	differentStream.push({
// 																		faculty : bachelor.faculty,
// 																		instructionalDetails : instructionalDetails
// 																	})
// 																}
// 															}else{
// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														})
// 													})
// 													setTimeout(() =>{
// 														var differentCollege = []
// 														differentStream.forEach(bach=>{
// 															models.Program_List.find({
// 																where :{
// 																	degree : 'Bachelors',
// 																	faculty : bach.faculty
// 																}
// 															}).then(function(facultyMaster){
// 																models.userMarkList.findAll({
// 																	where:{
// 																		user_id : req.User.id,
// 																		type : "Bachelors",
// 																		faculty : bach.faculty,
// 																		app_id : null
// 																	}
// 																}).then(function(userMarklist){
// 																	if(userMarklist.length > 0){
// 																		if(userMarklist[0].patteren == "Annual"){
// 																			userMarklist.forEach(marklist=>{
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			})
// 																		}else if(userMarklist[0].patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				userMarklist.forEach(marklist=>{
// 																					if(marklist.name == sem){
// 																						differentCollege.push({
// 																							faculty : marklist.faculty,
// 																							collegeId : marklist.collegeId,
// 																							instructionalDetails : bach.instructionalDetails
// 																						})
// 																					}
// 																				})
// 																			}
// 																		}
// 																	}
// 																})
// 															})
// 														})
// 														setTimeout(()=>{
// 															var bachelors = [];
// 															differentCollege.forEach(coll=>{
// 																var college = [];
// 																var bachFlag = false;
// 																if(bachelors.length > 0){
// 																	bachelors.forEach(bach=>{
// 																		if(bach.faculty == coll.faculty){
// 																			bachFlag = true;
// 																			var count = 0;
// 																			bach.colleges.forEach(clg=>{
// 																				if(clg.collegeId == coll.collegeId){
// 																					count ++;
// 																				}
// 																			})
// 																			if(count <= bach.colleges.length){
// 																				bach.colleges.push({
// 																					collegeId : coll.collegeId
// 																				})
// 																			}

// 																			if(bach.instructionalDetails.length >= 0) {
// 																				bach.form = true;
// 																			}
// 																		}
// 																	})

// 																	if(bachFlag == false){
// 																		college.push({
// 																			collegeId : coll.collegeId
// 																		})

// 																		bachelors.push({
// 																			faculty : coll.faculty,
// 																			colleges : college,
// 																			instructionalDetails : coll.instructionalDetails
// 																		})
// 																	}
// 																}else{
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges :college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															})
// 															educationDetails.bachelors = bachelors;
// 															res.json({
// 																status : 200,
// 																data : educationDetails
// 															})
// 														},3000)
// 													},4000)

// 												}else if(bachelorDetails[0].college_stream_type == false){
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelorDetails[0].faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														var college = [];
// 														college.push({
// 															collegeId : bachelorDetails[0].collegeId
// 														})
// 														educationDetails.bachelors.push({
// 															faculty : bachelorDetails[0].faculty,
// 															colleges : college,
// 															instructionalDetails : instructionalDetails,
// 															form : true
// 														})
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													})
// 												}
// 											}else{
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											}
// 										})
// 									},3000)
// 								},4000)

// 							}else if(masterDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + masterDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									college.push({
// 										collegeId : masterDetails[0].collegeId
// 									})
// 									educationDetails.masters.push({
// 										faculty : masterDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									models.userMarkList.findAll({
// 										where :{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											app_id : null
// 										}
// 									}).then(function(bachelorDetails){
// 										var differentStream = [];
// 										if(bachelorDetails.length >0){
// 											if(bachelorDetails[0].college_stream_type == true){

// 												bachelorDetails.forEach(bachelor=>{
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													})
// 												})
// 												setTimeout(() =>{
// 													var differentCollege = []
// 													differentStream.forEach(bach=>{
// 														models.Program_List.find({
// 															where :{
// 																degree : 'Bachelors',
// 																faculty : bach.faculty
// 															}
// 														}).then(function(facultyMaster){
// 															models.userMarkList.findAll({
// 																where:{
// 																	user_id : req.User.id,
// 																	type : "Bachelors",
// 																	faculty : bach.faculty,
// 																}
// 															}).then(function(userMarklist){
// 																if(userMarklist.length > 0){
// 																	userMarklist.forEach(user_Marklist=>{
// 																		if(user_Marklist.patteren == "Annual"){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}else if(user_Marklist.patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				if(user_Marklist.name == sem){
// 																					differentCollege.push({
// 																						faculty : user_Marklist.faculty,
// 																						collegeId : user_Marklist.collegeId,
// 																						instructionalDetails : bach.instructionalDetails
// 																					})
// 																				}
// 																			}
// 																		}
// 																	})
// 																}
// 															})
// 														})
// 													})
// 													setTimeout(()=>{
// 														var bachelors = [];
// 														differentCollege.forEach(coll=>{
// 															var college = [];
// 															var bachFlag = false;
// 															if(bachelors.length > 0){
// 																bachelors.forEach(bach=>{
// 																	if(bach.faculty == coll.faculty){
// 																		bachFlag = true;
// 																		var count = 0;
// 																		bach.colleges.forEach(clg=>{
// 																			if(clg.collegeId == coll.collegeId){
// 																				count ++;
// 																			}
// 																		})
// 																		if(count <= bach.colleges.length){
// 																			bach.colleges.push({
// 																				collegeId : coll.collegeId
// 																			})
// 																		}

// 																		if(bach.instructionalDetails.length > 0) {
// 																			bach.form = true;
// 																		}
// 																	}
// 																})

// 																if(bachFlag == false){
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})

// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges : college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															}else{
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})
// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges :college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														})
// 														educationDetails.bachelors = bachelors;
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													},5000)
// 												},6000)

// 											}else if(bachelorDetails[0].college_stream_type == false){
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelorDetails[0].faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													var college = [];
// 													college.push({
// 														collegeId : bachelorDetails[0].collegeId
// 													})
// 													educationDetails.bachelors.push({
// 														faculty : bachelorDetails[0].faculty,
// 														colleges : college,
// 														instructionalDetails : instructionalDetails,
// 														form :true
// 													})
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												})
// 											}
// 										}
// 										// setTimeout(()=>{
// 										// 	res.json({
// 										// 		status : 200,
// 										// 		data : educationDetails
// 										// 	})
// 										// },10000)
// 									})
// 								})
// 							}
// 						}


// 					})
// 				}else if(req.query.degreeValue == 'Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Bachelors",
// 							app_id : null
// 						}
// 					}).then(function(bachelorDetails){
// 						var differentStream = [];
// 						if(bachelorDetails.length >0){
// 							if(bachelorDetails[0].college_stream_type == true){

// 								bachelorDetails.forEach(bachelor=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Bachelors_' + bachelor.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == bachelor.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : bachelor.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : bachelor.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(bach=>{
// 										models.Program_List.find({
// 											where :{
// 												degree : 'Bachelors',
// 												faculty : bach.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Bachelors",
// 													faculty : bach.faculty,
// 													app_id : null
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var bachelors = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var bachFlag = false;
// 											if(bachelors.length > 0){
// 												bachelors.forEach(bach=>{
// 													if(bach.faculty == coll.faculty){
// 														bachFlag = true;
// 														var count = 0;
// 														bach.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= bach.colleges.length){
// 															bach.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(bach.instructionalDetails.length > 0) {
// 															bach.form = true;
// 														}
// 													}
// 												})

// 												if(bachFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													bachelors.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												bachelors.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.bachelors = bachelors;
// 										res.json({
// 											status : 200,
// 											data : educationDetails
// 										})
// 									},3000)
// 								},4000)

// 							}else if(bachelorDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Bachelors_' + bachelorDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									var form;
// 									// if(instructionalDetails.length > 0){
// 									// 	form = true;
// 									// }else{
// 									// 	form = false;
// 									// }
// 									college.push({
// 										collegeId : bachelorDetails[0].collegeId
// 									})
// 									educationDetails.bachelors.push({
// 										faculty : bachelorDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									res.json({
// 										status : 200,
// 										data : educationDetails
// 									})
// 								})
// 							}
// 						}
// 					})
// 				}
// 			}
// 		})

// 	}
// })

// router.get('/getInstructionalDetails',middlewares.getUserInfo,(req,res)=>{
// 	console.log('/getInstructionalDetails-------------');
// 	var educationDetails = {
// 		bachelors : [],
// 		masters : []
// 	};
// 	if(req.query.editFlag == 'true'){
// 		console.log('true');
// 		if(req.query.degreeValue == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Masters",
// 				}
// 			}).then(function(master_Details){
// 				let masters_duration;
// 				var differentStream = [];
// 				var masterDetails = [];
// 				if(master_Details.length > 0){
// 					master_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									masterDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				if(masterDetails.length >0){
// 					if(masterDetails[0].college_stream_type == true){
// 						let college_List=[]
// 						masterDetails.forEach(master=>{
// 							models.College.find({
// 									where :{
// 										id : master.collegeId
// 									}
// 								}).then(collegename=>{
// 									if(master.patteren == "Annual"){
// 										college_List.push({
// 											clg_name : collegename.name,
// 											academic_year : master.name
// 										})
// 									}else if(master.patteren == "Semester"){
// 										switch(master.name){
// 											case 'Semester 2' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'First Year'
// 												})
// 												break;
// 											case 'Semester 4' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Second Year'
// 												})
// 												break;
// 											case 'Semester 6' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Third Year'
// 												})
// 												break;
// 											case 'Semester 8' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Fourth Year'
// 												})

// 												break;
// 											case 'Semester 10' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Fifth Year'
// 												})
// 												break;
// 										}
// 									}
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + master.faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == master.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){

// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails,
// 												type : master.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : master.faculty,
// 											instructionalDetails : instructionalDetails,
// 											type : master.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(mast=>{
// 								models.Program_List.find({
// 									where :{
// 										degree : 'Masters',
// 										faculty : mast.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Masters",
// 											faculty : mast.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : mast.instructionalDetails,
// 														type : marklist.type,
// 														// college_List : college_List,
// 														clg_duration: facultyMaster.year,
// 														form : true
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails,
// 																type : marklist.type,
// 																// college_List : college_List,
// 																clg_duration: facultyMaster.year,
// 																form: true
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var masters = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									models.College.find({
// 										where :{
// 											id : coll.collegeId
// 										}
// 									}).then(collegename=>{
// 									if(masters.length > 0){
// 										masters.forEach(mast=>{
// 											if(mast.faculty == coll.faculty){
// 												mastFlag = true;
// 												var count = 0;
// 												mast.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= mast.colleges.length){
// 													mast.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(mast.instructionalDetails.length > 0) {
// 													mast.form = true;
// 												}
// 											}
// 										})

// 										if(mastFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											masters.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration,
// 												college_name: collegename.name,
// 												form : true
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										masters.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration,
// 											college_name: collegename.name,
// 											form : true
// 										})
// 									}
// 								})
// 							})
// 								educationDetails.masters = masters;
// 								models.userMarkList.findAll({
// 									where :{
// 										user_id : req.User.id,
// 										type : "Bachelors",
// 									}
// 								}).then(function(bachelorDetails){
// 									// let clg_duration =3;
// 									var differentStream = [];
// 									if(bachelorDetails.length >0){
// 										if(bachelorDetails[0].college_stream_type == true){
// 											let college_List =[];
// 											bachelorDetails.forEach(bachelor=>{
// 												models.College.find({
// 													where :{
// 														id : bachelor.collegeId
// 													}
// 												}).then(collegename=>{
// 													if(bachelor.patteren == "Annual"){
// 														//academic_year = bachelor.name;
// 														college_List.push({
// 															clg_name : collegename.name,
// 															academic_year : bachelor.name
// 														})
// 													}else if(bachelor.patteren == "Semester"){
// 														switch(bachelor.name){
// 															case 'Semester 2' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'First Year'
// 																})
// 																break;
// 															case 'Semester 4' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Second Year'
// 																})
// 																break;
// 															case 'Semester 6' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Third Year'
// 																})
// 																break;
// 															case 'Semester 8' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fourth Year'
// 																})

// 																break;
// 															case 'Semester 10' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fifth Year'
// 																})
// 																break;
// 														}
// 													}
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails,
// 																	type : bachelor.type,
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails,
// 																type : bachelor.type,
// 															})
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(() =>{
// 												var differentCollege = []
// 												differentStream.forEach(bach=>{
// 													models.Program_List.find({
// 														where :{
// 															degree : 'Bachelors',
// 															faculty : bach.faculty
// 														}
// 													}).then(function(facultyMaster){
// 														models.userMarkList.findAll({
// 															where:{
// 																user_id : req.User.id,
// 																type : "Bachelors",
// 																faculty : bach.faculty,
// 															}
// 														}).then(function(userMarklist){
// 															if(userMarklist.length > 0){
// 																if(userMarklist[0].patteren == "Annual"){
// 																	userMarklist.forEach(marklist=>{
// 																		differentCollege.push({
// 																			faculty : marklist.faculty,
// 																			collegeId : marklist.collegeId,
// 																			instructionalDetails : bach.instructionalDetails,
// 																			type : marklist.type,
// 																			// college_List : college_List,
// 																			clg_duration: facultyMaster.year
// 																		})
// 																	})
// 																}else if(userMarklist[0].patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		userMarklist.forEach(marklist=>{
// 																			if(marklist.name == sem){
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails,
// 																					type : marklist.type,
// 																					// college_List : college_List,
// 																					clg_duration: facultyMaster.year
// 																				})
// 																			}
// 																		})
// 																	}
// 																}
// 															}
// 														})
// 													})
// 												})
// 												setTimeout(()=>{
// 													var bachelors = [];
// 													differentCollege.forEach(coll=>{
// 														var college = [];
// 														var bachFlag = false;
// 														if(bachelors.length > 0){
// 															bachelors.forEach(bach=>{
// 																if(bach.faculty == coll.faculty){
// 																	bachFlag = true;
// 																	var count = 0;
// 																	bach.colleges.forEach(clg=>{
// 																		if(clg.collegeId == coll.collegeId){
// 																			count ++;
// 																		}
// 																	})
// 																	if(count <= bach.colleges.length){
// 																		bach.colleges.push({
// 																			collegeId : coll.collegeId
// 																		})
// 																	}

// 																	if(bach.instructionalDetails.length > 0) {
// 																		bach.form = true;
// 																	}
// 																}
// 															})

// 															if(bachFlag == false){
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})

// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges : college,
// 																	instructionalDetails : coll.instructionalDetails,
// 																	college_List : college_List,
// 																	type: coll.type +' of '+ coll.faculty,
// 																	clg_duration : coll.clg_duration,
// 																})
// 															}
// 														}else{
// 															college.push({
// 																collegeId : coll.collegeId
// 															})
// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges :college,
// 																instructionalDetails : coll.instructionalDetails,
// 																college_List : college_List,
// 																type: coll.type +' of '+ coll.faculty,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													})
// 													educationDetails.bachelors = bachelors;
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												},3000)
// 											},4000)

// 										}else if(bachelorDetails[0].college_stream_type == false){
// 											models.College.find({
// 												where :{
// 													id : bachelorDetails[0].collegeId
// 												}
// 											}).then(collegename=>{
// 												models.Program_List.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bachelorDetails[0].faculty
// 													}
// 												}).then(function(facultyMaster){
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelorDetails[0].faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												var college = [];
// 												college.push({
// 													collegeId : bachelorDetails[0].collegeId
// 												})
// 												educationDetails.bachelors.push({
// 													faculty : bachelorDetails[0].faculty,
// 													colleges : college,
// 													instructionalDetails : instructionalDetails,
// 													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 													college_name: collegename.name,
// 													clg_duration : facultyMaster.year,
// 												})
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											})
// 										})
// 										})
// 										}
// 									}
// 								})
// 							},3000)
// 						},4000)

// 					}else if(masterDetails[0].college_stream_type == false){
// 						models.College.find({
// 							where :{
// 								id : masterDetails[0].collegeId
// 							}
// 						}).then(master_collegename=>{
// 							models.Program_List.find({
// 								where :{
// 									degree : 'Masters',
// 									faculty : masterDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Masters_' + masterDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							college.push({
// 								collegeId : masterDetails[0].collegeId
// 							})
// 							educationDetails.masters.push({
// 								faculty : masterDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
// 								college_name: master_collegename.name,
// 								clg_duration : facultyMaster.year,
// 								form : true
// 							})
// 							models.userMarkList.findAll({
// 								where :{
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 								}
// 							}).then(function(bachelorDetails){
// 								var differentStream = [];
// 								let clg_duration ;
// 								if(bachelorDetails.length >0){
// 									if(bachelorDetails[0].college_stream_type == true){
// 										let college_List=[];
// 										bachelorDetails.forEach(bachelor=>{
// 											models.College.find({
// 												where :{
// 													id : bachelor.collegeId
// 												}
// 											}).then(collegename=>{
// 												if(bachelor.patteren == "Annual"){
// 													//academic_year = bachelor.name;
// 													college_List.push({
// 														clg_name : collegename.name,
// 														academic_year : bachelor.name
// 													})
// 												}else if(bachelor.patteren == "Semester"){
// 													switch(bachelor.name){
// 														case 'Semester 2' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'First Year'
// 															})
// 															break;
// 														case 'Semester 4' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Second Year'
// 															})
// 															break;
// 														case 'Semester 6' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Third Year'
// 															})
// 															break;
// 														case 'Semester 8' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fourth Year'
// 															})

// 															break;
// 														case 'Semester 10' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fifth Year'
// 															})
// 															break;
// 													}
// 												}
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelor.faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													if(differentStream.length > 0){
// 														var flag = false;
// 														differentStream.forEach(single=>{
// 															if(single.faculty == bachelor.faculty){
// 																flag = true;
// 															}
// 														})
// 														if(flag == false){

// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails,
// 																type : bachelor.type,
// 															})
// 														}
// 													}else{
// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails,
// 															type : bachelor.type,
// 														})
// 													}
// 												})
// 											})
// 										})
// 										setTimeout(() =>{
// 											var differentCollege = []
// 											differentStream.forEach(bach=>{
// 												models.Program_List.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bach.faculty
// 													}
// 												}).then(function(facultyMaster){
// 													models.userMarkList.findAll({
// 														where:{
// 															user_id : req.User.id,
// 															type : "Bachelors",
// 															faculty : bach.faculty,
// 														}
// 													}).then(function(userMarklist){
// 														if(userMarklist.length > 0){
// 															if(userMarklist[0].patteren == "Annual"){
// 																userMarklist.forEach(marklist=>{
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails,
// 																		// college_List : college_List,
// 																		type : user_Marklist.type,
// 																		clg_duration: facultyMaster.year
// 																	})
// 																})
// 															}else if(userMarklist[0].patteren == "Semester"){
// 																var semesters = facultyMaster.year * 2;
// 																for(var i = 2; i <= semesters; i=i+2){
// 																	var sem = "Semester " + i
// 																	userMarklist.forEach(marklist=>{
// 																		if(marklist.name == sem){
// 																			differentCollege.push({
// 																				faculty : marklist.faculty,
// 																				collegeId : marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails,
// 																				// college_List : college_List,
// 																				type : user_Marklist.type,
// 																				clg_duration: facultyMaster.year
// 																			})
// 																		}
// 																	})
// 																}
// 															}
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(()=>{
// 												var bachelors = [];
// 												differentCollege.forEach(coll=>{
// 													var college = [];
// 													var bachFlag = false;
// 													if(bachelors.length > 0){
// 														bachelors.forEach(bach=>{
// 															if(bach.faculty == coll.faculty){
// 																bachFlag = true;
// 																var count = 0;
// 																bach.colleges.forEach(clg=>{
// 																	if(clg.collegeId == coll.collegeId){
// 																		count ++;
// 																	}
// 																})
// 																if(count <= bach.colleges.length){
// 																	bach.colleges.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																}

// 																if(bach.instructionalDetails.length > 0) {
// 																	bach.form = true;
// 																}
// 															}
// 														})

// 														if(bachFlag == false){
// 															college.push({
// 																collegeId : coll.collegeId
// 															})

// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges : college,
// 																instructionalDetails : coll.instructionalDetails,
// 																type: coll.type +' of '+ coll.faculty,
// 																college_List : college_List,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													}else{
// 														college.push({
// 															collegeId : coll.collegeId
// 														})
// 														bachelors.push({
// 															faculty : coll.faculty,
// 															colleges :college,
// 															instructionalDetails : coll.instructionalDetails,
// 															type: coll.type +' of '+ coll.faculty,
// 															college_List : college_List,
// 															clg_duration : coll.clg_duration,
// 														})
// 													}
// 												})
// 												educationDetails.bachelors = bachelors;

// 											},3000)
// 										},4000)

// 									}else if(bachelorDetails[0].college_stream_type == false){
// 										models.College.find({
// 											where :{
// 												id : bachelorDetails[0].collegeId
// 											}
// 										}).then(collegename=>{
// 											models.Program_List.find({
// 												where :{
// 													degree : 'Bachelors',
// 													faculty : bachelorDetails[0].faculty
// 												}
// 											}).then(function(facultyMaster){
// 										models.InstructionalDetails.findAll({
// 											where:{
// 												userId : req.User.id,
// 												education : 'Bachelors_' + bachelorDetails[0].faculty
// 											}
// 										}).then(function(instructionalDetails){
// 											var college = [];
// 											college.push({
// 												collegeId : bachelorDetails[0].collegeId
// 											})
// 											educationDetails.bachelors.push({
// 												faculty : bachelorDetails[0].faculty,
// 												colleges : college,
// 												instructionalDetails : instructionalDetails,
// 												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 												college_name: collegename.name,
// 												clg_duration : facultyMaster.year,
// 												form :true
// 											})
// 										})
// 									})
// 									})
// 									}
// 								}
// 							})
// 							setTimeout(()=>{
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},2000);
// 						})
// 					})
// 					})
// 					}
// 				}
// 			})
// 		}else if(req.query.degreeValue == 'Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Bachelors",
// 				}
// 			}).then(function(bachelor_Details){
// 				let clg_duration ;
// 				var differentStream = [];
// 				var bachelorDetails = [];
// 				if(bachelor_Details.length > 0){
// 					bachelor_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									bachelorDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				if(bachelorDetails.length >0){
// 					if(bachelorDetails[0].college_stream_type == true){
// 						let college_List = [];
// 						bachelorDetails.forEach(bachelor=>{
// 							models.College.find({
// 								where :{
// 									id : bachelor.collegeId
// 								}
// 							}).then(collegename=>{
// 								if(bachelor.patteren == "Annual"){
// 									//academic_year = bachelor.name;
// 									college_List.push({
// 										clg_name : collegename.name,
// 										academic_year : bachelor.name
// 									})
// 								}else if(bachelor.patteren == "Semester"){
// 									switch(bachelor.name){
// 										case 'Semester 2' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'First Year'
// 											})
// 											break;
// 										case 'Semester 4' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Second Year'
// 											})
// 											break;
// 										case 'Semester 6' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Third Year'
// 											})
// 											break;
// 										case 'Semester 8' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fourth Year'
// 											})

// 											break;
// 										case 'Semester 10' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fifth Year'
// 											})
// 											break;
// 									}
// 								}
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Bachelors_' + bachelor.faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == bachelor.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){

// 											differentStream.push({
// 												faculty : bachelor.faculty,
// 												instructionalDetails : instructionalDetails,
// 												type : bachelor.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : bachelor.faculty,
// 											instructionalDetails : instructionalDetails,
// 											type : bachelor.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(bach=>{
// 								models.Program_List.find({
// 									where :{
// 										degree : 'Bachelors',
// 										faculty : bach.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											faculty : bach.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : bach.instructionalDetails,
// 														type : marklist.type,
// 														// college_List : college_List,
// 														clg_duration: facultyMaster.year
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails,
// 																type : marklist.type,
// 																// college_List : college_List,
// 																clg_duration : facultyMaster.year
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var bachelors = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									var bachFlag = false;
// 									if(bachelors.length > 0){
// 										bachelors.forEach(bach=>{
// 											if(bach.faculty == coll.faculty){
// 												bachFlag = true;
// 												var count = 0;
// 												bach.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= bach.colleges.length){
// 													bach.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(bach.instructionalDetails.length > 0) {
// 													bach.form = true;
// 												}
// 											}
// 										})

// 										if(bachFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											bachelors.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										bachelors.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration
// 										})
// 									}
// 								})
// 								educationDetails.bachelors = bachelors;
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},3000)
// 						},4000)

// 					}else if(bachelorDetails[0].college_stream_type == false){
// 						console.log('in false');
// 						models.College.find({
// 							where :{
// 								id : bachelorDetails[0].collegeId
// 							}
// 						}).then(collegename=>{
// 							models.Program_List.find({
// 								where :{
// 									degree : 'Bachelors',
// 									faculty : bachelorDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Bachelors_' + bachelorDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							var form;
// 							// if(instructionalDetails.length > 0){
// 							// 	form = true;
// 							// }else{
// 							// 	form = false;
// 							// }
// 							college.push({
// 								collegeId : bachelorDetails[0].collegeId
// 							})
// 							educationDetails.bachelors.push({
// 								faculty : bachelorDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 								college_name: collegename.name,
// 								clg_duration : facultyMaster.year,
// 								form : true
// 							})
// 							res.json({
// 								status : 200,
// 								data : educationDetails
// 							})
// 						})
// 					})
// 					})
// 					}
// 				}
// 			})
// 		}
// 	}else{
// 		if(req.query.degreeValue == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Masters",
// 					// app_id : null
// 				}
// 			}).then(function(masterDetails){
// 				let masters_duration;
// 				var differentStream = [];
// 				if(masterDetails.length >0){
// 					if(masterDetails[0].college_stream_type == true){
// 						let college_List=[]
// 						let academic_year_master =[]
// 						masterDetails.forEach(master=>{
// 								models.College.find({
// 									where :{
// 										id : master.collegeId
// 									}
// 								}).then(collegename=>{

// 									if(master.patteren == "Annual"){
// 										college_List.push({
// 											clg_name : collegename.name,
// 											academic_year : master.name
// 										})
// 									}else if(master.patteren == "Semester"){
// 										switch(master.name){
// 											case 'Semester 2' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'First Year'
// 												})
// 												break;
// 											case 'Semester 4' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Second Year'
// 												})
// 												break;
// 											case 'Semester 6' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Third Year'
// 												})
// 												break;
// 											case 'Semester 8' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Fourth Year'
// 												})

// 												break;
// 											case 'Semester 10' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Fifth Year'
// 												})
// 												break;
// 										}
// 									}
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + master.faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == master.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){

// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails,
// 												type : master.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : master.faculty,
// 											instructionalDetails : instructionalDetails,
// 											type : master.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							/** Updating college list **/
// 							// jsonObject = college_List.map(JSON.stringify);
// 							// console.log("Data===>"+jsonObject);
// 							// uniqueSet = new Set(jsonObject);
// 							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
// 							/** Updating college list **/
// 							var differentCollege = []
// 							differentStream.forEach(mast=>{
// 								console.log("mast==>"+JSON.stringify(mast))
// 								models.Program_List.find({
// 									where :{
// 										degree : 'Masters',
// 										faculty : mast.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Masters",
// 											faculty : mast.faculty,
// 											app_id : null
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													// academic_year_master.push({
// 													// 	academic_year : marklist.name
// 													// })
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : mast.instructionalDetails,
// 														type : marklist.type,
// 														// college_List : college_List,
// 														clg_duration: facultyMaster.year,
// 														college_name: marklist.name
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															// if(marklist.name == 'Semester 2'){
// 															// 	academic_year_master.push({
// 															// 		academic_year : 'First Year'
// 															// 	})
// 															// }
// 															// if(marklist.name == 'Semester 4'){
// 															// 	academic_year_master.push({
// 															// 		academic_year : 'Second Year'
// 															// 	})
// 															// }
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails,
// 																type : marklist.type,
// 																// college_List : college_List,
// 																clg_duration: facultyMaster.year,
// 																// college_name: collegename.name,
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var masters = [];
// 								differentCollege.forEach(coll=>{
// 									console.log("coll==."+JSON.stringify(coll))
// 									models.College.find({
// 										where :{
// 											id : coll.collegeId
// 										}
// 									}).then(collegename=>{

// 									var mastFlag = false
// 									var college = [];
// 									if(masters.length > 0){
// 										masters.forEach(mast=>{
// 											if(mast.faculty == coll.faculty){
// 												mastFlag = true;
// 												var count = 0;
// 												mast.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= mast.colleges.length){
// 													mast.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(mast.instructionalDetails.length >= 0) {
// 													mast.form = true;
// 												}
// 											}
// 										})

// 										if(mastFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											masters.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration,
// 												college_name: collegename.name,
// 												form : true
// 												// academic_year : academic_year_master
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										masters.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration,
// 											college_name: collegename.name,
// 											form : true
// 											// academic_year : academic_year_master
// 										})
// 									}
// 								})
// 							})
// 								educationDetails.masters = masters;
// 								models.userMarkList.findAll({
// 									where :{
// 										user_id : req.User.id,
// 										type : "Bachelors",
// 										app_id : null
// 									}
// 								}).then(function(bachelorDetails){
// 									let clg_duration;
// 									var differentStream = [];
// 									// let academic_year_list =[];
// 									if(bachelorDetails.length >0){
// 										if(bachelorDetails[0].college_stream_type == true){
// 											let college_List =[];
// 											bachelorDetails.forEach(bachelor=>{
// 												models.College.find({
// 													where :{
// 														id : bachelor.collegeId
// 													}
// 												}).then(collegename=>{
// 													if(bachelor.patteren == "Annual"){
// 														//academic_year = bachelor.name;
// 														college_List.push({
// 															clg_name : collegename.name,
// 															academic_year : bachelor.name
// 														})
// 													}else if(bachelor.patteren == "Semester"){
// 														switch(bachelor.name){
// 															case 'Semester 2' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'First Year'
// 																})
// 																break;
// 															case 'Semester 4' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Second Year'
// 																})
// 																break;
// 															case 'Semester 6' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Third Year'
// 																})
// 																break;
// 															case 'Semester 8' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fourth Year'
// 																})

// 																break;
// 															case 'Semester 10' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fifth Year'
// 																})
// 																break;
// 														}
// 													}
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelor.faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													if(differentStream.length > 0){
// 														var flag = false;
// 														differentStream.forEach(single=>{
// 															if(single.faculty == bachelor.faculty){
// 																flag = true;
// 															}
// 														})
// 														if(flag == false){

// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails,
// 																type : bachelor.type,
// 															})
// 														}
// 													}else{
// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails,
// 															type : bachelor.type,
// 														})
// 													}
// 												})
// 											})
// 											})
// 											setTimeout(() =>{
// 												/** Updating college list **/
// 												// jsonObject = college_List.map(JSON.stringify);
// 												// console.log("Data===>"+jsonObject);
// 												// uniqueSet = new Set(jsonObject);
// 												// Updated_list = Array.from(uniqueSet).map(JSON.parse);
// 												/** Updating college list **/
// 												var differentCollege = []
// 												differentStream.forEach(bach=>{
// 													models.Program_List.find({
// 														where :{
// 															degree : 'Bachelors',
// 															faculty : bach.faculty
// 														}
// 													}).then(function(facultyMaster){
// 														models.userMarkList.findAll({
// 															where:{
// 																user_id : req.User.id,
// 																type : "Bachelors",
// 																faculty : bach.faculty,
// 																app_id : null
// 															}
// 														}).then(function(userMarklist){
// 															if(userMarklist.length > 0){
// 																if(userMarklist[0].patteren == "Annual"){
// 																	userMarklist.forEach(marklist=>{
// 																		// academic_year_list.push({
// 																		// 	academic_year : marklist.name
// 																		// })
// 																		differentCollege.push({
// 																			faculty : marklist.faculty,
// 																			collegeId : marklist.collegeId,
// 																			instructionalDetails : bach.instructionalDetails,
// 																			type : marklist.type,
// 																			// college_List : college_List.push,
// 																			clg_duration: facultyMaster.year
// 																		})
// 																	})
// 																}else if(userMarklist[0].patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		userMarklist.forEach(marklist=>{
// 																			if(marklist.name == sem){
// 																				// if(marklist.name == 'Semester 2'){
// 																				// 	academic_year_list.push({
// 																				// 		academic_year : 'First Year'
// 																				// 	})
// 																				// }
// 																				// if(marklist.name == 'Semester 4'){
// 																				// 	academic_year_list.push({
// 																				// 		academic_year : 'Second Year'
// 																				// 	})
// 																				// }
// 																				// if(marklist.name == 'Semester 6'){
// 																				// 	academic_year_list.push({
// 																				// 		academic_year : 'Third Year'
// 																				// 	})
// 																				// }
// 																				// if(marklist.name == 'Semester 8'){
// 																				// 	academic_year_list.push({
// 																				// 		academic_year : 'Fourth Year'
// 																				// 	})
// 																				// }
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails,
// 																					type : marklist.type,
// 																					// college_List : college_List,
// 																					clg_duration: facultyMaster.year,
// 																					form : true
// 																				})
// 																			}
// 																		})
// 																	}
// 																}
// 															}
// 														})
// 													})
// 												})
// 												setTimeout(()=>{
// 													var bachelors = [];
// 													differentCollege.forEach(coll=>{
// 														var college = [];
// 														var bachFlag = false;
// 														if(bachelors.length > 0){
// 															bachelors.forEach(bach=>{
// 																if(bach.faculty == coll.faculty){
// 																	bachFlag = true;
// 																	var count = 0;
// 																	bach.colleges.forEach(clg=>{
// 																		if(clg.collegeId == coll.collegeId){
// 																			count ++;
// 																		}
// 																	})
// 																	if(count <= bach.colleges.length){
// 																		bach.colleges.push({
// 																			collegeId : coll.collegeId
// 																		})
// 																	}

// 																	if(bach.instructionalDetails.length >= 0) {
// 																		bach.form = true;
// 																	}
// 																}
// 															})

// 															if(bachFlag == false){
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})

// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges : college,
// 																	instructionalDetails : coll.instructionalDetails,
// 																	college_List : college_List,
// 																	type: coll.type +' of '+ coll.faculty,
// 																	clg_duration : coll.clg_duration,
// 																	form : true
// 																	// academic_year : academic_year_list
// 																})
// 															}
// 														}else{
// 															college.push({
// 																collegeId : coll.collegeId
// 															})
// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges :college,
// 																instructionalDetails : coll.instructionalDetails,
// 																college_List : college_List,
// 																type: coll.type +' of '+ coll.faculty,
// 																clg_duration : coll.clg_duration,
// 																// academic_year : academic_year_list
// 															})
// 														}
// 													})
// 													educationDetails.bachelors = bachelors;
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												},3000)
// 											},4000)

// 										}else if(bachelorDetails[0].college_stream_type == false){
// 											models.College.find({
// 												where :{
// 													id : bachelorDetails[0].collegeId
// 												}
// 											}).then(collegename=>{
// 												models.Program_List.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bachelorDetails[0].faculty
// 													}
// 												}).then(function(facultyMaster){
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelorDetails[0].faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												var college = [];
// 												college.push({
// 													collegeId : bachelorDetails[0].collegeId
// 												})
// 												educationDetails.bachelors.push({
// 													faculty : bachelorDetails[0].faculty,
// 													colleges : college,
// 													instructionalDetails : instructionalDetails,
// 													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 													college_name: collegename.name,
// 													clg_duration : facultyMaster.year,
// 													form : true
// 												})
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											})
// 										})
// 									})
// 										}
// 									}
// 								})
// 							},3000)
// 						},4000)

// 					}else if(masterDetails[0].college_stream_type == false){
// 						models.College.find({
// 							where :{
// 								id : masterDetails[0].collegeId
// 							}
// 						}).then(master_collegename=>{
// 							models.Program_List.find({
// 								where :{
// 									degree : 'Masters',
// 									faculty : masterDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Masters_' + masterDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							college.push({
// 								collegeId : masterDetails[0].collegeId
// 							})
// 							educationDetails.masters.push({
// 								faculty : masterDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
// 								college_name: master_collegename.name,
// 								clg_duration :  facultyMaster.year,
// 								form : true
// 							})
// 							models.userMarkList.findAll({
// 								where :{
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 									app_id : null
// 								}
// 							}).then(function(bachelorDetails){
// 								// let clg_duration ;
// 								var differentStream = [];
// 								if(bachelorDetails.length >0){
// 									if(bachelorDetails[0].college_stream_type == true){
// 										let college_List=[];
// 										bachelorDetails.forEach(bachelor=>{
// 											models.College.find({
// 												where :{
// 													id : bachelor.collegeId
// 												}
// 											}).then(collegename=>{
// 												if(bachelor.patteren == "Annual"){
// 													//academic_year = bachelor.name;
// 													college_List.push({
// 														clg_name : collegename.name,
// 														academic_year : bachelor.name
// 													})
// 												}else if(bachelor.patteren == "Semester"){
// 													switch(bachelor.name){
// 														case 'Semester 2' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'First Year'
// 															})
// 															break;
// 														case 'Semester 4' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Second Year'
// 															})
// 															break;
// 														case 'Semester 6' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Third Year'
// 															})
// 															break;
// 														case 'Semester 8' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fourth Year'
// 															})

// 															break;
// 														case 'Semester 10' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fifth Year'
// 															})
// 															break;
// 													}
// 												}
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelor.faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												if(differentStream.length > 0){
// 													var flag = false;
// 													differentStream.forEach(single=>{
// 														if(single.faculty == bachelor.faculty){
// 															flag = true;
// 														}
// 													})
// 													if(flag == false){

// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails,
// 															type : bachelor.type,
// 														})
// 													}
// 												}else{
// 													differentStream.push({
// 														faculty : bachelor.faculty,
// 														instructionalDetails : instructionalDetails,
// 														type : bachelor.type,
// 													})
// 												}
// 											})
// 										})
// 										})
// 										setTimeout(() =>{
// 											var differentCollege = []
// 											differentStream.forEach(bach=>{
// 												models.Program_List.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bach.faculty
// 													}
// 												}).then(function(facultyMaster){
// 													models.userMarkList.findAll({
// 														where:{
// 															user_id : req.User.id,
// 															type : "Bachelors",
// 															faculty : bach.faculty,
// 														}
// 													}).then(function(userMarklist){
// 														if(userMarklist.length > 0){
// 															userMarklist.forEach(user_Marklist=>{
// 																if(user_Marklist.patteren == "Annual"){
// 																	differentCollege.push({
// 																		faculty : user_Marklist.faculty,
// 																		collegeId : user_Marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails,
// 																		// college_List : college_List,
// 																		type : user_Marklist.type,
// 																		clg_duration: facultyMaster.year
// 																	})
// 																}else if(user_Marklist.patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		if(user_Marklist.name == sem){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails,
// 																				// college_List : college_List,
// 																				type : user_Marklist.type,
// 																				clg_duration: facultyMaster.year
// 																			})
// 																		}
// 																	}
// 																}
// 															})
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(()=>{
// 												var bachelors = [];
// 												differentCollege.forEach(coll=>{
// 													var college = [];
// 													var bachFlag = false;
// 													if(bachelors.length > 0){
// 														bachelors.forEach(bach=>{
// 															if(bach.faculty == coll.faculty){
// 																bachFlag = true;
// 																var count = 0;
// 																bach.colleges.forEach(clg=>{
// 																	if(clg.collegeId == coll.collegeId){
// 																		count ++;
// 																	}
// 																})
// 																if(count <= bach.colleges.length){
// 																	bach.colleges.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																}

// 																if(bach.instructionalDetails.length > 0) {
// 																	bach.form = true;
// 																}
// 															}
// 														})

// 														if(bachFlag == false){
// 															college.push({
// 																collegeId : coll.collegeId
// 															})

// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges : college,
// 																instructionalDetails : coll.instructionalDetails,
// 																type: coll.type +' of '+ coll.faculty,
// 																college_List : college_List,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													}else{
// 														college.push({
// 															collegeId : coll.collegeId
// 														})
// 														bachelors.push({
// 															faculty : coll.faculty,
// 															colleges :college,
// 															instructionalDetails : coll.instructionalDetails,
// 															type: coll.type +' of '+ coll.faculty,
// 															college_List : college_List,
// 															clg_duration : coll.clg_duration,
// 														})
// 													}
// 												})
// 												educationDetails.bachelors = bachelors;
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											},5000)
// 										},6000)

// 									}else if(bachelorDetails[0].college_stream_type == false){
// 										models.College.find({
// 											where :{
// 												id : bachelorDetails[0].collegeId
// 											}
// 										}).then(collegename=>{
// 											models.Program_List.find({
// 												where :{
// 													degree : 'Bachelors',
// 													faculty : bachelorDetails[0].faculty
// 												}
// 											}).then(function(facultyMaster){
// 										models.InstructionalDetails.findAll({
// 											where:{
// 												userId : req.User.id,
// 												education : 'Bachelors_' + bachelorDetails[0].faculty
// 											}
// 										}).then(function(instructionalDetails){
// 											var college = [];
// 											college.push({
// 												collegeId : bachelorDetails[0].collegeId
// 											})
// 											educationDetails.bachelors.push({
// 												faculty : bachelorDetails[0].faculty,
// 												colleges : college,
// 												instructionalDetails : instructionalDetails,
// 												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 												college_name: collegename.name,
// 												clg_duration : facultyMaster.year,
// 												form :true
// 											})
// 											res.json({
// 												status : 200,
// 												data : educationDetails
// 											})
// 										})
// 									})
// 								})
// 									}

// 								}else {
// 									console.log('else');
// 									setTimeout(()=>{
// 										res.json({
// 											status : 200,
// 											data : educationDetails
// 										})
// 									},10000)

// 								}
// 								// setTimeout(()=>{
// 								// 	res.json({
// 								// 		status : 200,
// 								// 		data : educationDetails
// 								// 	})
// 								// },10000)
// 							})
// 						})
// 					})
// 					})
// 					}
// 				}


// 			})
// 		}else if(req.query.degreeValue == 'Bachelors'){
// 			let college_List = [];
// 			let academic_year_list =[];
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Bachelors",
// 					// app_id : null
// 				}
// 			}).then(function(bachelorDetails){
// 				var differentStream = [];
// 				if(bachelorDetails.length >0){
// 					if(bachelorDetails[0].college_stream_type == true){
// 						console.log('true');
// 						bachelorDetails.forEach(bachelor=>{
// 							models.College.find({
// 								where :{
// 									id : bachelor.collegeId
// 								}
// 							}).then(collegename=>{
// 								if(bachelor.patteren == "Annual"){
// 									//academic_year = bachelor.name;
// 									college_List.push({
// 										clg_name : collegename.name,
// 										academic_year : bachelor.name
// 									})
// 								}else if(bachelor.patteren == "Semester"){
// 									switch(bachelor.name){
// 										case 'Semester 2' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'First Year'
// 											})
// 											break;
// 										case 'Semester 4' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Second Year'
// 											})
// 											break;
// 										case 'Semester 6' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Third Year'
// 											})
// 											break;
// 										case 'Semester 8' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fourth Year'
// 											})

// 											break;
// 										case 'Semester 10' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fifth Year'
// 											})
// 											break;
// 									}
// 								}

// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Bachelors_' + bachelor.faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == bachelor.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){
// 											differentStream.push({
// 												faculty : bachelor.faculty,
// 												instructionalDetails : instructionalDetails,
// 												type : bachelor.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : bachelor.faculty,
// 											instructionalDetails : instructionalDetails,
// 											type : bachelor.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(bach=>{
// 								console.log("bach==>"+JSON.stringify(bach))
// 								models.Program_List.find({
// 									where :{
// 										degree : 'Bachelors',
// 										faculty : bach.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											faculty : bach.faculty,
// 											// app_id : null
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													// college_List.push({
// 													// 	academic_year : marklist.name
// 													// })
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : bach.instructionalDetails,
// 														type : marklist.type,
// 														// academic_year : marklist.name,
// 														// college_List : Updated_list,
// 														clg_duration: facultyMaster.year
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												console.log('semesterrrrr');
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{

// 														// console.log("userMarklist===>"+JSON.stringify(marklist))
// 														if(marklist.name == sem){
// 															// if(marklist.name == 'Semester 2'){
// 															// 	college_List.push({
// 															// 		academic_year : 'First Year'
// 															// 	})
// 															// }
// 															// if(marklist.name == 'Semester 4'){
// 															// 	college_List.push({
// 															// 		academic_year : 'Second Year'
// 															// 	})
// 															// }
// 															// if(marklist.name == 'Semester 6'){
// 															// 	college_List.push({
// 															// 		academic_year : 'Third Year'
// 															// 	})
// 															// }
// 															// if(marklist.name == 'Semester 8'){
// 															// 	college_List.push({
// 															// 		academic_year : 'Fourth Year'
// 															// 	})
// 															// }
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails,
// 																type : marklist.type,
// 																// college_List : Updated_list,
// 																clg_duration: facultyMaster.year
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								console.log('settimeout');
// 								/** Updating college list **/
// 							// jsonObject = college_List.map(JSON.stringify);
// 							// console.log("Data===>"+jsonObject);
// 							// uniqueSet = new Set(jsonObject);
// 							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
// 							/** Updating college list **/
// 								console.log("college_List===>"+JSON.stringify(college_List))
// 								var bachelors = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									var bachFlag = false;
// 									if(bachelors.length > 0){
// 										bachelors.forEach(bach=>{
// 											if(bach.faculty == coll.faculty){
// 												bachFlag = true;
// 												var count = 0;
// 												bach.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= bach.colleges.length){
// 													bach.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(bach.instructionalDetails.length > 0) {
// 													bach.form = true;
// 												}
// 											}
// 										})

// 										if(bachFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											bachelors.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration,
// 												// academic_year : academic_year_list
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										bachelors.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration,
// 											// academic_year : academic_year_list
// 										})
// 									}
// 								})
// 								educationDetails.bachelors = bachelors;
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},3000)
// 						},4000)

// 					}else if(bachelorDetails[0].college_stream_type == false){
// 						console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
// 						models.College.find({
// 							where :{
// 								id : bachelorDetails[0].collegeId
// 							}
// 						}).then(collegename=>{
// 							models.Program_List.find({
// 								where :{
// 									degree : 'Bachelors',
// 									faculty : bachelorDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 								console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Bachelors_' + bachelorDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							var form;
// 							// if(instructionalDetails.length > 0){
// 							// 	form = true;
// 							// }else{
// 							// 	form = false;
// 							// }
// 							college.push({
// 								collegeId : bachelorDetails[0].collegeId
// 							})
// 							educationDetails.bachelors.push({
// 								faculty : bachelorDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 								college_name: collegename.name,
// 								clg_duration : facultyMaster.year,
// 								form : true
// 							})
// 							res.json({
// 								status : 200,
// 								data : educationDetails
// 							})
// 						})
// 						})
// 					})
// 					}
// 				}
// 			})
// 		}
// 	}
// })

router.get('/getInstructionalDetails',middlewares.getUserInfo,(req,res)=>{
	console.log('/getInstructionalDetails');
	var app_id = req.query.app_id
	var educationDetails = {
		bachelors : [],
		masters : [],
		phd :[]
	};
	if(req.query.editFlag == 'true'){
		if(req.query.degreeValue == 'Masters,Bachelors'){
			console.log("sssssss");
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",
					app_id : app_id,source : 'guattestation'
				}
			}).then(function(masterDetails){
				let masters_duration;
				var differentStream = [];
				if(masterDetails.length >0){
					if(masterDetails[0].college_stream_type == true){
						let college_List=[]
						let academic_year_master =[]
						masterDetails.forEach(master=>{
								models.College.find({
									where :{
										id : master.collegeId
									}
								}).then(collegename=>{

									if(master.patteren == "Annual"){
										college_List.push({
											clg_name : collegename.name,
											academic_year : master.name
										})
									}else if(master.patteren == "Semester"){
										switch(master.name){
											case 'Semester 2' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'First Year'
												})
												break;
											case 'Semester 4' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Second Year'
												})
												break;
											case 'Semester 6' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Third Year'
												})
												break;
											case 'Semester 8' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fourth Year'
												})

												break;
											case 'Semester 10' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fifth Year'
												})
												break;
										}
									}
								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Masters_' + master.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == master.faculty){
												flag = true;
											}
										})
										if(flag == false){

											differentStream.push({
												faculty : master.faculty,
												instructionalDetails : instructionalDetails,
												type : master.type
											})
										}
									}else{
										differentStream.push({
											faculty : master.faculty,
											instructionalDetails : instructionalDetails,
											type : master.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
							var differentCollege = []
							differentStream.forEach(mast=>{
								console.log("mast==>"+JSON.stringify(mast))
								models.Program_List.find({
									where :{
										// degree : 'Masters',
										course_name : mast.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : mast.faculty,
											app_id : null,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// academic_year_master.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : mast.instructionalDetails,
														type : marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.duration,
														college_name: marklist.name
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	academic_year_master.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	academic_year_master.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : mast.instructionalDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.duration,
																// college_name: collegename.name,
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								var masters = [];
								differentCollege.forEach(coll=>{
									console.log("coll==."+JSON.stringify(coll))
									models.College.find({
										where :{
											id : coll.collegeId
										}
									}).then(collegename=>{

									var mastFlag = false
									var college = [];
									if(masters.length > 0){
										masters.forEach(mast=>{
											if(mast.faculty == coll.faculty){
												mastFlag = true;
												var count = 0;
												mast.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= mast.colleges.length){
													mast.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(mast.instructionalDetails.length >= 0) {
													mast.form = true;
												}
											}
										})

										if(mastFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												college_name: collegename.name,
												form : true
												// academic_year : academic_year_master
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											college_name: collegename.name,
											form : true
											// academic_year : academic_year_master
										})
									}
								})
							})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where :{
										user_id : req.User.id,
										type : "Bachelors",
										app_id : null,source : 'guattestation'
									}
								}).then(function(bachelorDetails){
									let clg_duration;
									var differentStream = [];
									// let academic_year_list =[];
									if(bachelorDetails.length >0){
										if(bachelorDetails[0].college_stream_type == true){
											let college_List =[];
											bachelorDetails.forEach(bachelor=>{
												models.College.find({
													where :{
														id : bachelor.collegeId
													}
												}).then(collegename=>{
													if(bachelor.patteren == "Annual"){
														//academic_year = bachelor.name;
														college_List.push({
															clg_name : collegename.name,
															academic_year : bachelor.name
														})
													}else if(bachelor.patteren == "Semester"){
														switch(bachelor.name){
															case 'Semester 2' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'First Year'
																})
																break;
															case 'Semester 4' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Second Year'
																})
																break;
															case 'Semester 6' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Third Year'
																})
																break;
															case 'Semester 8' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fourth Year'
																})

																break;
															case 'Semester 10' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fifth Year'
																})
																break;
														}
													}
												models.InstructionalDetails.findAll({
													where:{
														userId : req.User.id,
														education : 'Bachelors_' + bachelor.faculty,
														app_id :{
															[Op.eq] : null
														}
													}
												}).then(function(instructionalDetails){
													if(differentStream.length > 0){
														var flag = false;
														differentStream.forEach(single=>{
															if(single.faculty == bachelor.faculty){
																flag = true;
															}
														})
														if(flag == false){

															differentStream.push({
																faculty : bachelor.faculty,
																instructionalDetails : instructionalDetails,
																type : bachelor.type,
															})
														}
													}else{
														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												})
											})
											})
											setTimeout(() =>{
												/** Updating college list **/
												// jsonObject = college_List.map(JSON.stringify);
												// console.log("Data===>"+jsonObject);
												// uniqueSet = new Set(jsonObject);
												// Updated_list = Array.from(uniqueSet).map(JSON.parse);
												/** Updating college list **/
												var differentCollege = []
												differentStream.forEach(bach=>{
													models.Program_List.find({
														where :{
															// degree : 'Bachelors',
															course_name : bach.faculty
														}
													}).then(function(facultyMaster){
														models.userMarkList.findAll({
															where:{
																user_id : req.User.id,
																type : "Bachelors",
																faculty : bach.faculty,
																app_id : null,source : 'guattestation'
															}
														}).then(function(userMarklist){
															if(userMarklist.length > 0){
																if(userMarklist[0].patteren == "Annual"){
																	userMarklist.forEach(marklist=>{
																		// academic_year_list.push({
																		// 	academic_year : marklist.name
																		// })
																		differentCollege.push({
																			faculty : marklist.faculty,
																			collegeId : marklist.collegeId,
																			instructionalDetails : bach.instructionalDetails,
																			type : marklist.type,
																			// college_List : college_List.push,
																			clg_duration: facultyMaster.duration
																		})
																	})
																}else if(userMarklist[0].patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist=>{
																			if(marklist.name == sem){
																				// if(marklist.name == 'Semester 2'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'First Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 4'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Second Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 6'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Third Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 8'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Fourth Year'
																				// 	})
																				// }
																				differentCollege.push({
																					faculty : marklist.faculty,
																					collegeId : marklist.collegeId,
																					instructionalDetails : bach.instructionalDetails,
																					type : marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.duration,
																					form : true
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(()=>{
													var bachelors = [];
													differentCollege.forEach(coll=>{
														var college = [];
														var bachFlag = false;
														if(bachelors.length > 0){
															bachelors.forEach(bach=>{
																if(bach.faculty == coll.faculty){
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg=>{
																		if(clg.collegeId == coll.collegeId){
																			count ++;
																		}
																	})
																	if(count <= bach.colleges.length){
																		bach.colleges.push({
																			collegeId : coll.collegeId
																		})
																	}

																	if(bach.instructionalDetails.length >= 0) {
																		bach.form = true;
																	}
																}
															})

															if(bachFlag == false){
																college.push({
																	collegeId : coll.collegeId
																})

																bachelors.push({
																	faculty : coll.faculty,
																	colleges : college,
																	instructionalDetails : coll.instructionalDetails,
																	college_List : college_List,
																	type: coll.type +' of '+ coll.faculty,
																	clg_duration : coll.clg_duration,
																	form : true
																	// academic_year : academic_year_list
																})
															}
														}else{
															college.push({
																collegeId : coll.collegeId
															})
															bachelors.push({
																faculty : coll.faculty,
																colleges :college,
																instructionalDetails : coll.instructionalDetails,
																college_List : college_List,
																type: coll.type +' of '+ coll.faculty,
																clg_duration : coll.clg_duration,
																// academic_year : academic_year_list
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status : 200,
														data : educationDetails
													})
												},3000)
											},4000)

										}else if(bachelorDetails[0].college_stream_type == false){
											models.College.find({
												where :{
													id : bachelorDetails[0].collegeId
												}
											}).then(collegename=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bachelorDetails[0].faculty
													}
												}).then(function(facultyMaster){
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelorDetails[0].faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												var college = [];
												college.push({
													collegeId : bachelorDetails[0].collegeId
												})
												educationDetails.bachelors.push({
													faculty : bachelorDetails[0].faculty,
													name : bachelorDetails[0].faculty,
													colleges : college,
													instructionalDetails : instructionalDetails,
													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
													college_name: collegename.name,
													clg_duration : facultyMaster.duration,
													form : true
												})
												res.json({
													status : 200,
													data : educationDetails
												})
											})
										})
									})
										}
									}
								})
							},3000)
						},4000)

					}else if(masterDetails[0].college_stream_type == false){
						models.College.find({
							where :{
								id : masterDetails[0].collegeId
							}
						}).then(master_collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Masters',
									course_name : masterDetails[0].faculty
								}
							}).then(function(facultyMaster){
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Masters_' + masterDetails[0].course_faculty,
								app_id : app_id
							}
						}).then(function(instructionalDetails){
							var college = [];
							college.push({
								collegeId : masterDetails[0].collegeId
							})
							educationDetails.masters.push({
								faculty : masterDetails[0].faculty,
								name : masterDetails[0].faculty,
								faculty_cource : facultyMaster.faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
								new_course_faculty:facultyMaster.new_course_faculty,
								college_name: master_collegename.name,
								clg_duration :  facultyMaster.duration,
								form : true
							})
							models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : "Bachelors",
									app_id : null,source : 'guattestation'
								}
							}).then(function(bachelorDetails){
								// let clg_duration ;
								var differentStream = [];
								if(bachelorDetails.length >0){
									if(bachelorDetails[0].college_stream_type == true){
										let college_List=[];
										bachelorDetails.forEach(bachelor=>{
											models.College.find({
												where :{
													id : bachelor.collegeId
												}
											}).then(collegename=>{
												if(bachelor.patteren == "Annual"){
													//academic_year = bachelor.name;
													college_List.push({
														clg_name : collegename.name,
														academic_year : bachelor.name
													})
												}else if(bachelor.patteren == "Semester"){
													switch(bachelor.name){
														case 'Semester 2' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'First Year'
															})
															break;
														case 'Semester 4' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Second Year'
															})
															break;
														case 'Semester 6' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Third Year'
															})
															break;
														case 'Semester 8' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fourth Year'
															})

															break;
														case 'Semester 10' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fifth Year'
															})
															break;
													}
												}
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelor.faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												if(differentStream.length > 0){
													var flag = false;
													differentStream.forEach(single=>{
														if(single.faculty == bachelor.faculty){
															flag = true;
														}
													})
													if(flag == false){

														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												}else{
													differentStream.push({
														faculty : bachelor.faculty,
														instructionalDetails : instructionalDetails,
														type : bachelor.type,
													})
												}
											})
										})
										})
										setTimeout(() =>{
											var differentCollege = []
											differentStream.forEach(bach=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bach.faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.findAll({
														where:{
															user_id : req.User.id,
															type : "Bachelors",
															faculty : bach.faculty
															,source : 'guattestation'
														}
													}).then(function(userMarklist){
														if(userMarklist.length > 0){
															userMarklist.forEach(user_Marklist=>{
																if(user_Marklist.patteren == "Annual"){
																	differentCollege.push({
																		faculty : user_Marklist.faculty,
																		collegeId : user_Marklist.collegeId,
																		instructionalDetails : bach.instructionalDetails,
																		// college_List : college_List,
																		type : user_Marklist.type,
																		clg_duration: facultyMaster.duration
																	})
																}else if(user_Marklist.patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		if(user_Marklist.name == sem){
																			differentCollege.push({
																				faculty : user_Marklist.faculty,
																				collegeId : user_Marklist.collegeId,
																				instructionalDetails : bach.instructionalDetails,
																				// college_List : college_List,
																				type : user_Marklist.type,
																				clg_duration: facultyMaster.duration
																			})
																		}
																	}
																}
															})
														}
													})
												})
											})
											setTimeout(()=>{
												var bachelors = [];
												differentCollege.forEach(coll=>{
													var college = [];
													var bachFlag = false;
													if(bachelors.length > 0){
														bachelors.forEach(bach=>{
															if(bach.faculty == coll.faculty){
																bachFlag = true;
																var count = 0;
																bach.colleges.forEach(clg=>{
																	if(clg.collegeId == coll.collegeId){
																		count ++;
																	}
																})
																if(count <= bach.colleges.length){
																	bach.colleges.push({
																		collegeId : coll.collegeId
																	})
																}

																if(bach.instructionalDetails.length > 0) {
																	bach.form = true;
																}
															}
														})

														if(bachFlag == false){
															college.push({
																collegeId : coll.collegeId
															})

															bachelors.push({
																faculty : coll.faculty,
																colleges : college,
																instructionalDetails : coll.instructionalDetails,
																type: coll.type +' of '+ coll.faculty,
																college_List : college_List,
																clg_duration : coll.clg_duration,
															})
														}
													}else{
														college.push({
															collegeId : coll.collegeId
														})
														bachelors.push({
															faculty : coll.faculty,
															colleges :college,
															instructionalDetails : coll.instructionalDetails,
															type: coll.type +' of '+ coll.faculty,
															college_List : college_List,
															clg_duration : coll.clg_duration,
														})
													}
												})
												educationDetails.bachelors = bachelors;
												res.json({
													status : 200,
													data : educationDetails
												})
											},5000)
										},6000)

									}else if(bachelorDetails[0].college_stream_type == false){
										models.College.find({
											where :{
												id : bachelorDetails[0].collegeId
											}
										}).then(collegename=>{
											models.Program_List.find({
												where :{
													// degree : 'Bachelors',
													course_name : bachelorDetails[0].faculty
												}
											}).then(function(facultyMaster){
										models.InstructionalDetails.findAll({
											where:{
												userId : req.User.id,
												education : 'Bachelors_' + bachelorDetails[0].course_faculty,
												app_id : app_id
											}
										}).then(function(instructionalDetails){
											var college = [];
											college.push({
												collegeId : bachelorDetails[0].collegeId
											})
											educationDetails.bachelors.push({
												faculty : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												faculty_cource : facultyMaster.faculty,
												colleges : college,
												instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration : facultyMaster.duration,
												new_course_faculty:facultyMaster.new_course_faculty,
												form :true
											})
											res.json({
												status : 200,
												data : educationDetails
											})
										})
									})
								})
									}

								}else {
									console.log('else');
									setTimeout(()=>{
										res.json({
											status : 200,
											data : educationDetails
										})
									},10000)

								}
								// setTimeout(()=>{
								// 	res.json({
								// 		status : 200,
								// 		data : educationDetails
								// 	})
								// },10000)
							})
						})
					})
					})
					}
				}


			})
		}else if(req.query.degreeValue == 'Bachelors'){
			let college_List = [];
			let academic_year_list =[];
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Bachelors",
					app_id : app_id,source : 'guattestation'
				}
			}).then(function(bachelorDetails){
				var differentStream = [];
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						console.log('true');
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}

								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Bachelors_' + bachelor.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											instructionalDetails : instructionalDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								console.log("bach==>"+JSON.stringify(bach))
								models.Program_List.find({
									where :{
										// degree : 'Bachelors',
										course_name : bach.faculty
									}
								}).then(function(facultyMaster){
									console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Bachelors",
											faculty : bach.faculty,source : 'guattestation'
											// app_id : null
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : bach.instructionalDetails,
														type : marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.duration
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												console.log('semesterrrrr');
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{

														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.duration
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								console.log('settimeout');
								/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
								console.log("college_List===>"+JSON.stringify(college_List))
								var bachelors = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(bachelors.length > 0){
										bachelors.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											bachelors.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										bachelors.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.bachelors = bachelors;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
						console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0].faculty))
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Bachelors',
									course_name : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
								console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Bachelors_' + bachelorDetails[0].course_faculty,
								app_id : app_id
							}
						}).then(function(instructionalDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							console.log("facultyMaster",facultyMaster);
							educationDetails.bachelors.push({
								faculty : bachelorDetails[0].faculty,
								name : bachelorDetails[0].faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								clg_duration : facultyMaster.duration,
								new_course_faculty:facultyMaster.new_course_faculty,
								form : true,
								faculty_cource : facultyMaster.faculty
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
						})
					})
					}
				}
			})
		}else if(req.query.degreeValue == 'Masters'){
			let college_List = [];
			let academic_year_list =[];
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",
					app_id : app_id,source : 'guattestation'
				}
			}).then(function(bachelorDetails){
				var differentStream = [];
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						console.log('true');
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}

								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Masters_' + bachelor.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											instructionalDetails : instructionalDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								console.log("bach==>"+JSON.stringify(bach))
								models.Program_List.find({
									where :{
										// degree : 'Masters',
										course_name : bach.faculty
									}
								}).then(function(facultyMaster){
									console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : bach.faculty,source : 'guattestation'
											// app_id : null
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : bach.instructionalDetails,
														type : marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.duration
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												console.log('semesterrrrr');
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{

														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.duration
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								console.log('settimeout');
								/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
								console.log("college_List===>"+JSON.stringify(college_List))
								var masters = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(masters.length > 0){
										masters.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.masters = masters;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
						console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Masters',
									course_name : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
								console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Masters_' + bachelorDetails[0].course_faculty,
								app_id : app_id
							}
						}).then(function(instructionalDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							educationDetails.masters.push({
								faculty : bachelorDetails[0].faculty,
								name : bachelorDetails[0].faculty,
								faculty_cource : facultyMaster.faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								clg_duration : facultyMaster.duration,
								new_course_faculty:facultyMaster.new_course_faculty,	
								form : true
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
						})
					})
					}
				}
			})
		}else if(req.query.degreeValue == 'Phd,Masters,Bachelors'){
			console.log("dddddddd");
			let college_List = [];
			let academic_year_list =[];
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Phd",
					app_id : app_id,source : 'guattestation'
				}
			}).then(function(bachelorDetails){
				var differentStream = [];
				console.log("bachelorDetails[0].college_stream_type",bachelorDetails);
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						console.log('true');
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}

								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Phd_' + bachelor.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									console.log("instructionalDetailsinstructionalDetails",instructionalDetails);
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											instructionalDetails : instructionalDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								console.log("bach==>"+JSON.stringify(bach))
								models.Program_List.find({
									where :{
										// degree : 'Phd',
										course_name : bach.faculty
									}
								}).then(function(facultyMaster){
									console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Phd",
											faculty : bach.faculty,
											source : 'guattestation'
											// app_id : null
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : bach.instructionalDetails,
														type : marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.duration
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												console.log('semesterrrrr');
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{

														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.duration
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								console.log('settimeout');
								/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
								console.log("college_List===>"+JSON.stringify(college_List))
								var phd = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(phd.length > 0){
										phd.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											phd.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										phd.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.phd = phd;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
						console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Phd',
									course_name : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
								console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Phd_' + bachelorDetails[0].course_faculty,
								app_id : app_id
							}
						}).then(function(instructionalDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							educationDetails.phd.push({
								faculty : bachelorDetails[0].faculty,
								name : bachelorDetails[0].faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								clg_duration : facultyMaster.duration,
								form : true,
								faculty_cource : facultyMaster.faculty,
								new_course_faculty:facultyMaster.new_course_faculty,
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
						})
					})
					}
				}
			})
		}else if(req.query.degreeValue == 'Phd'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",
					app_id : app_id,source : 'guattestation'
				}
			}).then(function(masterDetails){
				let masters_duration;
				var differentStream = [];
				if(masterDetails.length >0){
					if(masterDetails[0].college_stream_type == true){
						let college_List=[]
						let academic_year_master =[]
						masterDetails.forEach(master=>{
								models.College.find({
									where :{
										id : master.collegeId
									}
								}).then(collegename=>{

									if(master.patteren == "Annual"){
										college_List.push({
											clg_name : collegename.name,
											academic_year : master.name
										})
									}else if(master.patteren == "Semester"){
										switch(master.name){
											case 'Semester 2' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'First Year'
												})
												break;
											case 'Semester 4' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Second Year'
												})
												break;
											case 'Semester 6' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Third Year'
												})
												break;
											case 'Semester 8' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fourth Year'
												})

												break;
											case 'Semester 10' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fifth Year'
												})
												break;
										}
									}
								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Masters_' + master.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == master.faculty){
												flag = true;
											}
										})
										if(flag == false){

											differentStream.push({
												faculty : master.faculty,
												instructionalDetails : instructionalDetails,
												type : master.type
											})
										}
									}else{
										differentStream.push({
											faculty : master.faculty,
											instructionalDetails : instructionalDetails,
											type : master.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
							var differentCollege = []
							differentStream.forEach(mast=>{
								console.log("mast==>"+JSON.stringify(mast))
								models.Program_List.find({
									where :{
										// degree : 'Masters',
										course_name : mast.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : mast.faculty,
											app_id : null,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// academic_year_master.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : mast.instructionalDetails,
														type : marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.duration,
														college_name: marklist.name
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	academic_year_master.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	academic_year_master.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : mast.instructionalDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.duration,
																// college_name: collegename.name,
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								var masters = [];
								differentCollege.forEach(coll=>{
									console.log("coll==."+JSON.stringify(coll))
									models.College.find({
										where :{
											id : coll.collegeId
										}
									}).then(collegename=>{

									var mastFlag = false
									var college = [];
									if(masters.length > 0){
										masters.forEach(mast=>{
											if(mast.faculty == coll.faculty){
												mastFlag = true;
												var count = 0;
												mast.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= mast.colleges.length){
													mast.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(mast.instructionalDetails.length >= 0) {
													mast.form = true;
												}
											}
										})

										if(mastFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												college_name: collegename.name,
												form : true
												// academic_year : academic_year_master
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											college_name: collegename.name,
											form : true
											// academic_year : academic_year_master
										})
									}
								})
							})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where :{
										user_id : req.User.id,
										type : "Bachelors",
										app_id : null,source : 'guattestation'
									}
								}).then(function(bachelorDetails){
									let clg_duration;
									var differentStream = [];
									// let academic_year_list =[];
									if(bachelorDetails.length >0){
										if(bachelorDetails[0].college_stream_type == true){
											let college_List =[];
											bachelorDetails.forEach(bachelor=>{
												models.College.find({
													where :{
														id : bachelor.collegeId
													}
												}).then(collegename=>{
													if(bachelor.patteren == "Annual"){
														//academic_year = bachelor.name;
														college_List.push({
															clg_name : collegename.name,
															academic_year : bachelor.name
														})
													}else if(bachelor.patteren == "Semester"){
														switch(bachelor.name){
															case 'Semester 2' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'First Year'
																})
																break;
															case 'Semester 4' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Second Year'
																})
																break;
															case 'Semester 6' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Third Year'
																})
																break;
															case 'Semester 8' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fourth Year'
																})

																break;
															case 'Semester 10' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fifth Year'
																})
																break;
														}
													}
												models.InstructionalDetails.findAll({
													where:{
														userId : req.User.id,
														education : 'Bachelors_' + bachelor.faculty,
														app_id :{
															[Op.eq] : null
														}
													}
												}).then(function(instructionalDetails){
													if(differentStream.length > 0){
														var flag = false;
														differentStream.forEach(single=>{
															if(single.faculty == bachelor.faculty){
																flag = true;
															}
														})
														if(flag == false){

															differentStream.push({
																faculty : bachelor.faculty,
																instructionalDetails : instructionalDetails,
																type : bachelor.type,
															})
														}
													}else{
														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												})
											})
											})
											setTimeout(() =>{
												/** Updating college list **/
												// jsonObject = college_List.map(JSON.stringify);
												// console.log("Data===>"+jsonObject);
												// uniqueSet = new Set(jsonObject);
												// Updated_list = Array.from(uniqueSet).map(JSON.parse);
												/** Updating college list **/
												var differentCollege = []
												differentStream.forEach(bach=>{
													models.Program_List.find({
														where :{
															// degree : 'Bachelors',
															course_name : bach.faculty
														}
													}).then(function(facultyMaster){
														models.userMarkList.findAll({
															where:{
																user_id : req.User.id,
																type : "Bachelors",
																faculty : bach.faculty,
																app_id : null,source : 'guattestation'
															}
														}).then(function(userMarklist){
															if(userMarklist.length > 0){
																if(userMarklist[0].patteren == "Annual"){
																	userMarklist.forEach(marklist=>{
																		// academic_year_list.push({
																		// 	academic_year : marklist.name
																		// })
																		differentCollege.push({
																			faculty : marklist.faculty,
																			collegeId : marklist.collegeId,
																			instructionalDetails : bach.instructionalDetails,
																			type : marklist.type,
																			// college_List : college_List.push,
																			clg_duration: facultyMaster.duration
																		})
																	})
																}else if(userMarklist[0].patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist=>{
																			if(marklist.name == sem){
																				// if(marklist.name == 'Semester 2'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'First Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 4'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Second Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 6'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Third Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 8'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Fourth Year'
																				// 	})
																				// }
																				differentCollege.push({
																					faculty : marklist.faculty,
																					collegeId : marklist.collegeId,
																					instructionalDetails : bach.instructionalDetails,
																					type : marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.duration,
																					form : true
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(()=>{
													var bachelors = [];
													differentCollege.forEach(coll=>{
														var college = [];
														var bachFlag = false;
														if(bachelors.length > 0){
															bachelors.forEach(bach=>{
																if(bach.faculty == coll.faculty){
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg=>{
																		if(clg.collegeId == coll.collegeId){
																			count ++;
																		}
																	})
																	if(count <= bach.colleges.length){
																		bach.colleges.push({
																			collegeId : coll.collegeId
																		})
																	}

																	if(bach.instructionalDetails.length >= 0) {
																		bach.form = true;
																	}
																}
															})

															if(bachFlag == false){
																college.push({
																	collegeId : coll.collegeId
																})

																bachelors.push({
																	faculty : coll.faculty,
																	colleges : college,
																	instructionalDetails : coll.instructionalDetails,
																	college_List : college_List,
																	type: coll.type +' of '+ coll.faculty,
																	clg_duration : coll.clg_duration,
																	form : true
																	// academic_year : academic_year_list
																})
															}
														}else{
															college.push({
																collegeId : coll.collegeId
															})
															bachelors.push({
																faculty : coll.faculty,
																colleges :college,
																instructionalDetails : coll.instructionalDetails,
																college_List : college_List,
																type: coll.type +' of '+ coll.faculty,
																clg_duration : coll.clg_duration,
																// academic_year : academic_year_list
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status : 200,
														data : educationDetails
													})
												},3000)
											},4000)

										}else if(bachelorDetails[0].college_stream_type == false){
											models.College.find({
												where :{
													id : bachelorDetails[0].collegeId
												}
											}).then(collegename=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bachelorDetails[0].faculty
													}
												}).then(function(facultyMaster){
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelorDetails[0].faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												var college = [];
												college.push({
													collegeId : bachelorDetails[0].collegeId
												})
												educationDetails.bachelors.push({
													faculty : bachelorDetails[0].faculty,
													name : bachelorDetails[0].faculty,
													colleges : college,
													instructionalDetails : instructionalDetails,
													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
													college_name: collegename.name,
													clg_duration : facultyMaster.duration,
													new_course_faculty:facultyMaster.new_course_faculty,
													form : true
												})
												res.json({
													status : 200,
													data : educationDetails
												})
											})
										})
									})
										}
									}
								})
							},3000)
						},4000)

					}else if(masterDetails[0].college_stream_type == false){
						models.College.find({
							where :{
								id : masterDetails[0].collegeId
							}
						}).then(master_collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Masters',
									course_name : masterDetails[0].faculty
								}
							}).then(function(facultyMaster){
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Masters_' + masterDetails[0].course_faculty,
								app_id : app_id
							}
						}).then(function(instructionalDetails){
							var college = [];
							college.push({
								collegeId : masterDetails[0].collegeId
							})
							educationDetails.masters.push({
								faculty : masterDetails[0].faculty,
								name : masterDetails[0].faculty,
								faculty_cource : facultyMaster.faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
								college_name: master_collegename.name,
								clg_duration :  facultyMaster.duration,
								new_course_faculty:facultyMaster.new_course_faculty,
								form : true
							})
							models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : "Bachelors",
									app_id : app_id,source : 'guattestation'
								}
							}).then(function(bachelorDetails){
								// let clg_duration ;
								var differentStream = [];
								if(bachelorDetails.length >0){
									if(bachelorDetails[0].college_stream_type == true){
										let college_List=[];
										bachelorDetails.forEach(bachelor=>{
											models.College.find({
												where :{
													id : bachelor.collegeId
												}
											}).then(collegename=>{
												if(bachelor.patteren == "Annual"){
													//academic_year = bachelor.name;
													college_List.push({
														clg_name : collegename.name,
														academic_year : bachelor.name
													})
												}else if(bachelor.patteren == "Semester"){
													switch(bachelor.name){
														case 'Semester 2' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'First Year'
															})
															break;
														case 'Semester 4' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Second Year'
															})
															break;
														case 'Semester 6' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Third Year'
															})
															break;
														case 'Semester 8' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fourth Year'
															})

															break;
														case 'Semester 10' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fifth Year'
															})
															break;
													}
												}
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelor.faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												if(differentStream.length > 0){
													var flag = false;
													differentStream.forEach(single=>{
														if(single.faculty == bachelor.faculty){
															flag = true;
														}
													})
													if(flag == false){

														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												}else{
													differentStream.push({
														faculty : bachelor.faculty,
														instructionalDetails : instructionalDetails,
														type : bachelor.type,
													})
												}
											})
										})
										})
										setTimeout(() =>{
											var differentCollege = []
											differentStream.forEach(bach=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bach.faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.findAll({
														where:{
															user_id : req.User.id,
															type : "Bachelors",
															faculty : bach.faculty,source : 'guattestation'
														}
													}).then(function(userMarklist){
														if(userMarklist.length > 0){
															userMarklist.forEach(user_Marklist=>{
																if(user_Marklist.patteren == "Annual"){
																	differentCollege.push({
																		faculty : user_Marklist.faculty,
																		collegeId : user_Marklist.collegeId,
																		instructionalDetails : bach.instructionalDetails,
																		// college_List : college_List,
																		type : user_Marklist.type,
																		clg_duration: facultyMaster.duration
																	})
																}else if(user_Marklist.patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		if(user_Marklist.name == sem){
																			differentCollege.push({
																				faculty : user_Marklist.faculty,
																				collegeId : user_Marklist.collegeId,
																				instructionalDetails : bach.instructionalDetails,
																				// college_List : college_List,
																				type : user_Marklist.type,
																				clg_duration: facultyMaster.duration
																			})
																		}
																	}
																}
															})
														}
													})
												})
											})
											setTimeout(()=>{
												var bachelors = [];
												differentCollege.forEach(coll=>{
													var college = [];
													var bachFlag = false;
													if(bachelors.length > 0){
														bachelors.forEach(bach=>{
															if(bach.faculty == coll.faculty){
																bachFlag = true;
																var count = 0;
																bach.colleges.forEach(clg=>{
																	if(clg.collegeId == coll.collegeId){
																		count ++;
																	}
																})
																if(count <= bach.colleges.length){
																	bach.colleges.push({
																		collegeId : coll.collegeId
																	})
																}

																if(bach.instructionalDetails.length > 0) {
																	bach.form = true;
																}
															}
														})

														if(bachFlag == false){
															college.push({
																collegeId : coll.collegeId
															})

															bachelors.push({
																faculty : coll.faculty,
																colleges : college,
																instructionalDetails : coll.instructionalDetails,
																type: coll.type +' of '+ coll.faculty,
																college_List : college_List,
																clg_duration : coll.clg_duration,
															})
														}
													}else{
														college.push({
															collegeId : coll.collegeId
														})
														bachelors.push({
															faculty : coll.faculty,
															colleges :college,
															instructionalDetails : coll.instructionalDetails,
															type: coll.type +' of '+ coll.faculty,
															college_List : college_List,
															clg_duration : coll.clg_duration,
														})
													}
												})
												educationDetails.bachelors = bachelors;
												res.json({
													status : 200,
													data : educationDetails
												})
											},5000)
										},6000)

									}else if(bachelorDetails[0].college_stream_type == false){
										models.College.find({
											where :{
												id : bachelorDetails[0].collegeId
											}
										}).then(collegename=>{
											models.Program_List.find({
												where :{
													// degree : 'Bachelors',
													course_name : bachelorDetails[0].faculty
												}
											}).then(function(facultyMaster){
										models.InstructionalDetails.findAll({
											where:{
												userId : req.User.id,
												education : 'Bachelors_' + bachelorDetails[0].course_faculty,
												app_id : app_id
											}
										}).then(function(instructionalDetails){
											var college = [];
											college.push({
												collegeId : bachelorDetails[0].collegeId
											})

											educationDetails.bachelors.push({
												faculty : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												faculty_cource : facultyMaster.faculty,
												colleges : college,
												instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration : facultyMaster.duration,
												new_course_faculty:facultyMaster.new_course_faculty,
												form :true
											})

											models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : "Phd",
									app_id : app_id,source : 'guattestation'
								}
							}).then(function(bachelorDetails){
								// let clg_duration ;
								var differentStream = [];
								if(bachelorDetails.length >0){
									if(bachelorDetails[0].college_stream_type == true){
										let college_List=[];
										bachelorDetails.forEach(bachelor=>{
											models.College.find({
												where :{
													id : bachelor.collegeId
												}
											}).then(collegename=>{
												if(bachelor.patteren == "Annual"){
													//academic_year = bachelor.name;
													college_List.push({
														clg_name : collegename.name,
														academic_year : bachelor.name
													})
												}else if(bachelor.patteren == "Semester"){
													switch(bachelor.name){
														case 'Semester 2' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'First Year'
															})
															break;
														case 'Semester 4' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Second Year'
															})
															break;
														case 'Semester 6' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Third Year'
															})
															break;
														case 'Semester 8' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fourth Year'
															})

															break;
														case 'Semester 10' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fifth Year'
															})
															break;
													}
												}
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelor.faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												if(differentStream.length > 0){
													var flag = false;
													differentStream.forEach(single=>{
														if(single.faculty == bachelor.faculty){
															flag = true;
														}
													})
													if(flag == false){

														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												}else{
													differentStream.push({
														faculty : bachelor.faculty,
														instructionalDetails : instructionalDetails,
														type : bachelor.type,
													})
												}
											})
										})
										})
										setTimeout(() =>{
											var differentCollege = []
											differentStream.forEach(bach=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bach.faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.findAll({
														where:{
															user_id : req.User.id,
															type : "Bachelors",
															faculty : bach.faculty,source : 'guattestation'
														}
													}).then(function(userMarklist){
														if(userMarklist.length > 0){
															userMarklist.forEach(user_Marklist=>{
																if(user_Marklist.patteren == "Annual"){
																	differentCollege.push({
																		faculty : user_Marklist.faculty,
																		collegeId : user_Marklist.collegeId,
																		instructionalDetails : bach.instructionalDetails,
																		// college_List : college_List,
																		type : user_Marklist.type,
																		clg_duration: facultyMaster.duration
																	})
																}else if(user_Marklist.patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		if(user_Marklist.name == sem){
																			differentCollege.push({
																				faculty : user_Marklist.faculty,
																				collegeId : user_Marklist.collegeId,
																				instructionalDetails : bach.instructionalDetails,
																				// college_List : college_List,
																				type : user_Marklist.type,
																				clg_duration: facultyMaster.duration
																			})
																		}
																	}
																}
															})
														}
													})
												})
											})
											setTimeout(()=>{
												var bachelors = [];
												differentCollege.forEach(coll=>{
													var college = [];
													var bachFlag = false;
													if(bachelors.length > 0){
														bachelors.forEach(bach=>{
															if(bach.faculty == coll.faculty){
																bachFlag = true;
																var count = 0;
																bach.colleges.forEach(clg=>{
																	if(clg.collegeId == coll.collegeId){
																		count ++;
																	}
																})
																if(count <= bach.colleges.length){
																	bach.colleges.push({
																		collegeId : coll.collegeId
																	})
																}

																if(bach.instructionalDetails.length > 0) {
																	bach.form = true;
																}
															}
														})

														if(bachFlag == false){
															college.push({
																collegeId : coll.collegeId
															})

															bachelors.push({
																faculty : coll.faculty,
																colleges : college,
																instructionalDetails : coll.instructionalDetails,
																type: coll.type +' of '+ coll.faculty,
																college_List : college_List,
																clg_duration : coll.clg_duration,
															})
														}
													}else{
														college.push({
															collegeId : coll.collegeId
														})
														bachelors.push({
															faculty : coll.faculty,
															colleges :college,
															instructionalDetails : coll.instructionalDetails,
															type: coll.type +' of '+ coll.faculty,
															college_List : college_List,
															clg_duration : coll.clg_duration,
														})
													}
												})
												educationDetails.bachelors = bachelors;
												res.json({
													status : 200,
													data : educationDetails
												})
											},5000)
										},6000)

									}else if(bachelorDetails[0].college_stream_type == false){
										models.College.find({
											where :{
												id : bachelorDetails[0].collegeId
											}
										}).then(collegename=>{
											models.Program_List.find({
												where :{
													// degree : 'Bachelors',
													course_name : bachelorDetails[0].faculty
												}
											}).then(function(facultyMaster){
										models.InstructionalDetails.findAll({
											where:{
												userId : req.User.id,
												education : 'Phd_' + bachelorDetails[0].course_faculty,
												app_id : app_id
											}
										}).then(function(instructionalDetails){
											var college = [];
											college.push({
												collegeId : bachelorDetails[0].collegeId
											})

											educationDetails.phd.push({
												faculty : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												faculty_cource : facultyMaster.faculty,
												colleges : college,
												instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration : facultyMaster.duration,
												new_course_faculty:facultyMaster.new_course_faculty,
												form :true
											})
											
											res.json({
												status : 200,
												data : educationDetails
											})
										})
									})
								})
									}

								}else {
									console.log('else');
									setTimeout(()=>{
										res.json({
											status : 200,
											data : educationDetails
										})
									},10000)

								}
								// setTimeout(()=>{
								// 	res.json({
								// 		status : 200,
								// 		data : educationDetails
								// 	})
								// },10000)
							})
										})
									})
								})
									}

								}else {
									console.log('else');
									setTimeout(()=>{
										res.json({
											status : 200,
											data : educationDetails
										})
									},10000)

								}
								// setTimeout(()=>{
								// 	res.json({
								// 		status : 200,
								// 		data : educationDetails
								// 	})
								// },10000)
							})
						})
					})
					})
					}
				}


			})
		}
	}else{
		if(req.query.degreeValue == 'Masters,Bachelors'){
			console.log("sssssss");
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",source : 'guattestation'
					// app_id : null
				}
			}).then(function(masterDetails){
				let masters_duration;
				var differentStream = [];
				if(masterDetails.length >0){
					if(masterDetails[0].college_stream_type == true){
						let college_List=[]
						let academic_year_master =[]
						masterDetails.forEach(master=>{
								models.College.find({
									where :{
										id : master.collegeId
									}
								}).then(collegename=>{

									if(master.patteren == "Annual"){
										college_List.push({
											clg_name : collegename.name,
											academic_year : master.name
										})
									}else if(master.patteren == "Semester"){
										switch(master.name){
											case 'Semester 2' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'First Year'
												})
												break;
											case 'Semester 4' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Second Year'
												})
												break;
											case 'Semester 6' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Third Year'
												})
												break;
											case 'Semester 8' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fourth Year'
												})

												break;
											case 'Semester 10' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fifth Year'
												})
												break;
										}
									}
								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Masters_' + master.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == master.faculty){
												flag = true;
											}
										})
										if(flag == false){

											differentStream.push({
												faculty : master.faculty,
												instructionalDetails : instructionalDetails,
												type : master.type
											})
										}
									}else{
										differentStream.push({
											faculty : master.faculty,
											instructionalDetails : instructionalDetails,
											type : master.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
							var differentCollege = []
							differentStream.forEach(mast=>{
								console.log("mast==>"+JSON.stringify(mast))
								models.Program_List.find({
									where :{
										// degree : 'Masters',
										course_name : mast.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : mast.faculty,
											app_id : null,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// academic_year_master.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : mast.instructionalDetails,
														type : marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.duration,
														college_name: marklist.name
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	academic_year_master.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	academic_year_master.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : mast.instructionalDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.duration,
																// college_name: collegename.name,
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								var masters = [];
								differentCollege.forEach(coll=>{
									console.log("coll==."+JSON.stringify(coll))
									models.College.find({
										where :{
											id : coll.collegeId
										}
									}).then(collegename=>{

									var mastFlag = false
									var college = [];
									if(masters.length > 0){
										masters.forEach(mast=>{
											if(mast.faculty == coll.faculty){
												mastFlag = true;
												var count = 0;
												mast.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= mast.colleges.length){
													mast.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(mast.instructionalDetails.length >= 0) {
													mast.form = true;
												}
											}
										})

										if(mastFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												college_name: collegename.name,
												form : true
												// academic_year : academic_year_master
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											college_name: collegename.name,
											form : true
											// academic_year : academic_year_master
										})
									}
								})
							})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where :{
										user_id : req.User.id,
										type : "Bachelors",
										app_id : null,source : 'guattestation'
									}
								}).then(function(bachelorDetails){
									let clg_duration;
									var differentStream = [];
									// let academic_year_list =[];
									if(bachelorDetails.length >0){
										if(bachelorDetails[0].college_stream_type == true){
											let college_List =[];
											bachelorDetails.forEach(bachelor=>{
												models.College.find({
													where :{
														id : bachelor.collegeId
													}
												}).then(collegename=>{
													if(bachelor.patteren == "Annual"){
														//academic_year = bachelor.name;
														college_List.push({
															clg_name : collegename.name,
															academic_year : bachelor.name
														})
													}else if(bachelor.patteren == "Semester"){
														switch(bachelor.name){
															case 'Semester 2' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'First Year'
																})
																break;
															case 'Semester 4' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Second Year'
																})
																break;
															case 'Semester 6' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Third Year'
																})
																break;
															case 'Semester 8' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fourth Year'
																})

																break;
															case 'Semester 10' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fifth Year'
																})
																break;
														}
													}
												models.InstructionalDetails.findAll({
													where:{
														userId : req.User.id,
														education : 'Bachelors_' + bachelor.faculty,
														app_id :{
															[Op.eq] : null
														}
													}
												}).then(function(instructionalDetails){
													if(differentStream.length > 0){
														var flag = false;
														differentStream.forEach(single=>{
															if(single.faculty == bachelor.faculty){
																flag = true;
															}
														})
														if(flag == false){

															differentStream.push({
																faculty : bachelor.faculty,
																instructionalDetails : instructionalDetails,
																type : bachelor.type,
															})
														}
													}else{
														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												})
											})
											})
											setTimeout(() =>{
												/** Updating college list **/
												// jsonObject = college_List.map(JSON.stringify);
												// console.log("Data===>"+jsonObject);
												// uniqueSet = new Set(jsonObject);
												// Updated_list = Array.from(uniqueSet).map(JSON.parse);
												/** Updating college list **/
												var differentCollege = []
												differentStream.forEach(bach=>{
													models.Program_List.find({
														where :{
															// degree : 'Bachelors',
															course_name : bach.faculty
														}
													}).then(function(facultyMaster){
														models.userMarkList.findAll({
															where:{
																user_id : req.User.id,
																type : "Bachelors",
																faculty : bach.faculty,
																app_id : null,source : 'guattestation'
															}
														}).then(function(userMarklist){
															if(userMarklist.length > 0){
																if(userMarklist[0].patteren == "Annual"){
																	userMarklist.forEach(marklist=>{
																		// academic_year_list.push({
																		// 	academic_year : marklist.name
																		// })
																		differentCollege.push({
																			faculty : marklist.faculty,
																			collegeId : marklist.collegeId,
																			instructionalDetails : bach.instructionalDetails,
																			type : marklist.type,
																			// college_List : college_List.push,
																			clg_duration: facultyMaster.duration
																		})
																	})
																}else if(userMarklist[0].patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist=>{
																			if(marklist.name == sem){
																				// if(marklist.name == 'Semester 2'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'First Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 4'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Second Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 6'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Third Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 8'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Fourth Year'
																				// 	})
																				// }
																				differentCollege.push({
																					faculty : marklist.faculty,
																					collegeId : marklist.collegeId,
																					instructionalDetails : bach.instructionalDetails,
																					type : marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.duration,
																					form : true
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(()=>{
													var bachelors = [];
													differentCollege.forEach(coll=>{
														var college = [];
														var bachFlag = false;
														if(bachelors.length > 0){
															bachelors.forEach(bach=>{
																if(bach.faculty == coll.faculty){
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg=>{
																		if(clg.collegeId == coll.collegeId){
																			count ++;
																		}
																	})
																	if(count <= bach.colleges.length){
																		bach.colleges.push({
																			collegeId : coll.collegeId
																		})
																	}

																	if(bach.instructionalDetails.length >= 0) {
																		bach.form = true;
																	}
																}
															})

															if(bachFlag == false){
																college.push({
																	collegeId : coll.collegeId
																})

																bachelors.push({
																	faculty : coll.faculty,
																	colleges : college,
																	instructionalDetails : coll.instructionalDetails,
																	college_List : college_List,
																	type: coll.type +' of '+ coll.faculty,
																	clg_duration : coll.clg_duration,
																	form : true
																	// academic_year : academic_year_list
																})
															}
														}else{
															college.push({
																collegeId : coll.collegeId
															})
															bachelors.push({
																faculty : coll.faculty,
																colleges :college,
																instructionalDetails : coll.instructionalDetails,
																college_List : college_List,
																type: coll.type +' of '+ coll.faculty,
																clg_duration : coll.clg_duration,
																// academic_year : academic_year_list
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status : 200,
														data : educationDetails
													})
												},3000)
											},4000)

										}else if(bachelorDetails[0].college_stream_type == false){
											models.College.find({
												where :{
													id : bachelorDetails[0].collegeId
												}
											}).then(collegename=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bachelorDetails[0].faculty
													}
												}).then(function(facultyMaster){
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelorDetails[0].faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												var college = [];
												college.push({
													collegeId : bachelorDetails[0].collegeId
												})
												educationDetails.bachelors.push({
													faculty : bachelorDetails[0].faculty,
													name : bachelorDetails[0].faculty,
													colleges : college,
													instructionalDetails : instructionalDetails,
													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
													college_name: collegename.name,
													clg_duration : facultyMaster.duration,
													form : true
												})
												res.json({
													status : 200,
													data : educationDetails
												})
											})
										})
									})
										}
									}
								})
							},3000)
						},4000)

					}else if(masterDetails[0].college_stream_type == false){
						models.College.find({
							where :{
								id : masterDetails[0].collegeId
							}
						}).then(master_collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Masters',
									course_name : masterDetails[0].faculty
								}
							}).then(function(facultyMaster){
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Masters_' + masterDetails[0].course_faculty,
								app_id :{
									[Op.eq] : null
								}
							}
						}).then(function(instructionalDetails){
							var college = [];
							college.push({
								collegeId : masterDetails[0].collegeId
							})
							educationDetails.masters.push({
								faculty : masterDetails[0].faculty,
								name : masterDetails[0].faculty,
								faculty_cource : facultyMaster.faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
								college_name: master_collegename.name,
								clg_duration :  facultyMaster.duration,
								new_course_faculty:facultyMaster.new_course_faculty,
								form : true
							})
							models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : "Bachelors",
									app_id : null,source : 'guattestation'
								}
							}).then(function(bachelorDetails){
								// let clg_duration ;
								var differentStream = [];
								if(bachelorDetails.length >0){
									if(bachelorDetails[0].college_stream_type == true){
										let college_List=[];
										bachelorDetails.forEach(bachelor=>{
											models.College.find({
												where :{
													id : bachelor.collegeId
												}
											}).then(collegename=>{
												if(bachelor.patteren == "Annual"){
													//academic_year = bachelor.name;
													college_List.push({
														clg_name : collegename.name,
														academic_year : bachelor.name
													})
												}else if(bachelor.patteren == "Semester"){
													switch(bachelor.name){
														case 'Semester 2' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'First Year'
															})
															break;
														case 'Semester 4' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Second Year'
															})
															break;
														case 'Semester 6' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Third Year'
															})
															break;
														case 'Semester 8' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fourth Year'
															})

															break;
														case 'Semester 10' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fifth Year'
															})
															break;
													}
												}
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelor.faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												if(differentStream.length > 0){
													var flag = false;
													differentStream.forEach(single=>{
														if(single.faculty == bachelor.faculty){
															flag = true;
														}
													})
													if(flag == false){

														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												}else{
													differentStream.push({
														faculty : bachelor.faculty,
														instructionalDetails : instructionalDetails,
														type : bachelor.type,
													})
												}
											})
										})
										})
										setTimeout(() =>{
											var differentCollege = []
											differentStream.forEach(bach=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bach.faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.findAll({
														where:{
															user_id : req.User.id,
															type : "Bachelors",
															faculty : bach.faculty,source : 'guattestation'
														}
													}).then(function(userMarklist){
														if(userMarklist.length > 0){
															userMarklist.forEach(user_Marklist=>{
																if(user_Marklist.patteren == "Annual"){
																	differentCollege.push({
																		faculty : user_Marklist.faculty,
																		collegeId : user_Marklist.collegeId,
																		instructionalDetails : bach.instructionalDetails,
																		// college_List : college_List,
																		type : user_Marklist.type,
																		clg_duration: facultyMaster.duration
																	})
																}else if(user_Marklist.patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		if(user_Marklist.name == sem){
																			differentCollege.push({
																				faculty : user_Marklist.faculty,
																				collegeId : user_Marklist.collegeId,
																				instructionalDetails : bach.instructionalDetails,
																				// college_List : college_List,
																				type : user_Marklist.type,
																				clg_duration: facultyMaster.duration
																			})
																		}
																	}
																}
															})
														}
													})
												})
											})
											setTimeout(()=>{
												var bachelors = [];
												differentCollege.forEach(coll=>{
													var college = [];
													var bachFlag = false;
													if(bachelors.length > 0){
														bachelors.forEach(bach=>{
															if(bach.faculty == coll.faculty){
																bachFlag = true;
																var count = 0;
																bach.colleges.forEach(clg=>{
																	if(clg.collegeId == coll.collegeId){
																		count ++;
																	}
																})
																if(count <= bach.colleges.length){
																	bach.colleges.push({
																		collegeId : coll.collegeId
																	})
																}

																if(bach.instructionalDetails.length > 0) {
																	bach.form = true;
																}
															}
														})

														if(bachFlag == false){
															college.push({
																collegeId : coll.collegeId
															})

															bachelors.push({
																faculty : coll.faculty,
																colleges : college,
																instructionalDetails : coll.instructionalDetails,
																type: coll.type +' of '+ coll.faculty,
																college_List : college_List,
																clg_duration : coll.clg_duration,
																new_course_faculty:facultyMaster.new_course_faculty,
																
															})
														}
													}else{
														college.push({
															collegeId : coll.collegeId
														})
														bachelors.push({
															faculty : coll.faculty,
															colleges :college,
															instructionalDetails : coll.instructionalDetails,
															type: coll.type +' of '+ coll.faculty,
															college_List : college_List,
															clg_duration : coll.clg_duration,
														})
													}
												})
												educationDetails.bachelors = bachelors;
												res.json({
													status : 200,
													data : educationDetails
												})
											},5000)
										},6000)

									}else if(bachelorDetails[0].college_stream_type == false){
										models.College.find({
											where :{
												id : bachelorDetails[0].collegeId
											}
										}).then(collegename=>{
											models.Program_List.find({
												where :{
													// degree : 'Bachelors',
													course_name : bachelorDetails[0].faculty
												}
											}).then(function(facultyMaster){
										models.InstructionalDetails.findAll({
											where:{
												userId : req.User.id,
												education : 'Bachelors_' + bachelorDetails[0].course_faculty,
												app_id :{
													[Op.eq] : null
												}
											}
										}).then(function(instructionalDetails){
											var college = [];
											college.push({
												collegeId : bachelorDetails[0].collegeId
											})
											educationDetails.bachelors.push({
												faculty : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												faculty_cource : facultyMaster.faculty,
												colleges : college,
												instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration : facultyMaster.duration,
												new_course_faculty:facultyMaster.new_course_faculty,
												form :true
											})
											res.json({
												status : 200,
												data : educationDetails
											})
										})
									})
								})
									}

								}else {
									console.log('else');
									setTimeout(()=>{
										res.json({
											status : 200,
											data : educationDetails
										})
									},10000)

								}
								// setTimeout(()=>{
								// 	res.json({
								// 		status : 200,
								// 		data : educationDetails
								// 	})
								// },10000)
							})
						})
					})
					})
					}
				}


			})
		}else if(req.query.degreeValue == 'Bachelors'){
			let college_List = [];
			let academic_year_list =[];
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Bachelors",source : 'guattestation'
					// app_id : null
				}
			}).then(function(bachelorDetails){
				var differentStream = [];
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						console.log('true');
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}

								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Bachelors_' + bachelor.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											instructionalDetails : instructionalDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								console.log("bach==>"+JSON.stringify(bach))
								models.Program_List.find({
									where :{
										// degree : 'Bachelors',
										course_name : bach.faculty
									}
								}).then(function(facultyMaster){
									console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Bachelors",
											faculty : bach.faculty,source : 'guattestation'
											// app_id : null
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : bach.instructionalDetails,
														type : marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.duration
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												console.log('semesterrrrr');
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{

														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.duration
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								console.log('settimeout');
								/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
								console.log("college_List===>"+JSON.stringify(college_List))
								var bachelors = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(bachelors.length > 0){
										bachelors.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											bachelors.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										bachelors.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.bachelors = bachelors;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
						console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0].faculty))
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Bachelors',
									course_name : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
								console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Bachelors_' + bachelorDetails[0].course_faculty,
								app_id :{
									[Op.eq] : null
								}
							}
						}).then(function(instructionalDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							console.log("facultyMaster",facultyMaster);
							educationDetails.bachelors.push({
								faculty : bachelorDetails[0].faculty,
								name : bachelorDetails[0].faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								clg_duration : facultyMaster.duration,
								new_course_faculty:facultyMaster.new_course_faculty,
								form : true,
								faculty_cource : facultyMaster.faculty
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
						})
					})
					}
				}
			})
		}else if(req.query.degreeValue == 'Masters'){
			let college_List = [];
			let academic_year_list =[];
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",source : 'guattestation'
					// app_id : null
				}
			}).then(function(bachelorDetails){
				var differentStream = [];
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						console.log('true');
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}

								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Masters_' + bachelor.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											instructionalDetails : instructionalDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								console.log("bach==>"+JSON.stringify(bach))
								models.Program_List.find({
									where :{
										// degree : 'Masters',
										course_name : bach.faculty
									}
								}).then(function(facultyMaster){
									console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : bach.faculty,source : 'guattestation'
											// app_id : null
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : bach.instructionalDetails,
														type : marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.duration
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												console.log('semesterrrrr');
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{

														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.duration
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								console.log('settimeout');
								/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
								console.log("college_List===>"+JSON.stringify(college_List))
								var masters = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(masters.length > 0){
										masters.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.masters = masters;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
						console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Masters',
									course_name : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
								console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Masters_' + bachelorDetails[0].course_faculty,
								app_id :{
									[Op.eq] : null
								}
							}
						}).then(function(instructionalDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							educationDetails.masters.push({
								faculty : bachelorDetails[0].faculty,
								name : bachelorDetails[0].faculty,
								faculty_cource : facultyMaster.faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								new_course_faculty:facultyMaster.new_course_faculty,
								clg_duration : facultyMaster.duration,	
								form : true
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
						})
					})
					}
				}
			})
		}else if(req.query.degreeValue == 'Phd,Masters,Bachelors'){
			console.log("dddddddd");
			let college_List = [];
			let academic_year_list =[];
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Phd",source : 'guattestation'
					// app_id : null
				}
			}).then(function(bachelorDetails){
				var differentStream = [];
				console.log("bachelorDetails[0].college_stream_type",bachelorDetails);
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						console.log('true');
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}

								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Phd_' + bachelor.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									console.log("instructionalDetailsinstructionalDetails",instructionalDetails);
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											instructionalDetails : instructionalDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								console.log("bach==>"+JSON.stringify(bach))
								models.Program_List.find({
									where :{
										// degree : 'Phd',
										course_name : bach.faculty
									}
								}).then(function(facultyMaster){
									console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Phd",
											faculty : bach.faculty,source : 'guattestation'
											// app_id : null
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : bach.instructionalDetails,
														type : marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.duration
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												console.log('semesterrrrr');
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{

														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.duration
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								console.log('settimeout');
								/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
								console.log("college_List===>"+JSON.stringify(college_List))
								var phd = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(phd.length > 0){
										phd.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											phd.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										phd.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.phd = phd;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
						console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Phd',
									course_name : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
								console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Phd_' + bachelorDetails[0].course_faculty,
								app_id :{
									[Op.eq] : null
								}
							}
						}).then(function(instructionalDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							educationDetails.phd.push({
								faculty : bachelorDetails[0].faculty,
								name : bachelorDetails[0].faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								clg_duration : facultyMaster.duration,
								new_course_faculty:facultyMaster.new_course_faculty,
								form : true,
								faculty_cource : facultyMaster.faculty
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
						})
					})
					}
				}
			})
		}else if(req.query.degreeValue == 'Phvd'){
			let college_List = [];
			let academic_year_list =[];
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Phd",source : 'guattestation'
					// app_id : null
				}
			}).then(function(bachelorDetails){
				var differentStream = [];
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						console.log('true');
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})
		
											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}
		
								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Phd_' + bachelor.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){
											differentStream.push({
												faculty : bachelor.faculty,
												instructionalDetails : instructionalDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											instructionalDetails : instructionalDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								console.log("bach==>"+JSON.stringify(bach))
								models.Program_List.find({
									where :{
										// degree : 'Phd',
										course_name : bach.faculty
									}
								}).then(function(facultyMaster){
									console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Phd",
											faculty : bach.faculty,source : 'guattestation'
											// app_id : null
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : bach.instructionalDetails,
														type : marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.duration
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												console.log('semesterrrrr');
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
		
														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : bach.instructionalDetails,
																type : marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.duration
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								console.log('settimeout');
								/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
								console.log("college_List===>"+JSON.stringify(college_List))
								var phd = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(phd.length > 0){
										phd.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}
		
												if(bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})
		
										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})
		
											phd.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										phd.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.phd = phd;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)
		
					}else if(bachelorDetails[0].college_stream_type == false){
						console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Phd',
									course_name : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
								console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Phd_' + bachelorDetails[0].course_faculty,
								app_id :{
									[Op.eq] : null
								}
							}
						}).then(function(instructionalDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							educationDetails.phd.push({
								faculty : bachelorDetails[0].faculty,
								name : bachelorDetails[0].faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								clg_duration : facultyMaster.duration,
								new_course_faculty:facultyMaster.new_course_faculty,
								form : true,
								faculty_cource : facultyMaster.faculty,
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
						})
					})
					}
				}
			})
		}else if(req.query.degreeValue == 'Phd'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",source : 'guattestation'
					// app_id : null
				}
			}).then(function(masterDetails){
				let masters_duration;
				var differentStream = [];
				if(masterDetails.length >0){
					if(masterDetails[0].college_stream_type == true){
						let college_List=[]
						let academic_year_master =[]
						masterDetails.forEach(master=>{
								models.College.find({
									where :{
										id : master.collegeId
									}
								}).then(collegename=>{

									if(master.patteren == "Annual"){
										college_List.push({
											clg_name : collegename.name,
											academic_year : master.name
										})
									}else if(master.patteren == "Semester"){
										switch(master.name){
											case 'Semester 2' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'First Year'
												})
												break;
											case 'Semester 4' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Second Year'
												})
												break;
											case 'Semester 6' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Third Year'
												})
												break;
											case 'Semester 8' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fourth Year'
												})

												break;
											case 'Semester 10' :
												college_List.push({
													clg_name : collegename.name,
													academic_year : 'Fifth Year'
												})
												break;
										}
									}
								models.InstructionalDetails.findAll({
									where:{
										userId : req.User.id,
										education : 'Masters_' + master.faculty,
										app_id :{
											[Op.eq] : null
										}
									}
								}).then(function(instructionalDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == master.faculty){
												flag = true;
											}
										})
										if(flag == false){

											differentStream.push({
												faculty : master.faculty,
												instructionalDetails : instructionalDetails,
												type : master.type
											})
										}
									}else{
										differentStream.push({
											faculty : master.faculty,
											instructionalDetails : instructionalDetails,
											type : master.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
							var differentCollege = []
							differentStream.forEach(mast=>{
								console.log("mast==>"+JSON.stringify(mast))
								models.Program_List.find({
									where :{
										// degree : 'Masters',
										course_name : mast.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : mast.faculty,
											app_id : null,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													// academic_year_master.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														instructionalDetails : mast.instructionalDetails,
														type : marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.duration,
														college_name: marklist.name
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.duration * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															// if(marklist.name == 'Semester 2'){
															// 	academic_year_master.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	academic_year_master.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																instructionalDetails : mast.instructionalDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.duration,
																// college_name: collegename.name,
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								var masters = [];
								differentCollege.forEach(coll=>{
									console.log("coll==."+JSON.stringify(coll))
									models.College.find({
										where :{
											id : coll.collegeId
										}
									}).then(collegename=>{

									var mastFlag = false
									var college = [];
									if(masters.length > 0){
										masters.forEach(mast=>{
											if(mast.faculty == coll.faculty){
												mastFlag = true;
												var count = 0;
												mast.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= mast.colleges.length){
													mast.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(mast.instructionalDetails.length >= 0) {
													mast.form = true;
												}
											}
										})

										if(mastFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												instructionalDetails : coll.instructionalDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												college_name: collegename.name,
												form : true
												// academic_year : academic_year_master
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											instructionalDetails : coll.instructionalDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											college_name: collegename.name,
											form : true
											// academic_year : academic_year_master
										})
									}
								})
							})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where :{
										user_id : req.User.id,
										type : "Bachelors",
										app_id : null,source : 'guattestation'
									}
								}).then(function(bachelorDetails){
									let clg_duration;
									var differentStream = [];
									// let academic_year_list =[];
									if(bachelorDetails.length >0){
										if(bachelorDetails[0].college_stream_type == true){
											let college_List =[];
											bachelorDetails.forEach(bachelor=>{
												models.College.find({
													where :{
														id : bachelor.collegeId
													}
												}).then(collegename=>{
													if(bachelor.patteren == "Annual"){
														//academic_year = bachelor.name;
														college_List.push({
															clg_name : collegename.name,
															academic_year : bachelor.name
														})
													}else if(bachelor.patteren == "Semester"){
														switch(bachelor.name){
															case 'Semester 2' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'First Year'
																})
																break;
															case 'Semester 4' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Second Year'
																})
																break;
															case 'Semester 6' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Third Year'
																})
																break;
															case 'Semester 8' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fourth Year'
																})

																break;
															case 'Semester 10' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fifth Year'
																})
																break;
														}
													}
												models.InstructionalDetails.findAll({
													where:{
														userId : req.User.id,
														education : 'Bachelors_' + bachelor.faculty,
														app_id :{
															[Op.eq] : null
														}
													}
												}).then(function(instructionalDetails){
													if(differentStream.length > 0){
														var flag = false;
														differentStream.forEach(single=>{
															if(single.faculty == bachelor.faculty){
																flag = true;
															}
														})
														if(flag == false){

															differentStream.push({
																faculty : bachelor.faculty,
																instructionalDetails : instructionalDetails,
																type : bachelor.type,
															})
														}
													}else{
														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												})
											})
											})
											setTimeout(() =>{
												/** Updating college list **/
												// jsonObject = college_List.map(JSON.stringify);
												// console.log("Data===>"+jsonObject);
												// uniqueSet = new Set(jsonObject);
												// Updated_list = Array.from(uniqueSet).map(JSON.parse);
												/** Updating college list **/
												var differentCollege = []
												differentStream.forEach(bach=>{
													models.Program_List.find({
														where :{
															// degree : 'Bachelors',
															course_name : bach.faculty
														}
													}).then(function(facultyMaster){
														models.userMarkList.findAll({
															where:{
																user_id : req.User.id,
																type : "Bachelors",
																faculty : bach.faculty,
																app_id : null,source : 'guattestation'
															}
														}).then(function(userMarklist){
															if(userMarklist.length > 0){
																if(userMarklist[0].patteren == "Annual"){
																	userMarklist.forEach(marklist=>{
																		// academic_year_list.push({
																		// 	academic_year : marklist.name
																		// })
																		differentCollege.push({
																			faculty : marklist.faculty,
																			collegeId : marklist.collegeId,
																			instructionalDetails : bach.instructionalDetails,
																			type : marklist.type,
																			// college_List : college_List.push,
																			clg_duration: facultyMaster.duration
																		})
																	})
																}else if(userMarklist[0].patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist=>{
																			if(marklist.name == sem){
																				// if(marklist.name == 'Semester 2'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'First Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 4'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Second Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 6'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Third Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 8'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Fourth Year'
																				// 	})
																				// }
																				differentCollege.push({
																					faculty : marklist.faculty,
																					collegeId : marklist.collegeId,
																					instructionalDetails : bach.instructionalDetails,
																					type : marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.duration,
																					form : true
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(()=>{
													var bachelors = [];
													differentCollege.forEach(coll=>{
														var college = [];
														var bachFlag = false;
														if(bachelors.length > 0){
															bachelors.forEach(bach=>{
																if(bach.faculty == coll.faculty){
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg=>{
																		if(clg.collegeId == coll.collegeId){
																			count ++;
																		}
																	})
																	if(count <= bach.colleges.length){
																		bach.colleges.push({
																			collegeId : coll.collegeId
																		})
																	}

																	if(bach.instructionalDetails.length >= 0) {
																		bach.form = true;
																	}
																}
															})

															if(bachFlag == false){
																college.push({
																	collegeId : coll.collegeId
																})

																bachelors.push({
																	faculty : coll.faculty,
																	colleges : college,
																	instructionalDetails : coll.instructionalDetails,
																	college_List : college_List,
																	type: coll.type +' of '+ coll.faculty,
																	clg_duration : coll.clg_duration,
																	form : true
																	// academic_year : academic_year_list
																})
															}
														}else{
															college.push({
																collegeId : coll.collegeId
															})
															bachelors.push({
																faculty : coll.faculty,
																colleges :college,
																instructionalDetails : coll.instructionalDetails,
																college_List : college_List,
																type: coll.type +' of '+ coll.faculty,
																clg_duration : coll.clg_duration,
																// academic_year : academic_year_list
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status : 200,
														data : educationDetails
													})
												},3000)
											},4000)

										}else if(bachelorDetails[0].college_stream_type == false){
											models.College.find({
												where :{
													id : bachelorDetails[0].collegeId
												}
											}).then(collegename=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bachelorDetails[0].faculty
													}
												}).then(function(facultyMaster){
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelorDetails[0].faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												var college = [];
												college.push({
													collegeId : bachelorDetails[0].collegeId
												})
												educationDetails.bachelors.push({
													faculty : bachelorDetails[0].faculty,
													name : bachelorDetails[0].faculty,
													colleges : college,
													instructionalDetails : instructionalDetails,
													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
													college_name: collegename.name,
													clg_duration : facultyMaster.duration,
													form : true
												})
												res.json({
													status : 200,
													data : educationDetails
												})
											})
										})
									})
										}
									}
								})
							},3000)
						},4000)

					}else if(masterDetails[0].college_stream_type == false){
						models.College.find({
							where :{
								id : masterDetails[0].collegeId
							}
						}).then(master_collegename=>{
							models.Program_List.find({
								where :{
									// degree : 'Masters',
									course_name : masterDetails[0].faculty
								}
							}).then(function(facultyMaster){
						models.InstructionalDetails.findAll({
							where:{
								userId : req.User.id,
								education : 'Masters_' + masterDetails[0].course_faculty,
								app_id :{
									[Op.eq] : null
								}
							}
						}).then(function(instructionalDetails){
							var college = [];
							college.push({
								collegeId : masterDetails[0].collegeId
							})
							educationDetails.masters.push({
								faculty : masterDetails[0].faculty,
								name : masterDetails[0].faculty,
								faculty_cource : facultyMaster.faculty,
								colleges : college,
								instructionalDetails : instructionalDetails,
								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
								college_name: master_collegename.name,
								clg_duration :  facultyMaster.duration,
								new_course_faculty:facultyMaster.new_course_faculty,
								form : true
							})
							models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : "Bachelors",
									app_id : null,source : 'guattestation'
								}
							}).then(function(bachelorDetails){
								// let clg_duration ;
								var differentStream = [];
								if(bachelorDetails.length >0){
									if(bachelorDetails[0].college_stream_type == true){
										let college_List=[];
										bachelorDetails.forEach(bachelor=>{
											models.College.find({
												where :{
													id : bachelor.collegeId
												}
											}).then(collegename=>{
												if(bachelor.patteren == "Annual"){
													//academic_year = bachelor.name;
													college_List.push({
														clg_name : collegename.name,
														academic_year : bachelor.name
													})
												}else if(bachelor.patteren == "Semester"){
													switch(bachelor.name){
														case 'Semester 2' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'First Year'
															})
															break;
														case 'Semester 4' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Second Year'
															})
															break;
														case 'Semester 6' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Third Year'
															})
															break;
														case 'Semester 8' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fourth Year'
															})

															break;
														case 'Semester 10' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fifth Year'
															})
															break;
													}
												}
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelor.faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												if(differentStream.length > 0){
													var flag = false;
													differentStream.forEach(single=>{
														if(single.faculty == bachelor.faculty){
															flag = true;
														}
													})
													if(flag == false){

														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												}else{
													differentStream.push({
														faculty : bachelor.faculty,
														instructionalDetails : instructionalDetails,
														type : bachelor.type,
													})
												}
											})
										})
										})
										setTimeout(() =>{
											var differentCollege = []
											differentStream.forEach(bach=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bach.faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.findAll({
														where:{
															user_id : req.User.id,
															type : "Bachelors",
															faculty : bach.faculty,source : 'guattestation'
														}
													}).then(function(userMarklist){
														if(userMarklist.length > 0){
															userMarklist.forEach(user_Marklist=>{
																if(user_Marklist.patteren == "Annual"){
																	differentCollege.push({
																		faculty : user_Marklist.faculty,
																		collegeId : user_Marklist.collegeId,
																		instructionalDetails : bach.instructionalDetails,
																		// college_List : college_List,
																		type : user_Marklist.type,
																		clg_duration: facultyMaster.duration
																	})
																}else if(user_Marklist.patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		if(user_Marklist.name == sem){
																			differentCollege.push({
																				faculty : user_Marklist.faculty,
																				collegeId : user_Marklist.collegeId,
																				instructionalDetails : bach.instructionalDetails,
																				// college_List : college_List,
																				type : user_Marklist.type,
																				clg_duration: facultyMaster.duration
																			})
																		}
																	}
																}
															})
														}
													})
												})
											})
											setTimeout(()=>{
												var bachelors = [];
												differentCollege.forEach(coll=>{
													var college = [];
													var bachFlag = false;
													if(bachelors.length > 0){
														bachelors.forEach(bach=>{
															if(bach.faculty == coll.faculty){
																bachFlag = true;
																var count = 0;
																bach.colleges.forEach(clg=>{
																	if(clg.collegeId == coll.collegeId){
																		count ++;
																	}
																})
																if(count <= bach.colleges.length){
																	bach.colleges.push({
																		collegeId : coll.collegeId
																	})
																}

																if(bach.instructionalDetails.length > 0) {
																	bach.form = true;
																}
															}
														})

														if(bachFlag == false){
															college.push({
																collegeId : coll.collegeId
															})

															bachelors.push({
																faculty : coll.faculty,
																colleges : college,
																instructionalDetails : coll.instructionalDetails,
																type: coll.type +' of '+ coll.faculty,
																college_List : college_List,
																clg_duration : coll.clg_duration,
															})
														}
													}else{
														college.push({
															collegeId : coll.collegeId
														})
														bachelors.push({
															faculty : coll.faculty,
															colleges :college,
															instructionalDetails : coll.instructionalDetails,
															type: coll.type +' of '+ coll.faculty,
															college_List : college_List,
															clg_duration : coll.clg_duration,
														})
													}
												})
												educationDetails.bachelors = bachelors;
												res.json({
													status : 200,
													data : educationDetails
												})
											},5000)
										},6000)

									}else if(bachelorDetails[0].college_stream_type == false){
										models.College.find({
											where :{
												id : bachelorDetails[0].collegeId
											}
										}).then(collegename=>{
											models.Program_List.find({
												where :{
													// degree : 'Bachelors',
													course_name : bachelorDetails[0].faculty
												}
											}).then(function(facultyMaster){
										models.InstructionalDetails.findAll({
											where:{
												userId : req.User.id,
												education : 'Bachelors_' + bachelorDetails[0].course_faculty,
												app_id :{
													[Op.eq] : null
												}
											}
										}).then(function(instructionalDetails){
											var college = [];
											college.push({
												collegeId : bachelorDetails[0].collegeId
											})

											educationDetails.bachelors.push({
												faculty : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												faculty_cource : facultyMaster.faculty,
												colleges : college,
												instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration : facultyMaster.duration,
												new_course_faculty:facultyMaster.new_course_faculty,
												form :true
											})

											models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : "Phd",
									app_id : null,source : 'guattestation'
								}
							}).then(function(bachelorDetails){
								// let clg_duration ;
								var differentStream = [];
								if(bachelorDetails.length >0){
									if(bachelorDetails[0].college_stream_type == true){
										let college_List=[];
										bachelorDetails.forEach(bachelor=>{
											models.College.find({
												where :{
													id : bachelor.collegeId
												}
											}).then(collegename=>{
												if(bachelor.patteren == "Annual"){
													//academic_year = bachelor.name;
													college_List.push({
														clg_name : collegename.name,
														academic_year : bachelor.name
													})
												}else if(bachelor.patteren == "Semester"){
													switch(bachelor.name){
														case 'Semester 2' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'First Year'
															})
															break;
														case 'Semester 4' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Second Year'
															})
															break;
														case 'Semester 6' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Third Year'
															})
															break;
														case 'Semester 8' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fourth Year'
															})

															break;
														case 'Semester 10' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fifth Year'
															})
															break;
													}
												}
											models.InstructionalDetails.findAll({
												where:{
													userId : req.User.id,
													education : 'Bachelors_' + bachelor.faculty,
													app_id :{
														[Op.eq] : null
													}
												}
											}).then(function(instructionalDetails){
												if(differentStream.length > 0){
													var flag = false;
													differentStream.forEach(single=>{
														if(single.faculty == bachelor.faculty){
															flag = true;
														}
													})
													if(flag == false){

														differentStream.push({
															faculty : bachelor.faculty,
															instructionalDetails : instructionalDetails,
															type : bachelor.type,
														})
													}
												}else{
													differentStream.push({
														faculty : bachelor.faculty,
														instructionalDetails : instructionalDetails,
														type : bachelor.type,
													})
												}
											})
										})
										})
										setTimeout(() =>{
											var differentCollege = []
											differentStream.forEach(bach=>{
												models.Program_List.find({
													where :{
														// degree : 'Bachelors',
														course_name : bach.faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.findAll({
														where:{
															user_id : req.User.id,
															type : "Bachelors",
															faculty : bach.faculty,source : 'guattestation'
														}
													}).then(function(userMarklist){
														if(userMarklist.length > 0){
															userMarklist.forEach(user_Marklist=>{
																if(user_Marklist.patteren == "Annual"){
																	differentCollege.push({
																		faculty : user_Marklist.faculty,
																		collegeId : user_Marklist.collegeId,
																		instructionalDetails : bach.instructionalDetails,
																		// college_List : college_List,
																		type : user_Marklist.type,
																		clg_duration: facultyMaster.duration
																	})
																}else if(user_Marklist.patteren == "Semester"){
																	var semesters = facultyMaster.duration * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		if(user_Marklist.name == sem){
																			differentCollege.push({
																				faculty : user_Marklist.faculty,
																				collegeId : user_Marklist.collegeId,
																				instructionalDetails : bach.instructionalDetails,
																				// college_List : college_List,
																				type : user_Marklist.type,
																				clg_duration: facultyMaster.duration
																			})
																		}
																	}
																}
															})
														}
													})
												})
											})
											setTimeout(()=>{
												var bachelors = [];
												differentCollege.forEach(coll=>{
													var college = [];
													var bachFlag = false;
													if(bachelors.length > 0){
														bachelors.forEach(bach=>{
															if(bach.faculty == coll.faculty){
																bachFlag = true;
																var count = 0;
																bach.colleges.forEach(clg=>{
																	if(clg.collegeId == coll.collegeId){
																		count ++;
																	}
																})
																if(count <= bach.colleges.length){
																	bach.colleges.push({
																		collegeId : coll.collegeId
																	})
																}

																if(bach.instructionalDetails.length > 0) {
																	bach.form = true;
																}
															}
														})

														if(bachFlag == false){
															college.push({
																collegeId : coll.collegeId
															})

															bachelors.push({
																faculty : coll.faculty,
																colleges : college,
																instructionalDetails : coll.instructionalDetails,
																type: coll.type +' of '+ coll.faculty,
																college_List : college_List,
																clg_duration : coll.clg_duration,
															})
														}
													}else{
														college.push({
															collegeId : coll.collegeId
														})
														bachelors.push({
															faculty : coll.faculty,
															colleges :college,
															instructionalDetails : coll.instructionalDetails,
															type: coll.type +' of '+ coll.faculty,
															college_List : college_List,
															clg_duration : coll.clg_duration,
														})
													}
												})
												educationDetails.bachelors = bachelors;
												res.json({
													status : 200,
													data : educationDetails
												})
											},5000)
										},6000)

									}else if(bachelorDetails[0].college_stream_type == false){
										models.College.find({
											where :{
												id : bachelorDetails[0].collegeId
											}
										}).then(collegename=>{
											models.Program_List.find({
												where :{
													// degree : 'Bachelors',
													course_name : bachelorDetails[0].faculty
												}
											}).then(function(facultyMaster){
										models.InstructionalDetails.findAll({
											where:{
												userId : req.User.id,
												education : 'Phd_' + bachelorDetails[0].course_faculty,
												app_id :{
													[Op.eq] : null
												}
											}
										}).then(function(instructionalDetails){
											var college = [];
											college.push({
												collegeId : bachelorDetails[0].collegeId
											})

											educationDetails.phd.push({
												faculty : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												name : bachelorDetails[0].faculty,
												faculty_cource : facultyMaster.faculty,
												colleges : college,
												instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration : facultyMaster.duration,
												new_course_faculty:facultyMaster.new_course_faculty,
												form :true
											})
											
											res.json({
												status : 200,
												data : educationDetails
											})
										})
									})
								})
									}

								}else {
									console.log('else');
									setTimeout(()=>{
										res.json({
											status : 200,
											data : educationDetails
										})
									},10000)

								}
								// setTimeout(()=>{
								// 	res.json({
								// 		status : 200,
								// 		data : educationDetails
								// 	})
								// },10000)
							})
										})
									})
								})
									}

								}else {
									console.log('else');
									setTimeout(()=>{
										res.json({
											status : 200,
											data : educationDetails
										})
									},10000)

								}
								// setTimeout(()=>{
								// 	res.json({
								// 		status : 200,
								// 		data : educationDetails
								// 	})
								// },10000)
							})
						})
					})
					})
					}
				}


			})
		}
	}
})

router.get('/downloadFiles_demo',function (req, res) {
    var location= req.query.formPath;
      const downloadData = location;
        res.download(downloadData);
});

router.get('/getAffiliationLetterDetails',middlewares.getUserInfo,(req,res)=>{
	console.log('/getAffiliationLetterDetails');
	var educationDetails = {
		bachelors : [],
		masters : [],
		phd : []
	};
	if(req.query.editFlag == 'true'){
		if(req.query.degreeValue == 'Masters,Bachelors'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",source : 'guattestation'
				}
			}).then(function(master_Details){
				let masters_duration;
				var masterDetails = [];
				if(master_Details.length > 0){
					master_Details.forEach(detail=>{
						if(detail.app_id != null){
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id =>{
								if(app_id == req.query.app_id){
									masterDetails.push(detail);
								}
							})
						}
					})
				}
				var differentStream = [];
				if(masterDetails.length >0){
					if(masterDetails[0].college_stream_type == true){
						let college_List=[]
						masterDetails.forEach(master=>{
							models.College.find({
								where :{
									id : master.collegeId
								}
							}).then(collegename=>{
								if(master.patteren == "Annual"){
									college_List.push({
										clg_name : collegename.name,
										academic_year : master.name
									})
								}else if(master.patteren == "Semester"){
									switch(master.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where:{
										user_id : req.User.id,
										education : 'Masters_' + master.faculty
									}
								}).then(function(affiliationDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == master.faculty){
												flag = true;
											}
										})
										if(flag == false){

											differentStream.push({
												faculty : master.faculty,
												affiliationDetails : affiliationDetails,
												type : master.type
											})
										}
									}else{
										differentStream.push({
											faculty : master.faculty,
											affiliationDetails : affiliationDetails,
											type : master.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(mast=>{
								models.Program_List.find({
									where :{
										degree : 'Master',
										faculty : mast.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : mast.faculty,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														affiliationDetails : mast.affiliationDetails,
														type : marklist.type,
														college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.year * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																affiliationDetails : mast.affiliationDetails,
																type : marklist.type,
																college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								var masters = [];
								var mastFlag=false
								differentCollege.forEach(coll=>{
									var college = [];
									if(masters.length > 0){
										masters.forEach(mast=>{
											if(mast.faculty == coll.faculty){
												mastFlag = true;
												var count = 0;
												mast.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= mast.colleges.length){
													mast.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(mast.affiliationDetails.length > 0) {
													mast.form = true;
												}
											}
										})

										if(mastFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												affiliationDetails : coll.affiliationDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											affiliationDetails : coll.affiliationDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration
										})
									}
								})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where :{
										user_id : req.User.id,
										type : "Bachelors",source : 'guattestation'
									}
								}).then(function(bachelorDetails){
									var differentStream = [];
									// let clg_duration = 3;
									if(bachelorDetails.length >0){
										if(bachelorDetails[0].college_stream_type == true){
											let college_List =[];
											bachelorDetails.forEach(bachelor=>{
												models.College.find({
													where :{
														id : bachelor.collegeId
													}
												}).then(collegename=>{
													if(bachelor.patteren == "Annual"){
														//academic_year = bachelor.name;
														college_List.push({
															clg_name : collegename.name,
															academic_year : bachelor.name
														})
													}else if(bachelor.patteren == "Semester"){
														switch(bachelor.name){
															case 'Semester 2' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'First Year'
																})
																break;
															case 'Semester 4' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Second Year'
																})
																break;
															case 'Semester 6' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Third Year'
																})
																break;
															case 'Semester 8' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fourth Year'
																})

																break;
															case 'Semester 10' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fifth Year'
																})
																break;
														}
													}
													models.Affiliation_Letter.findAll({
														where:{
															user_id : req.User.id,
															education : 'Bachelors_' + bachelor.faculty
														}
													}).then(function(affiliationDetails){
														if(differentStream.length > 0){
															var flag = false;
															differentStream.forEach(single=>{
																if(single.faculty == bachelor.faculty){
																	flag = true;
																}
															})
															if(flag == false){

																differentStream.push({
																	faculty : bachelor.faculty,
																	affiliationDetails : affiliationDetails,
																	type : bachelor.type,
																})
															}
														}else{
															differentStream.push({
																faculty : bachelor.faculty,
																affiliationDetails : affiliationDetails,
																type : bachelor.type,
															})
														}
													})
												})
											})
											setTimeout(() =>{
												var differentCollege = []
												differentStream.forEach(bach=>{
													models.Program_List.find({
														where :{
															degree : 'Bachelors',
															faculty : bach.faculty
														}
													}).then(function(facultyMaster){
														models.userMarkList.findAll({
															where:{
																user_id : req.User.id,
																type : "Bachelors",
																faculty : bach.faculty,source : 'guattestation'
															}
														}).then(function(userMarklist){
															if(userMarklist.length > 0){
																if(userMarklist[0].patteren == "Annual"){
																	userMarklist.forEach(marklist=>{
																		differentCollege.push({
																			faculty : marklist.faculty,
																			collegeId : marklist.collegeId,
																			affiliationDetails : bach.affiliationDetails,
																			type : marklist.type,
																			// college_List : college_List,
																			clg_duration: facultyMaster.year
																		})
																	})
																}else if(userMarklist[0].patteren == "Semester"){
																	var semesters = facultyMaster.year * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist=>{
																			if(marklist.name == sem){
																				differentCollege.push({
																					faculty : marklist.faculty,
																					collegeId : marklist.collegeId,
																					affiliationDetails : bach.affiliationDetails,
																					type : marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.year
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(()=>{
													var bachelors = [];
													differentCollege.forEach(coll=>{
														var college = [];
														var bachFlag = false;
														if(bachelors.length > 0){
															bachelors.forEach(bach=>{
																if(bach.faculty == coll.faculty){
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg=>{
																		if(clg.collegeId == coll.collegeId){
																			count ++;
																		}
																	})
																	if(count <= bach.colleges.length){
																		bach.colleges.push({
																			collegeId : coll.collegeId
																		})
																	}

																	if(bach.affiliationDetails.length > 0) {
																		bach.form = true;
																	}
																}
															})

															if(bachFlag == false){
																college.push({
																	collegeId : coll.collegeId
																})

																bachelors.push({
																	faculty : coll.faculty,
																	colleges : college,
																	affiliationDetails : coll.affiliationDetails,
																	college_List : college_List,
																	type: coll.type +' of '+ coll.faculty,
																	clg_duration : coll.clg_duration,
																})
															}
														}else{
															college.push({
																collegeId : coll.collegeId
															})
															bachelors.push({
																faculty : coll.faculty,
																colleges :college,
																affiliationDetails : coll.affiliationDetails,
																college_List : college_List,
																type: coll.type +' of '+ coll.faculty,
																clg_duration : coll.clg_duration,
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status : 200,
														data : educationDetails
													})
												},3000)
											},4000)

										}else if(bachelorDetails[0].college_stream_type == false){
											models.College.find({
												where :{
													id : bachelorDetails[0].collegeId
												}
											}).then(collegename=>{
												models.Program_List.find({
													where :{
														degree : 'Bachelors',
														faculty : bachelorDetails[0].faculty
													}
												}).then(function(facultyMaster){
											models.Affiliation_Letter.findAll({
												where:{
													user_id : req.User.id,
													education : 'Bachelors_' + bachelorDetails[0].faculty
												}
											}).then(function(affiliationDetails){
												var college = [];
												college.push({
													collegeId : bachelorDetails[0].collegeId
												})
												educationDetails.bachelors.push({
													faculty : bachelorDetails[0].faculty,
													colleges : college,
													affiliationDetails : affiliationDetails,
													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
													college_name: collegename.name,
													clg_duration : facultyMaster.year,
												})
												res.json({
													status : 200,
													data : educationDetails
												})
											})
										})
										})
										}
									}
								})
							},3000)
						},4000)

					}else if(masterDetails[0].college_stream_type == false){
						models.College.find({
							where :{
								id : masterDetails[0].collegeId
							}
						}).then(master_collegename=>{
							models.Program_List.find({
								where :{
									degree : 'Masters',
									faculty : masterDetails[0].faculty
								}
							}).then(function(facultyMaster){
						models.Affiliation_Letter.findAll({
							where:{
								user_id : req.User.id,
								education : 'Masters_' + masterDetails[0].faculty
							}
						}).then(function(affiliationDetails){
							var college = [];
							college.push({
								collegeId : masterDetails[0].collegeId
							})
							educationDetails.masters.push({
								faculty : masterDetails[0].faculty,
								colleges : college,
								affiliationDetails : affiliationDetails,
								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
								college_name: master_collegename.name,
								clg_duration : facultyMaster.year,
								form : true
							})
							models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : "Bachelors",source : 'guattestation'
								}
							}).then(function(bachelorDetails){
								var differentStream = [];
								let clg_duration ;
								if(bachelorDetails.length >0){
									if(bachelorDetails[0].college_stream_type == true){
										let college_List=[];
										bachelorDetails.forEach(bachelor=>{
											models.College.find({
												where :{
													id : bachelor.collegeId
												}
											}).then(collegename=>{
												if(bachelor.patteren == "Annual"){
													//academic_year = bachelor.name;
													college_List.push({
														clg_name : collegename.name,
														academic_year : bachelor.name
													})
												}else if(bachelor.patteren == "Semester"){
													switch(bachelor.name){
														case 'Semester 2' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'First Year'
															})
															break;
														case 'Semester 4' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Second Year'
															})
															break;
														case 'Semester 6' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Third Year'
															})
															break;
														case 'Semester 8' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fourth Year'
															})

															break;
														case 'Semester 10' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fifth Year'
															})
															break;
													}
												}
												models.Affiliation_Letter.findAll({
													where:{
														user_id : req.User.id,
														education : 'Bachelors_' + bachelor.faculty
													}
												}).then(function(affiliationDetails){
													if(differentStream.length > 0){
														var flag = false;
														differentStream.forEach(single=>{
															if(single.faculty == bachelor.faculty){
																flag = true;
															}
														})
														if(flag == false){

															differentStream.push({
																faculty : bachelor.faculty,
																affiliationDetails : affiliationDetails,
																type : bachelor.type,
															})
														}
													}else{
														differentStream.push({
															faculty : bachelor.faculty,
															affiliationDetails : affiliationDetails,
															type : bachelor.type,
														})
													}
												})
											})
										})
										setTimeout(() =>{
											var differentCollege = []
											differentStream.forEach(bach=>{
												models.Program_List.find({
													where :{
														degree : 'Bachelors',
														faculty : bach.faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.findAll({
														where:{
															user_id : req.User.id,
															type : "Bachelors",
															faculty : bach.faculty,source : 'guattestation'
														}
													}).then(function(userMarklist){
														if(userMarklist.length > 0){
															if(userMarklist[0].patteren == "Annual"){
																userMarklist.forEach(marklist=>{
																	differentCollege.push({
																		faculty : marklist.faculty,
																		collegeId : marklist.collegeId,
																		affiliationDetails : bach.affiliationDetails,
																		// college_List : college_List,
																		type : marklist.type,
																		clg_duration: facultyMaster.year
																	})
																})
															}else if(userMarklist[0].patteren == "Semester"){
																var semesters = facultyMaster.year * 2;
																for(var i = 2; i <= semesters; i=i+2){
																	var sem = "Semester " + i
																	userMarklist.forEach(marklist=>{
																		if(marklist.name == sem){
																			differentCollege.push({
																				faculty : marklist.faculty,
																				collegeId : marklist.collegeId,
																				affiliationDetails : bach.affiliationDetails,
																				// college_List : college_List,
																				type : marklist.type,
																				clg_duration: facultyMaster.year
																			})
																		}
																	})
																}
															}
														}
													})
												})
											})
											setTimeout(()=>{
												var bachelors = [];
												differentCollege.forEach(coll=>{
													var college = [];
													var bachFlag = false;
													if(bachelors.length > 0){
														bachelors.forEach(bach=>{
															if(bach.faculty == coll.faculty){
																bachFlag = true;
																var count = 0;
																bach.colleges.forEach(clg=>{
																	if(clg.collegeId == coll.collegeId){
																		count ++;
																	}
																})
																if(count <= bach.colleges.length){
																	bach.colleges.push({
																		collegeId : coll.collegeId
																	})
																}

																if(bach.affiliationDetails.length > 0) {
																	bach.form = true;
																}
															}
														})

														if(bachFlag == false){
															college.push({
																collegeId : coll.collegeId
															})

															bachelors.push({
																faculty : coll.faculty,
																colleges : college,
																affiliationDetails : coll.affiliationDetails,
																type: coll.type +' of '+ coll.faculty,
																college_List : college_List,
																clg_duration : coll.clg_duration,
															})
														}
													}else{
														college.push({
															collegeId : coll.collegeId
														})
														bachelors.push({
															faculty : coll.faculty,
															colleges :college,
															affiliationDetails : coll.affiliationDetails,
															type: coll.type +' of '+ coll.faculty,
															college_List : college_List,
															clg_duration : coll.clg_duration,
														})
													}
												})
												educationDetails.bachelors = bachelors;

											},3000)
										},4000)

									}else if(bachelorDetails[0].college_stream_type == false){
										models.College.find({
											where :{
												id : bachelorDetails[0].collegeId
											}
										}).then(collegename=>{
											models.Program_List.find({
												where :{
													degree : 'Bachelors',
													faculty : bachelorDetails[0].faculty
												}
											}).then(function(facultyMaster){
										models.Affiliation_Letter.findAll({
											where:{
												user_id : req.User.id,
												education : 'Bachelors_' + bachelorDetails[0].faculty
											}
										}).then(function(affiliationDetails){
											var college = [];
											college.push({
												collegeId : bachelorDetails[0].collegeId
											})
											educationDetails.bachelors.push({
												faculty : bachelorDetails[0].faculty,
												colleges : college,
												affiliationDetails : affiliationDetails,
												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration : facultyMaster.year,
												form :true
											})
										})
									})
								})
									}
								}
							})
							setTimeout(()=>{
								consoel.log("educationDetails == " + JSON.stringify(educationDetails));
								res.json({
									status : 200,
									data : educationDetails
								})
							},2000);
						})
					})
					})
					}
				}
				})
		}else if(req.query.degreeValue == 'Bachelors'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Bachelors",source : 'guattestation'
				}
			}).then(function(bachelor_Details){
				let clg_duration ;
				var differentStream = [];
				var bachelorDetails = [];
				if(bachelor_Details.length > 0){
					bachelor_Details.forEach(detail=>{
						if(detail.app_id != null){
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id =>{
								if(app_id == req.query.app_id){
									bachelorDetails.push(detail);
								}
							})
						}
					})
				}
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						let college_List = [];
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}
							models.Affiliation_Letter.findAll({
								where:{
									user_id : req.User.id,
									education : 'Bachelors_' + bachelor.faculty
								}
							}).then(function(affiliationDetails){
								if(differentStream.length > 0){
									var flag = false;
									differentStream.forEach(single=>{
										if(single.faculty == bachelor.faculty){
											flag = true;
										}
									})
									if(flag == false){

										differentStream.push({
											faculty : bachelor.faculty,
											affiliationDetails : affiliationDetails,
											type : bachelor.type
										})
									}
								}else{
									differentStream.push({
										faculty : bachelor.faculty,
										affiliationDetails : affiliationDetails,
										type : bachelor.type
									})
								}
							})
						})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								models.Program_List.find({
									where :{
										degree : 'Bachelors',
										faculty : bach.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Bachelors",
											faculty : bach.faculty,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														affiliationDetails : bach.affiliationDetails,
														type : marklist.type,
														clg_duration : facultyMaster.year
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.year * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																affiliationDetails : bach.affiliationDetails,
																type : marklist.type,
																clg_duration : facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								var bachelors = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(bachelors.length > 0){
										bachelors.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											bachelors.push({
												faculty : coll.faculty,
												colleges : college,
												affiliationDetails : coll.affiliationDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										bachelors.push({
											faculty : coll.faculty,
											colleges :college,
											affiliationDetails : coll.affiliationDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
										})
									}
								})
								educationDetails.bachelors = bachelors;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									degree : 'Bachelors',
									faculty : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
						models.Affiliation_Letter.findAll({
							where:{
								user_id : req.User.id,
								education : 'Bachelors_' + bachelorDetails[0].faculty
							}
						}).then(function(affiliationDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							educationDetails.bachelors.push({
								faculty : bachelorDetails[0].faculty,
								colleges : college,
								affiliationDetails : affiliationDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								clg_duration : facultyMaster.year,
								form : true
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
					})
					})
					}
				}
			})
		}else if(req.query.degreeValue == 'Masters'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",source : 'guattestation'
				}
			}).then(function(bachelor_Details){
				let clg_duration ;
				var differentStream = [];
				var bachelorDetails = [];
				if(bachelor_Details.length > 0){
					bachelor_Details.forEach(detail=>{
						if(detail.app_id != null){
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id =>{
								if(app_id == req.query.app_id){
									bachelorDetails.push(detail);
								}
							})
						}
					})
				}
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						let college_List = [];
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}
							models.Affiliation_Letter.findAll({
								where:{
									user_id : req.User.id,
									education : 'Masters_' + bachelor.faculty
								}
							}).then(function(affiliationDetails){
								if(differentStream.length > 0){
									var flag = false;
									differentStream.forEach(single=>{
										if(single.faculty == bachelor.faculty){
											flag = true;
										}
									})
									if(flag == false){

										differentStream.push({
											faculty : bachelor.faculty,
											affiliationDetails : affiliationDetails,
											type : bachelor.type
										})
									}
								}else{
									differentStream.push({
										faculty : bachelor.faculty,
										affiliationDetails : affiliationDetails,
										type : bachelor.type
									})
								}
							})
						})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								models.Program_List.find({
									where :{
										degree : 'Masters',
										faculty : bach.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : bach.faculty,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														affiliationDetails : bach.affiliationDetails,
														type : marklist.type,
														clg_duration : facultyMaster.year
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.year * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																affiliationDetails : bach.affiliationDetails,
																type : marklist.type,
																clg_duration : facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								var masters = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(masters.length > 0){
										masters.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												affiliationDetails : coll.affiliationDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											affiliationDetails : coll.affiliationDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
										})
									}
								})
								educationDetails.masters = masters;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									degree : 'Masters',
									faculty : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
						models.Affiliation_Letter.findAll({
							where:{
								user_id : req.User.id,
								education : 'Masters_' + bachelorDetails[0].faculty
							}
						}).then(function(affiliationDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							educationDetails.masters.push({
								faculty : bachelorDetails[0].faculty,
								colleges : college,
								affiliationDetails : affiliationDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								clg_duration : facultyMaster.year,
								form : true
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
					})
					})
					}
				}
			})
		}else if(req.query.degreeValue == 'Phd,Masters,Bachelors'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Phd",source : 'guattestation'
				}
			}).then(function(bachelor_Details){
				let clg_duration ;
				var differentStream = [];
				var bachelorDetails = [];
				if(bachelor_Details.length > 0){
					bachelor_Details.forEach(detail=>{
						if(detail.app_id != null){
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id =>{
								if(app_id == req.query.app_id){
									bachelorDetails.push(detail);
								}
							})
						}
					})
				}
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						let college_List = [];
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}
							models.Affiliation_Letter.findAll({
								where:{
									user_id : req.User.id,
									education : 'Phd_' + bachelor.faculty
								}
							}).then(function(affiliationDetails){
								if(differentStream.length > 0){
									var flag = false;
									differentStream.forEach(single=>{
										if(single.faculty == bachelor.faculty){
											flag = true;
										}
									})
									if(flag == false){

										differentStream.push({
											faculty : bachelor.faculty,
											affiliationDetails : affiliationDetails,
											type : bachelor.type
										})
									}
								}else{
									differentStream.push({
										faculty : bachelor.faculty,
										affiliationDetails : affiliationDetails,
										type : bachelor.type
									})
								}
							})
						})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								models.Program_List.find({
									where :{
										degree : 'Phd',
										faculty : bach.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Phd",
											faculty : bach.faculty,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														affiliationDetails : bach.affiliationDetails,
														type : marklist.type,
														clg_duration : facultyMaster.year
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.year * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																affiliationDetails : bach.affiliationDetails,
																type : marklist.type,
																clg_duration : facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								var phd = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(phd.length > 0){
										phd.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											phd.push({
												faculty : coll.faculty,
												colleges : college,
												affiliationDetails : coll.affiliationDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										phd.push({
											faculty : coll.faculty,
											colleges :college,
											affiliationDetails : coll.affiliationDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
										})
									}
								})
								educationDetails.phd = phd;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
						models.College.find({
							where :{
								id : bachelorDetails[0].collegeId
							}
						}).then(collegename=>{
							models.Program_List.find({
								where :{
									degree : 'Phd',
									faculty : bachelorDetails[0].faculty
								}
							}).then(function(facultyMaster){
						models.Affiliation_Letter.findAll({
							where:{
								user_id : req.User.id,
								education : 'Phd_' + bachelorDetails[0].faculty
							}
						}).then(function(affiliationDetails){
							var college = [];
							var form;
							// if(instructionalDetails.length > 0){
							// 	form = true;
							// }else{
							// 	form = false;
							// }
							college.push({
								collegeId : bachelorDetails[0].collegeId
							})
							educationDetails.phd.push({
								faculty : bachelorDetails[0].faculty,
								colleges : college,
								affiliationDetails : affiliationDetails,
								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
								college_name: collegename.name,
								clg_duration : facultyMaster.year,
								form : true
							})
							res.json({
								status : 200,
								data : educationDetails
							})
						})
					})
					})
					}
				}
			})
		}
	}else{
		if(req.query.degreeValue == 'Masters,Bachelors'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",
					app_id : null,source : 'guattestation'
				}
			}).then(function(masterDetails){
				let masters_duration;
				var differentStream = [];
				if(masterDetails.length >0){
					if(masterDetails[0].college_stream_type == true){
						let college_List=[]
						masterDetails.forEach(master=>{
							models.College.find({
								where :{
									id : master.collegeId
								}
							}).then(collegename=>{
								if(master.patteren == "Annual"){
									college_List.push({
										clg_name : collegename.name,
										academic_year : master.name
									})
								}else if(master.patteren == "Semester"){
									switch(master.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where:{
										user_id : req.User.id,
										education : 'Masters_' + master.faculty
									}
								}).then(function(affiliationDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == master.faculty){
												flag = true;
											}
										})
										if(flag == false){

											differentStream.push({
												faculty : master.faculty,
												affiliationDetails : affiliationDetails,
												type : master.type
											})
										}
									}else{
										differentStream.push({
											faculty : master.faculty,
											affiliationDetails : affiliationDetails,
											type : master.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []

							differentStream.forEach(mast=>{
								models.Program_List.find({
									where :{
										degree : 'Masters',
										faculty : mast.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : mast.faculty,
											app_id : null,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														affiliationDetails : mast.affiliationDetails,
														type : marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.year * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																affiliationDetails : mast.affiliationDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								var masters = [];

								differentCollege.forEach(coll=>{
									models.College.find({
										where :{
											id : coll.collegeId
										}
									}).then(collegename=>{
									var college = [];
									var mastFlag =false
									if(masters.length > 0){
										masters.forEach(mast=>{
											if(mast.faculty == coll.faculty){
												mastFlag = true;
												var count = 0;
												mast.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= mast.colleges.length){
													mast.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(mast.affiliationDetails.length >= 0) {
													mast.form = true;
												}
											}
										})

										if(mastFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												affiliationDetails : coll.affiliationDetails,
												type: coll.type +' of '+ coll.faculty,
												college_List : college_List,
												clg_duration : coll.clg_duration,
												college_name: collegename.name,
												form : true
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											affiliationDetails : coll.affiliationDetails,
											type: coll.type +' of '+ coll.faculty,
											college_List : college_List,
											clg_duration : coll.clg_duration,
											college_name: collegename.name,
											form : true
										})
									}
								})
							})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where :{
										user_id : req.User.id,
										type : "Bachelors",
										app_id : null,source : 'guattestation'
									}
								}).then(function(bachelorDetails){
									var differentStream = [];
									// let clg_duration;
									if(bachelorDetails.length >0){
										if(bachelorDetails[0].college_stream_type == true){
											let college_List =[];
											bachelorDetails.forEach(bachelor=>{
												models.College.find({
													where :{
														id : bachelor.collegeId
													}
												}).then(collegename=>{
													if(bachelor.patteren == "Annual"){
														//academic_year = bachelor.name;
														college_List.push({
															clg_name : collegename.name,
															academic_year : bachelor.name
														})
													}else if(bachelor.patteren == "Semester"){
														switch(bachelor.name){
															case 'Semester 2' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'First Year'
																})
																break;
															case 'Semester 4' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Second Year'
																})
																break;
															case 'Semester 6' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Third Year'
																})
																break;
															case 'Semester 8' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fourth Year'
																})

																break;
															case 'Semester 10' :
																college_List.push({
																	clg_name : collegename.name,
																	academic_year : 'Fifth Year'
																})
																break;
														}
													}
												models.Affiliation_Letter.findAll({
													where:{
														user_id : req.User.id,
														education : 'Bachelors_' + bachelor.faculty
													}
												}).then(function(affiliationDetails){
													if(differentStream.length > 0){
														var flag = false;
														differentStream.forEach(single=>{
															if(single.faculty == bachelor.faculty){
																flag = true;
															}
														})
														if(flag == false){

															differentStream.push({
																faculty : bachelor.faculty,
																affiliationDetails : affiliationDetails,
																type : bachelor.type,
															})
														}
													}else{
														differentStream.push({
															faculty : bachelor.faculty,
															affiliationDetails : affiliationDetails,
															type : bachelor.type,
														})
													}
												})
											})
											})
											setTimeout(() =>{
												var differentCollege = []
												differentStream.forEach(bach=>{
													models.Program_List.find({
														where :{
															degree : 'Bachelors',
															faculty : bach.faculty
														}
													}).then(function(facultyMaster){
														models.userMarkList.findAll({
															where:{
																user_id : req.User.id,
																type : "Bachelors",
																faculty : bach.faculty,
																app_id : null,source : 'guattestation'
															}
														}).then(function(userMarklist){
															if(userMarklist.length > 0){
																if(userMarklist[0].patteren == "Annual"){
																	userMarklist.forEach(marklist=>{
																		differentCollege.push({
																			faculty : marklist.faculty,
																			collegeId : marklist.collegeId,
																			affiliationDetails : bach.affiliationDetails,
																			type : marklist.type,
																			// college_List : college_List,
																			clg_duration: facultyMaster.year
																		})
																	})
																}else if(userMarklist[0].patteren == "Semester"){
																	var semesters = facultyMaster.year * 2;
																	for(var i = 2; i <= semesters; i=i+2){
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist=>{
																			if(marklist.name == sem){
																				differentCollege.push({
																					faculty : marklist.faculty,
																					collegeId : marklist.collegeId,
																					affiliationDetails : bach.affiliationDetails,
																					type : marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.year,
																					form : true
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(()=>{
													var bachelors = [];
													differentCollege.forEach(coll=>{
														var college = [];
														var bachFlag = false;
														if(bachelors.length > 0){
															bachelors.forEach(bach=>{
																if(bach.faculty == coll.faculty){
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg=>{
																		if(clg.collegeId == coll.collegeId){
																			count ++;
																		}
																	})
																	if(count <= bach.colleges.length){
																		bach.colleges.push({
																			collegeId : coll.collegeId
																		})
																	}

																	if(bach.affiliationDetails.length > 0) {
																		bach.form = true;
																	}
																}
															})

															if(bachFlag == false){
																college.push({
																	collegeId : coll.collegeId
																})

																bachelors.push({
																	faculty : coll.faculty,
																	colleges : college,
																	affiliationDetails : coll.affiliationDetails,
																	college_List : college_List,
																	type: coll.type +' of '+ coll.faculty,
																	clg_duration : coll.clg_duration,
																})
															}
														}else{
															college.push({
																collegeId : coll.collegeId
															})
															bachelors.push({
																faculty : coll.faculty,
																colleges :college,
																affiliationDetails : coll.affiliationDetails,
																college_List : college_List,
																type: coll.type +' of '+ coll.faculty,
																clg_duration : coll.clg_duration,
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status : 200,
														data : educationDetails
													})
												},3000)
											},4000)

										}else if(bachelorDetails[0].college_stream_type == false){
											models.College.find({
												where :{
													id : bachelorDetails[0].collegeId
												}
											}).then(collegename=>{
												models.Program_List.find({
													where :{
														degree : 'Bachelors',
														faculty : bachelorDetails[0].faculty
													}
												}).then(function(facultyMaster){
											models.Affiliation_Letter.findAll({
												where:{
													user_id : req.User.id,
													education : 'Bachelors_' + bachelorDetails[0].faculty
												}
											}).then(function(affiliationDetails){
												var college = [];
												college.push({
													collegeId : bachelorDetails[0].collegeId
												})
												educationDetails.bachelors.push({
													faculty : bachelorDetails[0].faculty,
													colleges : college,
													affiliationDetails : affiliationDetails,
													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
													college_name: collegename.name,
													clg_duration : facultyMaster.year,
													form : true
												})
												res.json({
													status : 200,
													data : educationDetails
												})
											})
										})
									})
										}
									}

									// res.json({
									// 	status : 200,
									// 	data : educationDetails
									// })
								})
							},3000)
						},4000)

					}else if(masterDetails[0].college_stream_type == false){
						models.College.find({
							where :{
								id : masterDetails[0].collegeId
							}
						}).then(master_collegename=>{
							models.Program_List.find({
								where :{
									degree : 'Masters',
									faculty : masterDetails[0].faculty
								}
							}).then(function(facultyMaster){
						models.Affiliation_Letter.findAll({
							where:{
								user_id : req.User.id,
								education : 'Masters_' + masterDetails[0].faculty
							}
						}).then(function(affiliationDetails){
							var college = [];
							college.push({
								collegeId : masterDetails[0].collegeId
							})
							educationDetails.masters.push({
								faculty : masterDetails[0].faculty,
								colleges : college,
								affiliationDetails : affiliationDetails,
								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
								college_name: master_collegename.name,
								clg_duration : facultyMaster.year,
								form : true
							})
							models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : "Bachelors",
									app_id : null,source : 'guattestation'
								}
							}).then(function(bachelorDetails){
								var differentStream = [];
								let clg_duration;
								if(bachelorDetails.length >0){
									if(bachelorDetails[0].college_stream_type == true){
										let college_List=[];
										bachelorDetails.forEach(bachelor=>{
											models.College.find({
												where :{
													id : bachelor.collegeId
												}
											}).then(collegename=>{
												if(bachelor.patteren == "Annual"){
													//academic_year = bachelor.name;
													college_List.push({
														clg_name : collegename.name,
														academic_year : bachelor.name
													})
												}else if(bachelor.patteren == "Semester"){
													switch(bachelor.name){
														case 'Semester 2' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'First Year'
															})
															break;
														case 'Semester 4' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Second Year'
															})
															break;
														case 'Semester 6' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Third Year'
															})
															break;
														case 'Semester 8' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fourth Year'
															})

															break;
														case 'Semester 10' :
															college_List.push({
																clg_name : collegename.name,
																academic_year : 'Fifth Year'
															})
															break;
													}
												}
											models.Affiliation_Letter.findAll({
												where:{
													user_id : req.User.id,
													education : 'Bachelors_' + bachelor.faculty
												}
											}).then(function(affiliationDetails){
												if(differentStream.length > 0){
													var flag = false;
													differentStream.forEach(single=>{
														if(single.faculty == bachelor.faculty){
															flag = true;
														}
													})
													if(flag == false){

														differentStream.push({
															faculty : bachelor.faculty,
															affiliationDetails : affiliationDetails,
															type : bachelor.type,
														})
													}
												}else{
													differentStream.push({
														faculty : bachelor.faculty,
														affiliationDetails : affiliationDetails,
														type : bachelor.type,
													})
												}
											})
										})
										})
										setTimeout(() =>{
											var differentCollege = []
											differentStream.forEach(bach=>{
												models.Program_List.find({
													where :{
														degree : 'Bachelors',
														faculty : bach.faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.findAll({
														where:{
															user_id : req.User.id,
															type : "Bachelors",
															faculty : bach.faculty,
															app_id : null,source : 'guattestation'
														}
													}).then(function(userMarklist){
														if(userMarklist.length > 0){
															if(userMarklist[0].patteren == "Annual"){
																userMarklist.forEach(marklist=>{
																	differentCollege.push({
																		faculty : marklist.faculty,
																		collegeId : marklist.collegeId,
																		affiliationDetails : bach.affiliationDetails,
																		// college_List : college_List,
																		type : marklist.type,
																		clg_duration: facultyMaster.year
																	})
																})
															}else if(userMarklist[0].patteren == "Semester"){
																var semesters = facultyMaster.year * 2;
																for(var i = 2; i <= semesters; i=i+2){
																	var sem = "Semester " + i
																	userMarklist.forEach(marklist=>{
																		if(marklist.name == sem){
																			differentCollege.push({
																				faculty : marklist.faculty,
																				collegeId : marklist.collegeId,
																				affiliationDetails : bach.affiliationDetails,
																				// college_List : college_List,
																				type : marklist.type,
																				clg_duration: facultyMaster.year
																			})
																		}
																	})
																}
															}
														}
													})
												})
											})
											setTimeout(()=>{
												var bachelors = [];
												differentCollege.forEach(coll=>{
													var college = [];
													var bachFlag = false;
													if(bachelors.length > 0){
														bachelors.forEach(bach=>{
															if(bach.faculty == coll.faculty){
																bachFlag = true;
																var count = 0;
																bach.colleges.forEach(clg=>{
																	if(clg.collegeId == coll.collegeId){
																		count ++;
																	}
																})
																if(count <= bach.colleges.length){
																	bach.colleges.push({
																		collegeId : coll.collegeId
																	})
																}

																if(bach.affiliationDetails.length > 0) {
																	bach.form = true;
																}
															}
														})

														if(bachFlag == false){
															college.push({
																collegeId : coll.collegeId
															})

															bachelors.push({
																faculty : coll.faculty,
																colleges : college,
																affiliationDetails : coll.affiliationDetails,
																type: coll.type +' of '+ coll.faculty,
																college_List : college_List,
																clg_duration : coll.clg_duration,
															})
														}
													}else{
														college.push({
															collegeId : coll.collegeId
														})
														bachelors.push({
															faculty : coll.faculty,
															colleges :college,
															affiliationDetails : coll.affiliationDetails,
															type: coll.type +' of '+ coll.faculty,
															college_List : college_List,
															clg_duration : coll.clg_duration,
														})
													}
												})
												educationDetails.bachelors = bachelors;
												res.json({
													status : 200,
													data : educationDetails
												})
											},5000)
										},6000)

									}else if(bachelorDetails[0].college_stream_type == false){
										models.College.find({
											where :{
												id : bachelorDetails[0].collegeId
											}
										}).then(collegename=>{
											models.Program_List.find({
												where :{
													degree : 'Bachelors',
													faculty : bachelorDetails[0].faculty
												}
											}).then(function(facultyMaster){
										models.Affiliation_Letter.findAll({
											where:{
												user_id : req.User.id,
												education : 'Bachelors_' + bachelorDetails[0].faculty
											}
										}).then(function(affiliationDetails){
											var college = [];
											college.push({
												collegeId : bachelorDetails[0].collegeId
											})
											educationDetails.bachelors.push({
												faculty : bachelorDetails[0].faculty,
												colleges : college,
												affiliationDetails : affiliationDetails,
												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration : facultyMaster.year,
												form :true
											})
											res.json({
												status : 200,
												data : educationDetails
											})
										})
									})
								})
									}
								}
								// setTimeout(()=>{
								// 	res.json({
								// 		status : 200,
								// 		data : educationDetails
								// 	})
								// },2000)
							})
						})
					})
					})
					}
				}


			})
		}else if(req.query.degreeValue == 'Bachelors'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Bachelors",
					app_id : null,source : 'guattestation'
				}
			}).then(function(bachelorDetails){
				// let clg_duration;
				// console.log("durationnn----->"+clg_duration)
				var differentStream = [];
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						let college_List = [];
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where:{
										user_id : req.User.id,
										education : 'Bachelors_' + bachelor.faculty
									}
								}).then(function(affiliationDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){

											differentStream.push({
												faculty : bachelor.faculty,
												affiliationDetails : affiliationDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											affiliationDetails : affiliationDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								models.Program_List.find({
									where :{
										degree : 'Bachelors',
										faculty : bach.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Bachelors",
											faculty : bach.faculty,
											app_id : null,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														affiliationDetails : bach.affiliationDetails,
														type : marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.year * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																affiliationDetails : bach.affiliationDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								// console.log("clg_duration==>"+clg_duration)
								var bachelors = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(bachelors.length > 0){
										bachelors.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											bachelors.push({
												faculty : coll.faculty,
												colleges : college,
												affiliationDetails : coll.affiliationDetails,
												type: coll.type +' of '+ coll.faculty,
												clg_duration : coll.clg_duration,
												college_List : college_List,
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										bachelors.push({
											faculty : coll.faculty,
											colleges :college,
											affiliationDetails : coll.affiliationDetails,
											type: coll.type +' of '+ coll.faculty,
											clg_duration : coll.clg_duration,
											college_List : college_List
										})
									}
								})
								educationDetails.bachelors = bachelors;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
							// console.log("clg_durationD==>"+clg_duration)
								models.College.find({
									where :{
										id : bachelorDetails[0].collegeId
									}
								}).then(collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Bachelors',
											faculty : bachelorDetails[0].faculty
										}
									}).then(function(facultyMaster){
								models.Affiliation_Letter.findAll({
									where:{
										user_id : req.User.id,
										education : 'Bachelors_' + bachelorDetails[0].faculty
									}
								}).then(function(affiliationDetails){
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;
									// }
									college.push({
										collegeId : bachelorDetails[0].collegeId
									})
									educationDetails.bachelors.push({
										faculty : bachelorDetails[0].faculty,
										colleges : college,
										affiliationDetails : affiliationDetails,
										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration : facultyMaster.year,
										form : true
									})
									res.json({
										status : 200,
										data : educationDetails
									})
								})
							})
						})
					}
				}
			})
		}else if(req.query.degreeValue == 'Masters'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Masters",
					app_id : null,source : 'guattestation'
				}
			}).then(function(bachelorDetails){
				// let clg_duration;
				// console.log("durationnn----->"+clg_duration)
				var differentStream = [];
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						let college_List = [];
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where:{
										user_id : req.User.id,
										education : 'Masters_' + bachelor.faculty
									}
								}).then(function(affiliationDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){

											differentStream.push({
												faculty : bachelor.faculty,
												affiliationDetails : affiliationDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											affiliationDetails : affiliationDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								models.Program_List.find({
									where :{
										degree : 'Masters',
										faculty : bach.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Masters",
											faculty : bach.faculty,
											app_id : null,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														affiliationDetails : bach.affiliationDetails,
														type : marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.year * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																affiliationDetails : bach.affiliationDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								// console.log("clg_duration==>"+clg_duration)
								var masters = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(masters.length > 0){
										masters.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											masters.push({
												faculty : coll.faculty,
												colleges : college,
												affiliationDetails : coll.affiliationDetails,
												type: coll.type +' of '+ coll.faculty,
												clg_duration : coll.clg_duration,
												college_List : college_List,
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										masters.push({
											faculty : coll.faculty,
											colleges :college,
											affiliationDetails : coll.affiliationDetails,
											type: coll.type +' of '+ coll.faculty,
											clg_duration : coll.clg_duration,
											college_List : college_List
										})
									}
								})
								educationDetails.masters = masters;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
							// console.log("clg_durationD==>"+clg_duration)
								models.College.find({
									where :{
										id : bachelorDetails[0].collegeId
									}
								}).then(collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Masters',
											faculty : bachelorDetails[0].faculty
										}
									}).then(function(facultyMaster){
								models.Affiliation_Letter.findAll({
									where:{
										user_id : req.User.id,
										education : 'Masters_' + bachelorDetails[0].faculty
									}
								}).then(function(affiliationDetails){
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;
									// }
									college.push({
										collegeId : bachelorDetails[0].collegeId
									})
									educationDetails.masters.push({
										faculty : bachelorDetails[0].faculty,
										colleges : college,
										affiliationDetails : affiliationDetails,
										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration : facultyMaster.year,
										form : true
									})
									res.json({
										status : 200,
										data : educationDetails
									})
								})
							})
						})
					}
				}
			})
		}else if(req.query.degreeValue == 'Phd,Masters,Bachelors'){
			models.userMarkList.findAll({
				where :{
					user_id : req.User.id,
					type : "Phd",
					app_id : null,source : 'guattestation'
				}
			}).then(function(bachelorDetails){
				// let clg_duration;
				// console.log("durationnn----->"+clg_duration)
				var differentStream = [];
				if(bachelorDetails.length >0){
					if(bachelorDetails[0].college_stream_type == true){
						let college_List = [];
						bachelorDetails.forEach(bachelor=>{
							models.College.find({
								where :{
									id : bachelor.collegeId
								}
							}).then(collegename=>{
								if(bachelor.patteren == "Annual"){
									//academic_year = bachelor.name;
									college_List.push({
										clg_name : collegename.name,
										academic_year : bachelor.name
									})
								}else if(bachelor.patteren == "Semester"){
									switch(bachelor.name){
										case 'Semester 2' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'First Year'
											})
											break;
										case 'Semester 4' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Second Year'
											})
											break;
										case 'Semester 6' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Third Year'
											})
											break;
										case 'Semester 8' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fourth Year'
											})

											break;
										case 'Semester 10' :
											college_List.push({
												clg_name : collegename.name,
												academic_year : 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where:{
										user_id : req.User.id,
										education : 'Phd_' + bachelor.faculty
									}
								}).then(function(affiliationDetails){
									if(differentStream.length > 0){
										var flag = false;
										differentStream.forEach(single=>{
											if(single.faculty == bachelor.faculty){
												flag = true;
											}
										})
										if(flag == false){

											differentStream.push({
												faculty : bachelor.faculty,
												affiliationDetails : affiliationDetails,
												type : bachelor.type
											})
										}
									}else{
										differentStream.push({
											faculty : bachelor.faculty,
											affiliationDetails : affiliationDetails,
											type : bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() =>{
							var differentCollege = []
							differentStream.forEach(bach=>{
								models.Program_List.find({
									where :{
										degree : 'Phd',
										faculty : bach.faculty
									}
								}).then(function(facultyMaster){
									models.userMarkList.findAll({
										where:{
											user_id : req.User.id,
											type : "Phd",
											faculty : bach.faculty,
											app_id : null,source : 'guattestation'
										}
									}).then(function(userMarklist){
										if(userMarklist.length > 0){
											if(userMarklist[0].patteren == "Annual"){
												userMarklist.forEach(marklist=>{
													differentCollege.push({
														faculty : marklist.faculty,
														collegeId : marklist.collegeId,
														affiliationDetails : bach.affiliationDetails,
														type : marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											}else if(userMarklist[0].patteren == "Semester"){
												var semesters = facultyMaster.year * 2;
												for(var i = 2; i <= semesters; i=i+2){
													var sem = "Semester " + i
													userMarklist.forEach(marklist=>{
														if(marklist.name == sem){
															differentCollege.push({
																faculty : marklist.faculty,
																collegeId : marklist.collegeId,
																affiliationDetails : bach.affiliationDetails,
																type : marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(()=>{
								// console.log("clg_duration==>"+clg_duration)
								var phd = [];
								differentCollege.forEach(coll=>{
									var college = [];
									var bachFlag = false;
									if(phd.length > 0){
										phd.forEach(bach=>{
											if(bach.faculty == coll.faculty){
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg=>{
													if(clg.collegeId == coll.collegeId){
														count ++;
													}
												})
												if(count <= bach.colleges.length){
													bach.colleges.push({
														collegeId : coll.collegeId
													})
												}

												if(bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if(bachFlag == false){
											college.push({
												collegeId : coll.collegeId
											})

											phd.push({
												faculty : coll.faculty,
												colleges : college,
												affiliationDetails : coll.affiliationDetails,
												type: coll.type +' of '+ coll.faculty,
												clg_duration : coll.clg_duration,
												college_List : college_List,
											})
										}
									}else{
										college.push({
											collegeId : coll.collegeId
										})
										phd.push({
											faculty : coll.faculty,
											colleges :college,
											affiliationDetails : coll.affiliationDetails,
											type: coll.type +' of '+ coll.faculty,
											clg_duration : coll.clg_duration,
											college_List : college_List
										})
									}
								})
								educationDetails.phd = phd;
								res.json({
									status : 200,
									data : educationDetails
								})
							},3000)
						},4000)

					}else if(bachelorDetails[0].college_stream_type == false){
							// console.log("clg_durationD==>"+clg_duration)
								models.College.find({
									where :{
										id : bachelorDetails[0].collegeId
									}
								}).then(collegename=>{
									models.Program_List.find({
										where :{
											degree : 'Phd',
											faculty : bachelorDetails[0].faculty
										}
									}).then(function(facultyMaster){
								models.Affiliation_Letter.findAll({
									where:{
										user_id : req.User.id,
										education : 'Phd_' + bachelorDetails[0].faculty
									}
								}).then(function(affiliationDetails){
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;
									// }
									college.push({
										collegeId : bachelorDetails[0].collegeId
									})
									educationDetails.phd.push({
										faculty : bachelorDetails[0].faculty,
										colleges : college,
										affiliationDetails : affiliationDetails,
										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration : facultyMaster.year,
										form : true
									})
									res.json({
										status : 200,
										data : educationDetails
									})
								})
							})
						})
					}
				}
			})
		}
	}
})
router.get('/getDocumentDetails',middlewares.getUserInfo,function(req,res){
	console.log('/getDocumentDetails');
	var outercounter = 0;
	var ssc_document_exists,
	hsc_document_exists,
	degree_document_exists,
	master_document_exists,
	phd_document_exists;
	var ssc_document;
	var hsc_document;
	var degree_document;
	var master_document;
	var phd_document;
	var ssc_lock,hsc_lock,degree_lock, master_lock, phd_lock;
	models.User_Transcript.findAll({
		where:{
			user_id : req.User.id,source : 'guattestation' 
		}
	}).then(function(transcripts){
		if(transcripts.length > 0){
			transcripts.forEach(function(transcript){
				if(transcript.type == 'SSC'){
					ssc_document_exists = 'exists';
					ssc_document = transcript.file_name;
					ssc_lock=transcript.lock_transcript;
				}

				if(transcript.type == 'HSC'){
					hsc_document_exists = 'exists';
					hsc_document = transcript.file_name;
					hsc_lock=transcript.lock_transcript;
				}

				if(transcript.type == 'Graduation'){
					degree_document_exists = 'exists';
					degree_document = transcript.file_name;
					degree_lock=transcript.lock_transcript;
				}

				if(transcript.type == 'Master'){
					master_document_exists = 'exists';
					master_document = transcript.file_name;
					master_lock=transcript.lock_transcript;
				}

				if(transcript.type == 'Ph.D'){
					phd_document_exists = 'exists';
					phd_document = transcript.file_name;
					phd_lock=transcript.lock_transcript;
				}

				outercounter ++;
			});
			if(outercounter == transcripts.length){
				var data = [];
				data.push({
					ssc_document_exists : ssc_document_exists,
					hsc_document_exists : hsc_document_exists,
					degree_document_exists : degree_document_exists,
					master_document_exists : master_document_exists,
					phd_document_exists : phd_document_exists,
					ssc_document : ssc_document,
					hsc_document : hsc_document,
					degree_document : degree_document,
					master_document : master_document,
					phd_document : phd_document,
					ssc_lock:ssc_lock,
					hsc_lock:hsc_lock,
					degree_lock:degree_lock,
					master_lock : master_lock,
					phd_lock : phd_lock,
				});

				res.json({
					status : 200,
					data : data
				})
			}
		}else{
			res.json({
				status : 400,
				message : 'Transcripts not uploaded'
			})
		}
	})
});

router.get('/getDocumentStatus',middlewares.getUserInfo,function(req,res){
	console.log('/getDocumentStatus');
	var ssc_exists = false;
	var hsc_exists = false;
	var degree_exists = false;
	var master_exists = false;
	var phd_exists = false;
	var outercounter = 0;
	models.User.find({
		where:{
			id : req.User.id
		}
	}).then(function(user){
		models.User_Transcript.findAll({
			where:{
				user_id : user.id,source : 'guattestation' 
			}
		}).then(function(all_transcripts){
			if(all_transcripts.length > 0){
				if(user.applying_for == 'Degree'){
					all_transcripts.forEach(function(transcript){
						if(transcript.type == 'SSC'){
							ssc_exists = true;
						}

						if(transcript.type == 'HSC'){
							hsc_exists = true;
						}
						if(transcript.type == 'Graduation'){
							degree_exists = true;
						}
						outercounter ++;
					});

					if(all_transcripts.length == outercounter){
						if(ssc_exists == true && hsc_exists == true && degree_exists == true){
							res.json({
								status : 200,
								message : 'All transcripts exists'
							});
						}else{
							res.json({
								status : 400,
								message : 'Transcripts missing'
							});
						}
					}
				}else if(user.applying_for == 'Masters'){
					all_transcripts.forEach(function(transcript){
						if(transcript.type == 'SSC'){
							ssc_exists = true;
						}

						if(transcript.type == 'HSC'){
							hsc_exists = true;
						}

						if(transcript.type == 'Graduation'){
							degree_exists = true;
						}

						if(transcript.type == 'Masters'){
							master_exists = true;
						}
						outercounter ++;
					});

					if(all_transcripts.length == outercounter){
						if(ssc_exists == true && hsc_exists == true && degree_exists == true && master_exists == true){
							res.json({
								status : 200,
								message : 'All transcripts exists'
							});
						}else{
							res.json({
								status : 400,
								message : 'Transcripts missing'
							});
						}
					}
				}else if(user.applying_for == 'Ph.D'){
					all_transcripts.forEach(function(transcript){
						if(transcript.type == 'SSC'){
							ssc_exists = true;
						}

						if(transcript.type == 'HSC'){
							hsc_exists = true;
						}

						if(transcript.type == 'Graduation'){
							degree_exists = true;
						}

						if(transcript.type == 'Master'){
							master_exists = true;
						}
						if(transcript.type == 'Ph.D'){
							phd_exists = true;
						}
						outercounter ++;
					});

					if(all_transcripts.length == outercounter){
						if(ssc_exists == true && hsc_exists == true && degree_exists == true && master_exists == true && phd_exists == true){
							res.json({
								status : 200,
								message : 'All transcripts exists'
							});
						}else{
							res.json({
								status : 400,
								message : 'Transcripts missing'
							});
						}
					}
				}
			}else{
				res.json({
					status : 400,
					message : 'Transcripts missing'
				});
			}
		})
	});
});

router.get('/getInstituteStatus',middlewares.getUserInfo,function(req,res){
	console.log('/getInstituteStatus');
	var ssc_exists = false;
	var hsc_exists = false;
	var degree_exists = false;
	var master_exists = false;
	var phd_exists = false;
	var outercounter = 0;
	models.User.find({
		where:{
			id : req.User.id
		}
	}).then(function(user){
		models.Educational_Details.findAll({
			where:{
				user_id : user.id
			}
		}).then(function(all_details){
			if(all_details.length > 0){
				if(user.applying_for == 'Degree'){
					all_details.forEach(function(detail){
						if(detail.type == 'SSC'){
							ssc_exists = true;
						}

						if(detail.type == 'HSC'){
							hsc_exists = true;
						}

						if(detail.type == 'Graduation'){
							degree_exists = true;
						}
						outercounter ++;
					});

					if(all_details.length == outercounter){
						if(ssc_exists == true && hsc_exists == true && degree_exists == true){
							res.json({
								status : 200,
								message : 'All details exists'
							});
						}else{
							res.json({
								status : 400,
								message : 'details missing'
							});
						}
					}
				}else if(user.applying_for == 'Masters'){
					all_details.forEach(function(detail){
						if(detail.type == 'SSC'){
							ssc_exists = true;
						}

						if(detail.type == 'HSC'){
							hsc_exists = true;
						}

						if(detail.type == 'Graduation'){
							degree_exists = true;
						}

						if(detail.type == 'Master'){
							master_exists = true;
						}
						outercounter ++;
					});

					if(all_details.length == outercounter){
						if(ssc_exists == true && hsc_exists == true && degree_exists == true && master_exists == true){
							res.json({
								status : 200,
								message : 'All details exists'
							});
						}else{
							res.json({
								status : 400,
								message : 'details missing'
							});
						}
					}
				}else if(user.applying_for == 'Ph.D'){
					all_details.forEach(function(detail){
						if(detail.type == 'SSC'){
							ssc_exists = true;
						}

						if(detail.type == 'HSC'){
							hsc_exists = true;
						}

						if(detail.type == 'Graduation'){
							degree_exists = true;
						}

						if(detail.type == 'Master'){
							master_exists = true;
						}
						if(detail.type == 'Ph.D'){
							phd_exists = true;
						}
						outercounter ++;
					});

					if(all_details.length == outercounter){
						if(ssc_exists == true && hsc_exists == true && degree_exists == true && master_exists == true && phd_exists == true){
							res.json({
								status : 200,
								message : 'All details exists'
							});
						}else{
							res.json({
								status : 400,
								message : 'details missing'
							});
						}
					}
				}
			}else{
				res.json({
					status : 400,
					message : 'details missing'
				});
			}
		})
	});
});

router.get('/getApplyingEducation',middlewares.getUserInfo,function(req,res){
	console.log('/getApplyingEducation');
	models.User.find({
		where:{
			id : req.User.id
		}
	}).then(function(user){
		res.json({
			status : 200,
			data : user
		});
	})
});

router.get('/my_applications',middlewares.getUserInfo, function(req,res){
	console.log('/my_applications');
    var user_id = req.User.id;
    var final_data=[];
	var errata = {};
	var count=0;
	var amount;
	models.Application.findAll({
		where :{
			user_id : user_id,
			[Op.or]:[{
				source_from:'guattestation',
			 },
			 {
				source_from:'gumoi',
			 }]
		}
	}).then(function(applications){
		applications.forEach(application=>{
			models.Institution_details.findAll({
				where:{
					user_id : user_id,
					app_id : application.id,source : 'guattestation'
				}
			}).then(function(institutes){
				var instituteData = [];
				console.log('instituteinstitute' + JSON.stringify(institutes.length));
				institutes.forEach(institute=>{
					var status;
					if(application.tracker == 'apply'){
						if(application.status == 'new'){
							if(application.transcriptRequiredMail){
								status = "On Hold (Required Transcripts)";
							}else{
								status = "Applied";
							}
						}else if(application.status == 'reject'){
							status = "Rejected";
						}
					}else if(application.tracker == 'done'){
						models.EmailActivityTracker.getEmailData(institute.email, req.User.name, req.User.surname).then(function(emailActivity){
							if(emailActivity[0].clicks_count > 0){
								status = "Documents Reviewed"
							}else if(emailActivity[0].opens_count > 0){
								status ="Mail Checked"
							}else{
								status = emailActivity[0].status
							}
						})
					}else if(application.tracker == 'signed' && institute.type == "Educational credential evaluators WES"){
						status = "sent to WES";
					}else{
						status = application.tracker
					}

					var email ;
					if(institute.OtherEmail){
						email = institute.email + "," + institute.OtherEmail
					}else {
						email = institute.email
					}
					var referenceNo;
					if(institute.type == 'study')
						referenceNo = institute.studyrefno;
					if(institute.type == 'employment')
						referenceNo = institute.emprefno;
					if(institute.type == 'IQAS')
						referenceNo = institute.iqasno;
					if(institute.type == 'CES')
						referenceNo = institute.cesno;
					if(institute.type == 'ICAS')
						referenceNo = institute.icasno;
					if(institute.type == 'visa')
						referenceNo = institute.visarefno;
					if(institute.type == 'MYIEE')
						referenceNo = institute.myieeno;
					if(institute.type == 'ICES')
						referenceNo = institute.icesno;
					if(institute.type == 'NASBA')
						referenceNo = institute.nasbano;
					if(institute.type == 'Educational Perspective')
						referenceNo = institute.eduperno;
					if(institute.type == 'NCEES')
						referenceNo = institute.nceesno;
					if(institute.type == 'NARIC')
						referenceNo = institute.naricno;
					if(institute.type == 'National Committee on Accreditation')
						referenceNo = institute.ncano;
					if(institute.type == 'others')
						referenceNo = institute.otheraccno;
					if(institute.type == 'Educational credential evaluators WES')
						referenceNo = institute.wesno;

					instituteData.push({
						purpose : institute.type,
						email : email,
						reference_no : referenceNo,
						status : status,
						tracker : application.status
					});
				})

				if(application.transcriptRequiredMail == true){
					errata.transcriptErrata = true;
				}

				if(application.notes != null && application.notes != undefined && application.notes != '' ){
					if(application.notes.includes('Marksheet incomplete')){
						errata.marksheetErrata = true;
					}
					if(application.notes.includes('Marksheets Not Uploaded')){
						errata.marksheetErrata = true;
					}
					if(application.notes.includes('Phd Documents Incomlpete')){
						errata.phdtranscriptErrata = true;
					}
					// if(application.notes.includes('Instructional Details Incomplete')){
					// 	errata.instrcutionalErrata = true;
					// }
					// if(application.notes.includes('Instructional Details Not Filled')){
					// 	errata.instrcutionalErrata = true;
					// }
					// if(application.notes.includes('Bonafied Not Uploaded')){
					// 	errata.instrcutionalErrata = true;
					// }
					if(application.notes.includes('Transcripts is not approved')){
						errata.transcriptErrata = true;
					}
					if(application.notes.includes('Transcript Not Uploaded')){
						errata.transcriptErrata = true;
					}

					if(application.notes.includes('Convocation is not uploded')){
						errata.degreeErrata = true;
					}
					if(application.notes.includes('Degree Not Uploaded')){
						errata.degreeErrata = true;
					}

					if(application.notes.includes('you have uploaded degree certificate')){
						errata.degreeErrata = true;
					}				
				}
				models.Applicant_Marksheet.findAll({
					where : {
						user_id : req.User.id,
						lock_transcript : 1,
						[Op.or]:[{
							source:'guattestation',
						 },
						 {
							source:'gumoi',
						 }],
						upload_step :{
							[Op.not] : 'changed'
						},
						type : {
							[Op.like] : '%Bonafied%'
						},
					}
				}).then((applicant_marksheet)=>{
					if(applicant_marksheet.length  > 0 ){
						errata.BonafideErrata = true;
					}
					models.Applicant_Marksheet.findAll({
						where : {
							user_id : req.User.id,
							lock_transcript : 1,
							[Op.or]:[{
								source:'guattestation',
							 },
							 {
								source:'gumoi',
							 }],
							upload_step :{
								[Op.not] : 'changed'
							},
							type : {
								[Op.like] : '%Aadhar Card%'
							},
						}
					}).then((applicant_marksheet)=>{
						if(applicant_marksheet.length  >0){
							errata.AadharErrata = true;
						}

				models.UserMarklist_Upload.findAll({
					where : {
						user_id : req.User.id,
						lock_transcript : 1,
						app_id : application.id,
						upload_step :{
							[Op.not] : 'changed'
						},source : 'guattestation'
					}
				}).then((usermarklist_uploadData)=>{
					usermarklist_uploadData.forEach(marklist=>{
						var app_idArr = marklist.app_id.split(',');
						app_idArr.forEach(app_id =>{
							if(app_id == application.id){
								errata.marksheetErrata = true;
							}
						})
					})

					models.User_Transcript.findAll({
						where : {
							user_id : req.User.id,
							lock_transcript : 1,
							app_id : application.id,
							upload_step :{
								[Op.not] : 'changed'
							},
							type : {
								[Op.like] : '%transcript%'
							},source : 'guattestation' 
						}
					}).then((User_TranscriptData)=>{
						User_TranscriptData.forEach(transcript=>{
							var app_idArr = transcript.app_id.split(',');
							app_idArr.forEach(app_id =>{
								if(app_id == application.id){
									errata.transcriptErrata = true;
								}
							})
						})
						models.User_Transcript.findAll({
							where : {
								user_id : req.User.id,
								lock_transcript : 1,
								app_id : application.id,
								upload_step :{
									[Op.not] : 'changed'
								},
								type : {
									[Op.like] : '%degree%'
								},source : 'guattestation' 
							}
						}).then((User_TranscriptData)=>{
							User_TranscriptData.forEach(transcript=>{
								var app_idArr = transcript.app_id.split(',');
								app_idArr.forEach(app_id =>{
									if(app_id == application.id){
										errata.degreeErrata = true;
									}
								})
							})

							models.User_Transcript.findAll({
								where : {
									user_id : req.User.id,
									lock_transcript : 1,
									app_id : application.id,
									upload_step :{
										[Op.not] : 'changed'
									},
									type : {
										[Op.like] : '%thesis%'
									},source : 'guattestation' 
								}
							}).then((User_TranscriptData)=>{
								User_TranscriptData.forEach(transcript=>{
									var app_idArr = transcript.app_id.split(',');
									app_idArr.forEach(app_id =>{
										if(app_id == application.id){
											errata.thesisErrata = true;
										}
									})
								})
	

								models.InstructionalDetails.findAll({
								where : {
									userId : req.User.id,
									lock_transcript : 1,
									app_id : application.id,
									app_id : {
										[Op.ne] : null
									},
								}
							}).then((inst_details)=>{
								inst_details.forEach(letter=>{
									var app_idArr = letter.app_id.split(',');
									app_idArr.forEach(app_id =>{
										if(app_id == application.id){
											errata.instrcutionalErrata = true;
										}
									})
								})

								
								
								inst_details.forEach(letter=>{
									var app_idArr = letter.app_id.split(',');
									app_idArr.forEach(app_id =>{
										if(app_id == application.id){
											errata.instrcutionalErrata = true;
										}
									})
								})

								final_data.push({
									user_id : user_id,
									application_id : application.id,
									instituteData : instituteData,
									application_date : moment(application.created_at).format('DD-MM-YYYY'),
									errata : errata
								})
						
					})
					
					})
				})
			})
		})
				})
				})
			})
		})
		setTimeout(()=>{
			res.json({
				status : 200,
				data : final_data
			})
		},5000)
	})
});

router.post('/upload_document',function(req,res){
	console.log('/upload_document');
    var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;

	var dir = constant.FILE_LOCATION + "public/upload/documents/" + userId;

	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
  	var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/documents/'+userId);
		},
		filename: function(req, file, callback) {
			callback(null, file.originalname);
			if(file.originalname.includes('&')){
				image = file.originalname.split('&').join('_');
			}else{
				image = file.originalname;
			}
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			if(file.originalname.includes('&')){
				file.originalname = file.originalname.split('&').join('_');
			}
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION +'public/upload/documents/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) {}
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				if(transcript_doc == 'transcripts'){
					models.User_Transcript.find({
						where:
						{
							user_id: userId,
							type: transcript_doc,source : 'guattestation' 
						}
					}).then(function(user_exists){
						if(user_exists){
							user_exists.update({
								name: transcript_name,
								user_id: userId,
								type: transcript_doc,
								file_name: imageLocationToCallClient,
								lock_transcript : false,
								upload_step : "changed"
							}).then(function(transcript_updated){
								if(transcript_updated){
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data : transcript_doc
									});
								}else{
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}
							})
						}else{
							models.User_Transcript.create({
								name: transcript_name,
								user_id: userId,
								type: transcript_doc,
								file_name: imageLocationToCallClient,
								lock_transcript : false,
								upload_step : "default"
								,source : 'guattestation' 
							}).then(function (userTranscript) {
								if (userTranscript) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data : transcript_doc
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}

							});
						}
					})
				}else if(transcript_doc == 'extraDocument'){
					if(req.query.doc_id == null || req.query.doc_id == 'null' || req.query.doc_id == 'undefined' || req.query.doc_id == undefined){
						models.User_Transcript.findAll({
							where :{
								user_id : userId,
								type : 'extraDocument',source : 'guattestation' 

							},
							attributes: [[sequelize.fn('max', sequelize.col('name')),'name']],
						}).then(function(userTranscript){

							if(userTranscript[0].name != null){
								var nameArr = userTranscript[0].name.split(" ");
								var nextNumber = parseInt(nameArr[nameArr.length - 1]) + 1;
								models.User_Transcript.create({
									name: "Extra Document " + nextNumber,
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript : false,
									upload_step : "default"
									,source : 'guattestation' 
								}).then(function(addedNew){
									if (addedNew) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data : transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							}else{
								models.User_Transcript.create({
									name: "Extra Document 1",
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript : false,
									upload_step : "default",source : 'guattestation' 
								}).then(function(addedNew){
									if (addedNew) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data : transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							}
						})

					}else{
						models.User_Transcript.find({
							where:{
								id : req.query.doc_id,source : 'guattestation' 
							}
						}).then(function(userTranscript){
							userTranscript.update({
								file_name: imageLocationToCallClient,
							})
						})
					}
				}
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});

router.get('/checkCart',middlewares.getUserInfo,function(req,res){
	console.log('/checkCart');
	models.Cart.findAll({
		where:{
			user_id : req.User.id
		}
	}).then(function(cart){
		if(cart.length > 0){
			res.json({
				status : 200
			});
		}else{
			res.json({
				status : 400
			});
		}
	});
})

router.get('/checkapplications',middlewares.getUserInfo,function(req,res){
	console.log('/checkapplications');
	models.User.find({
		where:{
			email : req.User.email,
			user_type : 'student'
		}
	}).then(function(user){
		if(user){
			models.Application.findAll({
				where:{
					user_id : req.User.id,
					[Op.or]:[{
						source_from:'guattestation',
					 },
					 {
						source_from:'gumoi',
					 }]
				}
			}).then(function(uca){
				if(uca){
					if(uca.length > 0){
						res.json({
							status : 200
						})
					}else{
						res.json({
							status : 400
						})
					}
				}else{
					res.json({
						status : 400
					})
				}
			})
		}else{
			res.json({
				status : 400
			})
		}
	})
});


router.get('/downloadPaymentReceipt',middlewares.getUserInfo,function(req,res){
	console.log('/downloadPaymentReceipt');
	var appl_id = req.query.appl_id;
	var user_id = req.User.id;
	var filePath=constant.FILE_LOCATION+"public/upload/documents/"+user_id+'/'+appl_id+"_Attestation_Payment_Challan.pdf"
	var fee_amount;
	var gst_amount;
	var total_amount;
	try {
		if (fs.existsSync(path)) {
			res.download(filePath);
		}else{
			if(appl_id!="840"){
				models.Orders.find({
					where : {
						user_id : user_id,
						application_id : appl_id,
						[Op.or]:[{
										source:'guattestation',
									 },
									 {
										source:'gumoi',
									 }]
					}
				}).then((orderdata)=>{
					models.Transaction.find({
						where : {
							order_id : orderdata.id
						}
					}).then((transactiondata)=>{
						self_PDF.online_payment_challan(user_id, appl_id, transactiondata.amount, transactiondata.merchant_param5, transactiondata.created_at, transactiondata.order_status, fee_amount, gst_amount, total_amount, orderdata.id, req.User.email,function(err){
							if(err) {
								res.send({ status: 400,data :err})
							}else{
								setTimeout(function(){
									res.download(filePath);
								},3000);
							}
						});
					})
				})
			}else if(appl_id == "840"){
				models.Transaction.find({
					where : {
						tracking_id : "109865187451"
					}
				}).then((transactiondata)=>{
					self_PDF.online_payment_challan(user_id, appl_id, transactiondata.amount, transactiondata.merchant_param5, transactiondata.created_at, transactiondata.order_status, fee_amount, gst_amount, total_amount, transactiondata.order_id, req.User.email,function(err){
						if(err) {
							res.send({ status: 400,data :err})
						}else{
							setTimeout(function(){
								res.download(filePath);
							},3000);
						}
					});
				})
			}
		}
	} catch(err) {
		console.error(err)
	}
})



// NEW Starts
router.get('/getBoard', function (req, res) {
	console.log('/getBoard');
	models.Board_Details.getalldata().then(function(board_data){
		res.json({
			status: 200,
			data: board_data
		});
	})
})

router.post('/saveBoard', function (req, res) {
	console.log('/saveBoard');
    var view_data = {};
	models.User.find({
		where:{
			id : req.body.user_id
		}
	}).then(function(user){
	    models.Board_Details.find({
		    where:{
			    id : req.body.board_id
		    }
	    }).then(function(bd){
			user.update({
				board_id : req.body.board_id
			}).then(function(updated){
                if(updated){
					view_data.ssc_name = bd.sss_name ;
					view_data.hsc_name = bd.hsc_name ;
					view_data.board_name = bd.board_name ;
					res.json({
						status: 200,
						data: view_data
					});
                }else{
					view_data.ssc_name = '' ;
					view_data.hsc_name = '' ;
					view_data.board_name = '' ;
					res.json({
						status: 400,
						data: view_data
					});
				}
			})
	   })
    })
});

router.get('/getUserWiseBoard',middlewares.getUserInfo, function (req, res) {
	console.log('/getUserWiseBoard');
	var view_data = {};
	models.User.find({
		where:{
			id : req.User.id
		}
	}).then(function(user){
		if(user.board_id){
			models.Board_Details.find({
				where:{
					id : user.board_id
				}
			}).then(function(board_data){
				view_data.ssc_name = board_data.sss_name ;
				view_data.hsc_name = board_data.hsc_name ;
				view_data.board_id = board_data.id ;
				res.json({
					status: 200,
					data: view_data
				});
			})
		}else{
			res.json({
				status: 400,
				data: view_data
			});
		}
	})
})


router.post('/feedBack', middlewares.getUserInfo, function(req, res) {
	console.log('/feedBack');
	models.Feedback.find({
		where:{
			user_id : req.User.id
		}
	}).then(function(feedbackExists){
		if(feedbackExists){
			feedbackExists.update({
				website_satisfy: req.body.satisfy,
			    website_recommend: req.body.recommend,
		    	staff_satisfy: req.body.staff,
		    	experience_problem :req.body.experience,
		    	problem: req.body.exp_prob,
		    	suggestion: req.body.suggestion,
			}).then(function(feedbackRecorded){
				if(feedbackRecorded){
					res.json({
						status : 200
					})
				}else{
					res.json({
						status : 400
					})
				}
			})
		}else{
			models.Feedback.create({
				website_satisfy: req.body.satisfy,
			    website_recommend: req.body.recommend,
		    	staff_satisfy: req.body.staff,
		    	experience_problem :req.body.experience,
		    	problem: req.body.exp_prob,
		    	suggestion: req.body.suggestion,
		    	user_id : req.User.id,
				[Op.or]:[{
					source:'guattestation',
									 },
									 {
										source:'gumoi',
									 }]
			}).then(function(feedbackRecorded){
				if(feedbackRecorded){
					res.json({
						status : 200
					})
				}else{
					res.json({
						status : 400
					})
				}
			})
		}
	})
});

// NEW Ends
router.post('/addUserDegree',middlewares.getUserInfo,async function(req,res){
	var attestedFor = req.body.attestedFor;
	var bach_enroll = req.body.enroll.bachenroll_no_bach
	var mast_enroll = req.body.enroll.bachenroll_no_mast
	var phd_enroll = req.body.enroll.bachenroll_no_phd
	var getAttestedFor = await functions.getAttestedFor(req.User.id);
	if(getAttestedFor== null){
		models.Applied_For_Details.create({
			applying_for:req.body.degree,
			attestedfor : attestedFor,
			enrollment_number : {
				'bachelor' :  bach_enroll,
				'master' : mast_enroll,
				'phd' : phd_enroll
			},
			educationalDetails : true,
			user_id  : req.User.id,
			source : 'guattestation'
		}).then(function (created){
			res.json({
				status : 200,
				message : "updated"
			})
		})
	}else{
	models.Applied_For_Details.find({
		where : {
			user_id : req.User.id,
			app_id :{
				[Op.eq] : null
			},
			source : 'guattestation'
		}
	}).then(function(appliedForDetails){
		if(appliedForDetails){
			if(appliedForDetails.instructionalField == true){
				appliedForDetails.update({
					applying_for:req.body.degree,
					attestedfor : attestedFor,
					enrollment_number : {
						'bachelor' :  bach_enroll,
						'master' : mast_enroll,
						'phd' : phd_enroll
					},
					instructionalField : true
				}).then(function(updatedDetails){
					res.json({
						status : 200,
						message : "updated"
					})
				})
			}else{
				appliedForDetails.update({
					applying_for:req.body.degree,
					attestedfor : attestedFor,
					enrollment_number : {
						'bachelor' :  bach_enroll,
						'master' : mast_enroll,
						'phd' : phd_enroll
					},
					educationalDetails : true
				}).then(function(updatedDetails){
					res.json({
						status : 200,
						message : "updated"
					})
				})
			}
			
		}
	})
	}
});

router.post('/uploadMarkList',middlewares.getUserInfo,function(req,res){
	console.log('/uploadMarkList');
    var userId = req.User.id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.degreeName;
	var user_marklistid = req.query.user_marklistid

	var dir = constant.FILE_LOCATION + "public/upload/documents/" + userId;

	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
  	var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/documents/'+userId);
		},
		filename: function(req, file, callback) {
			callback(null, file.originalname);
			if(file.originalname.includes('&')){
				image = file.originalname.split('&').join('_');
			}else{
				image = file.originalname;
			}
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			if(file.originalname.includes('&')){
				file.originalname = file.originalname.split('&').join('_');
			}
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION +'public/upload/documents/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) {}
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				models.userMarkList.find({
					where:
					{
						id : user_marklistid,
						user_id: userId,
						type: transcript_doc,source : 'guattestation'
					}
				}).then(function(user_exists){
					if(user_exists){
						user_exists.update({
							name: transcript_name,
							user_id: userId,
							type: transcript_doc,
							collegeId : req.query.collegeId,
							faculty : req.query.faculty,
							patteren : req.query.patteren,
							file_name: imageLocationToCallClient,
							lock_marklist : false,
							upload_step : "changed"
						}).then(function (userTranscript) {
							if (userTranscript) {
								return res.json({
									status: 200,
									message: `Upload Completed.`,
									data : userTranscript
								});
							} else {
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}

						});
					}else{
						models.userMarkList.create({
							name: transcript_name,
							user_id: userId,
							type: transcript_doc,
							collegeId : req.query.collegeId,
							faculty : req.query.faculty,
							patteren : req.query.patteren,
							file_name: imageLocationToCallClient,
							lock_marklist : false,
							upload_step : "default"
							,source : 'guattestation'
						}).then(function (userTranscript) {
							if (userTranscript) {
								return res.json({
									status: 200,
									message: `Upload Completed.`,
									data : userTranscript
								});
							} else {
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}
						});
					}
				})
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}
		}
	});
});

router.post('/uploadUserMarkList',middlewares.getUserInfo,async function(req,res){
	console.log('/uploadUserMarkList');
    var userId = req.User.id;
	var image;
	var transcript_name = req.query.transcript_name;
	var education_type = req.query.education_type;
	var user_marklistid = req.query.user_marklistid;
	var app_id = (req.query.app_id) ? req.query.app_id : null;
	var fileStatus= false;
	var doc_id = req.query.doc_id;
	var ext;
	var dir = constant.FILE_LOCATION + "public/upload/documents/" + userId;
	var applieddata =  await functions.FetchPreviousData_notpaidApplied(userId);
	if(applieddata.previous_data.Type == 'SameType'){
		var updateDifferent =  await functions.updataed_previousApplied(userId,applieddata.previous_data.app_id,applieddata.previous_data.previousdata)
	}
	var user = await functions.getuserdetail(userId);
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
  	var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/documents/'+userId);
		},
		filename: function(req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10,'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION +'public/upload/documents/' + userId + '/' + image, (err, pdfBuffer) => {
			//	fs.readFile(constant.FILE_LOCATION +'public\\upload\\marklist\\' + userId + '\\' + image, (err, pdfBuffer) => {
					new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) {}
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				models.UserMarklist_Upload.findAll({
					where :{
						user_id: userId,source : 'guattestation'
					}
				}).then(async(datam)=>{
					if(datam.length > 0){
						datam.forEach(function(marklistData){
							if(marklistData){
								if(marklistData.file_name == imageLocationToCallClient){
									fileStatus=true;
								}
							}
						})
					}
                    if(fileStatus==true){
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					}else{
						if(doc_id != undefined && doc_id != null && doc_id != ''){
						let userTranscriptupload = await functions.Transcriptupload(userId,app_id);
						let applicantmarsheet = await functions.applicantmarksheets(userId)
							models.UserMarklist_Upload.find({
								where :{
									id : doc_id,source : 'guattestation'
								}
							}).then(function(marksheetUpload){
								marksheetUpload.update({
									file_name: imageLocationToCallClient,
									lock_transcript : false,
									upload_step : 'changed'
								}).then(function(updatedMarksheetUpload){
									if (updatedMarksheetUpload) {
										if(userTranscriptupload == null && applicantmarsheet == null){
										     models.Application.update(
											{status  : 'changed'},
											{where:
												{id  : app_id}
											}).then((err,updated)=>{
												if(err){
													console.error(err);
												}
												request.post(constant.BASE_URL_SENDGRID + 'applicationStatus', {
													json: {
														email : user.email,
														name : user.name + ' ' + user.surname,
														app_id : app_id,
														statusType : 'changed',
														mobile : user.mobile,
														mobile_country_code : user.mobile_country_code,
														source : 'gu',
													}
												}, function (error, response, body) {
													if(error) {
													}else{
													}
												})
											})
										}
										var desc = "Student has re-uplaoded the document named "+ marksheetUpload.name;
												var activity = "Re-upload Document";
												  functions.activitylog(req.User.id, activity, desc, '');
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : updatedMarksheetUpload
												});										
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							})
						}else{
							if(app_id == null){
								models.UserMarklist_Upload.create({
									name: transcript_name,
									user_id: userId,
									user_marklist_id:req.query.user_marklistid,
									education_type: education_type,
									file_name: imageLocationToCallClient,
									lock_transcript : false,
									upload_step : "default"
									,source : 'guattestation'
								}).then(function (userMarklist) {
									if (userMarklist) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data : userMarklist
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							}else{
								models.UserMarklist_Upload.create({
									name: transcript_name,
									user_id: userId,
									user_marklist_id:req.query.user_marklistid,
									education_type: education_type,
									file_name: imageLocationToCallClient,
									lock_transcript : false,
									upload_step : "changed",
									app_id : app_id,source : 'guattestation'
								}).then(function (userMarklist) {
									if (userMarklist) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data : userMarklist
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							}
						}

					}
				})
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + userId + '/' + image, function (err) {
				//fs.unlink(constant.FILE_LOCATION + 'public\\upload\\marklist\\' + userId + '\\' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}
		}
	});
});

router.post('/upload_transcript',async function(req,res){
	console.log('/upload_transcript>>>>' + req.query.app_id);
    var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/documents/" + userId;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id;
	var ext;
	var provisional;
	var degree_type = req.query.degree_type;
	var degreeValue = req.query.degreeValue;

	var user = await functions.getuserdetail(userId);

	if(applieddata.previous_data.Type == 'SameType'){
		var updateDifferent =  await functions.updataed_previousApplied(userId,applieddata.previous_data.app_id,applieddata.previous_data.previousdata)
	}
	if(degreeValue){
		if(degreeValue == 'Provisional Degree'){
			provisional = true
		}else{
			provisional = false
		}
	}else{
		provisional = false
	}
	
	let Appliedfor = functions.getAttestationFor(userId);
    if(Appliedfor.instructionalField == true || Appliedfor.instructionalField == 1){
        source = 'gumoi'
    }else{
        source = 'guattestation'
    }
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
  	var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/documents/'+userId);
		},
		filename: function(req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10,'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);

		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION +'public/upload/documents/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) {}
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			console.log('uploadValueuploadValueuploadValue' + uploadValue)
			console.log('transcript_name' + transcript_name)
			if (uploadValue == true) {
			
				if(transcript_name != 'Aadhar Card' && transcript_name !='Bonafied'){
					var fileStatus = false;
					models.User_Transcript.findAll({
						where :{
							user_id: userId,source : 'guattestation' 
						}
					}).then(async(datam)=>{
						if(datam.length > 0){
							datam.forEach(function(marklistData){
								if(marklistData){
									if(marklistData.file_name == imageLocationToCallClient){
										fileStatus=true;
									}
								}
							})
						}
						if(fileStatus==true){
							res.json({
								status: 200,
								message: `File already exist. please upload another file!!!..`,
							})
						}else{
							if(doc_id != undefined && doc_id != null && doc_id != ''){
								let Marklistupload = await functions.usersMarklistupload(userId,app_id);
								let applicantmarsheet = await functions.applicantmarksheets(userId);
								models.User_Transcript.find({
									where :{
										id : doc_id,source : 'guattestation' 
									}
								}).then(function(transcriptUpload){
									transcriptUpload.update({
										file_name: imageLocationToCallClient,
										lock_transcript : false,
										upload_step : 'changed',
										provisional : provisional
									}).then(function(updatedtranscriptUpload){
										if (updatedtranscriptUpload) {
											if(Marklistupload == null  && applicantmarsheet == null ){
											models.Application.update(
												{status  : 'changed'},
												{where:
													{id  : app_id}
												}).then((err,updated)=>{
													if(err){
														console.error(err);
													}

												})
												
												request.post(constant.BASE_URL_SENDGRID + 'applicationStatus', {
													json: {
														email : user.email,
														name : user.name + ' ' + user.surname,
														app_id : app_id,
														statusType : 'changed',
														mobile : user.mobile,
														mobile_country_code : user.mobile_country_code,
														source : 'gu',
													}
												}, function (error, response, body) {
													if(error) {
													}else{
													}
												})
											}
											var desc = "Student has re-uplaoded the document named "+ transcriptUpload.name;
													var activity = "Re-upload Document";
													  functions.activitylog(userId, activity, desc, '');
													return res.json({
														status: 200,
														message: `Upload Completed.`,
														data : updatedtranscriptUpload
													});
										
										} else {
											return res.json({
												status: 400,
												message: `Error occured in uploading document.`
											});
										}
									})
								})
							}else{
								if(app_id == null || app_id == '' || app_id == undefined){
									models.User_Transcript.create({
										name: transcript_name,
										user_id: userId,
										type: transcript_doc,
										file_name: imageLocationToCallClient,
										lock_transcript : false,
										collegeId : req.query.clgId,
										provisional : provisional
										,source : 'guattestation' 
									}).then(function (userTranscript) {
										if (userTranscript) {
											return res.json({
												status: 200,
												message: `Upload Completed.`,
												data : transcript_doc
											});
										} else {
											return res.json({
												status: 400,
												message: `Error occured in uploading document.`
											});
										}

									});
								}else{
									models.User_Transcript.create({
										name: transcript_name,
										user_id: userId,
										type: transcript_doc,
										file_name: imageLocationToCallClient,
										lock_transcript : false,
										collegeId : req.query.clgId,
										upload_step : "changed",
										app_id : app_id,
										provisional : provisional,source : 'guattestation' 
									}).then(async function (userTranscript) {
										if (userTranscript) {
											previous_Data = await functions.previous_Data(userId)
											if(previous_Data.previous_data.Type == 'SameType'){
												updatedapplied_details = await functions.updataed_previousApplied(userId,app_id,'DifferentType');
											}
											
											return res.json({
												status: 200,
												message: `Upload Completed.`,
												data : transcript_doc
											});
										} else {
											return res.json({
												status: 400,
												message: `Error occured in uploading document.`
											});
										}

									});
								}
							}
						}
					})
				}else{
				
					if(transcript_name == 'Aadhar Card'){
						var fileStatus = false;
						models.Applicant_Marksheet.findAll({
							where :{
								user_id: userId,
								name : 'Aadhar Card'
					 		}
						}).then(async(datam)=>{
							if(datam.length > 0){
								datam.forEach(function(marklistData){
									if(marklistData){
										if(marklistData.file_name == imageLocationToCallClient){
											fileStatus=true;
										}
									}
								})
							}
							if(fileStatus==true){
								res.json({
									status: 200,
									message: `File already exist. please upload another file!!!..`,
								})
							}else{
								console.log('doc_iddoc_iddoc_iddoc_iddoc_id' +doc_id);
								if(doc_id != undefined && doc_id != null && doc_id != ''){
									let Marklistupload = await functions.usersMarklistupload(userId,app_id);
									let userTranscriptupload = await functions.Transcriptupload(userId,app_id);
									console.log("Marklistupload",Marklistupload);
									models.Applicant_Marksheet.find({
										where :{
											id : doc_id
										}
									}).then(function(transcriptUpload){
										transcriptUpload.update({
											file_name: imageLocationToCallClient,
											lock_transcript : false,
											upload_step : 'changed',
											provisional : provisional
										}).then(function(updatedtranscriptUpload){
											
											if (updatedtranscriptUpload) {
										   if(Marklistupload == null  && userTranscriptupload == null ){
												models.Application.update(
													{status  : 'changed'},
													{where:
														{id  : app_id}
													}).then((err,updated)=>{
														if(err){
															console.error(err);
														}
														request.post(constant.BASE_URL_SENDGRID + 'applicationStatus', {
															json: {
																email : user.email,
																name : user.name + ' ' + user.surname,
																app_id : app_id,
																statusType : 'changed',
																mobile : user.mobile,
																mobile_country_code : user.mobile_country_code,
																source : 'gu',
															}
														}, function (error, response, body) {
															if(error) {
															}else{
															}
														})	
														
													})
												}
												var desc = "Student has re-uplaoded the document named "+ transcriptUpload.name;
												var activity = "Re-upload Document";
												  functions.activitylog(userId, activity, desc, '');
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : updatedtranscriptUpload
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}
										})
									})
								}else{
									if(app_id == null || app_id == '' || app_id == undefined){
										models.Applicant_Marksheet.create({
											name: transcript_name,
											user_id: userId,
											type: transcript_doc,
											file_name: imageLocationToCallClient,
											lock_transcript : false,
											collegeId : req.query.clgId,
											source : source
										}).then(function (userTranscript) {
											if (userTranscript) {
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : transcript_doc
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}
	
										});
									}else{
										models.Applicant_Marksheet.create({
											name: transcript_name,
											user_id: userId,
											type: transcript_doc,
											file_name: imageLocationToCallClient,
											lock_transcript : false,
											collegeId : req.query.clgId,
											upload_step : "changed",
											app_id : app_id,
											source : source
										}).then(function (userTranscript) {
											if (userTranscript) {
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : transcript_doc
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}
	
										});
									}
								}
							}
						})
					}else{
						var fileStatus = false;
						models.Applicant_Marksheet.findAll({
							where :{
								user_id: userId,
								name : 'Bonafied'
					 }
						}).then(async(datam)=>{
							if(datam.length > 0){
								datam.forEach(function(marklistData){
									if(marklistData){
										if(marklistData.file_name == imageLocationToCallClient){
											fileStatus=true;
										}
									}
								})
							}
							if(fileStatus==true){
								res.json({
									status: 200,
									message: `File already exist. please upload another file!!!..`,
								})
							}else{
								if(doc_id != undefined && doc_id != null && doc_id != ''){
									let Marklistupload = await functions.usersMarklistupload(userId,app_id);
									let userTranscriptupload = await functions.Transcriptupload(userId,app_id);
									models.Applicant_Marksheet.find({
										where :{
											id : doc_id
										}
									}).then(function(transcriptUpload){
										transcriptUpload.update({
											file_name: imageLocationToCallClient,
											lock_transcript : false,
											upload_step : 'changed',
											provisional : provisional
										}).then(function(updatedtranscriptUpload){
											if (updatedtranscriptUpload) {
												if(Marklistupload == null  && userTranscriptupload == null){
												models.Application.update(
													{status  : 'changed'},
													{where:
														{id  : app_id}
													}).then((err,updated)=>{
														if(err){
															console.error(err);
														}
														request.post(constant.BASE_URL_SENDGRID + 'applicationStatus', {
															json: {
																email : user.email,
																name : user.name + ' ' + user.surname,
																app_id : app_id,
																statusType : 'changed',
																mobile : user.mobile,
																mobile_country_code : user.mobile_country_code,
																source : 'gu',
															}
														}, function (error, response, body) {
															if(error) {
															}else{
															}
														})
													})
											}
													var desc = "Student has re-uplaoded the document named "+ transcriptUpload.name;
													var activity = "Re-upload Document";
													  functions.activitylog(userId, activity, desc, '');
													return res.json({
														status: 200,
														message: `Upload Completed.`,
														data : updatedtranscriptUpload
													});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}
										})
									})
								}else{
									if(app_id == null || app_id == '' || app_id == undefined){
										models.Applicant_Marksheet.create({
											name: transcript_name,
											user_id: userId,
											type: transcript_doc,
											file_name: imageLocationToCallClient,
											lock_transcript : false,
											collegeId : req.query.clgId,
											source : source,
											applied_for_degree:degree_type
										}).then(function (userTranscript) {
											if (userTranscript) {
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : transcript_doc
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}
	
										});
									}else{
										models.Applicant_Marksheet.create({
											name: transcript_name,
											user_id: userId,
											type: transcript_doc,
											file_name: imageLocationToCallClient,
											lock_transcript : false,
											collegeId : req.query.clgId,
											upload_step : "changed",
											app_id : app_id,
											source : source,
											applied_for_degree:degree_type
										}).then(function (userTranscript) {
											if (userTranscript) {
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : transcript_doc
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}
	
										});
									}
								}
							}
						})
					}
				}
						
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});
router.post('/upload_letterforNameChange',middlewares.getUserInfo,function(req,res){
	console.log('/upload_letterforNameChange-------------------',req.User.app_id);
    var userId = req.User.id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/NameChangeLetter/" + userId;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id_namechange;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
  	var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/NameChangeLetter/'+userId);
		},
		filename: function(req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10,'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION +'public/upload/NameChangeLetter/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) {}
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {

				// models.User_Transcript.find({
				// 	where:
				// 	{
				// 		user_id: userId,
				// 		type: transcript_doc,
				// 		collegeId : req.query.clgId
				// 	}
				// }).then(function(user_exists){
				// 	if(user_exists){
				// 		user_exists.update({
				// 			name: transcript_name,
				// 			user_id: userId,
				// 			type: transcript_doc,
				// 			file_name: imageLocationToCallClient,
				// 			lock_transcript : false,
				// 			collegeId : req.query.clgId
				// 		}).then(function(transcript_updated){
				// 			if(transcript_updated){
				// 				return res.json({
				// 					status: 200,
				// 					message: `Upload Completed.`,
				// 					data : transcript_doc
				// 				});
				// 			}else{
				// 				return res.json({
				// 					status: 400,
				// 					message: `Error occured in uploading document.`
				// 				});
				// 			}
				// 		})
				// 	}else{

						var fileStatus = false;
						models.Letterfor_NameChange.find({
							where :{
								user_id: userId,
							}
						}).then((datam)=>{

							if(datam.length > 0){
								datam.forEach(function(marklistData){
									if(marklistData){
										if(marklistData.file_name == imageLocationToCallClient){
											fileStatus=true;
										}
									}
								})
							}
							if(fileStatus==true){
								res.json({
									status: 200,
									message: `File already exist. please upload another file!!!..`,
								})
							}else{
								console.log('in else');
										models.Letterfor_NameChange.find({
											where :{
													user_id : userId
											}

										}).then(function (userTranscript) {

											if(userTranscript){
												userTranscript.update({
													file_name: imageLocationToCallClient,
													name  : 'Passport'
												})
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : transcript_doc
												});
											}

											else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}

										});


							}
						})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/NameChangeLetter/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});
// router.post('/upload_CompetencyLetter',function(req,res){
// 	console.log('/upload_CompetencyLetter',req.query.hiddentype);
//     var userId = req.query.user_id;
// 	var image;
// 	var transcript_name = req.query.transcript_name;
// 	var transcript_doc = req.query.hiddentype;
// 	var dir = constant.FILE_LOCATION + "public/upload/CompetencyLetter/" + userId;
// 	var doc_id = req.query.doc_id;
// 	var app_id = req.query.app_id;
// 	var filename;
// 	var filePath;
// 	var uploadedFile = [];
// 	var datademo = [];
// 	if (!fs.existsSync(dir)) {
// 		fs.mkdirSync(dir);
// 	}

// 		const s3 = new AWS.S3({
// 			endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 			accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 			secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 			s3BucketEndpoint: true,
// 		});

// 		const file = req.files.file
// 		const { name, mimetype, size, data } = file
// 		const fileContent  = Buffer.from(data, ' ');
// 		s3.putObject({
// 			Body: fileContent, // The actual file content
// 			Bucket: "muattestation",
// 			Key: name, // The name of the file,
// 		}, function(err, data) {
// 			if (err) {
// 				res.json({status :500})
// 			} else {
// 				uploadedFile = data.ETag
// 				s3.listObjectsV2({
// 					Bucket: "muattestation",

// 				}, function (err, data) {
// 					if (err) {
// 						res.json({status :500})
// 					} else {
// 						datademo = data.Contents
// 						datademo.forEach(function (de){

// 							if(de.ETag.includes(uploadedFile)){
// 								filename =de.ETag
// 								imageLocationToCallClient = JSON.parse(filename)

// 								if(doc_id != undefined && doc_id != null && doc_id != ''){
// 									models.competency_letter.find({
// 										where :{
// 											id : doc_id
// 										}
// 									}).then(function(transcriptUpload){
// 										transcriptUpload.update({
// 											file_name: imageLocationToCallClient,
// 											lock_transcript : false,
// 											upload_step : 'changed'
// 										}).then(function(updatedtranscriptUpload){
// 											if (updatedtranscriptUpload) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : updatedtranscriptUpload
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}
// 										})
// 									})
// 								}else{
// 									if(app_id == null || app_id == '' || app_id == undefined){
// 										models.competency_letter.create({
// 											name: transcript_name,
// 											user_id: userId,
// 											type: transcript_doc,
// 											file_name: imageLocationToCallClient,
// 											lock_transcript : false,
// 											collegeId : req.query.clgId
// 										}).then(function (userTranscript) {
// 											if (userTranscript) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : transcript_doc
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}

// 										});
// 									}else{
// 										models.competency_letter.create({
// 											name: transcript_name,
// 											user_id: userId,
// 											type: transcript_doc,
// 											file_name: imageLocationToCallClient,
// 											lock_transcript : false,
// 											collegeId : req.query.clgId,
// 											upload_step : "changed",
// 											app_id : app_id
// 										}).then(function (userTranscript) {
// 											if (userTranscript) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : transcript_doc
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}

// 										});
// 									}
// 								}

// 							}
// 						})
// 						// res.json({status :200,
// 						//     data : data.Contents})
// 					}
// 				})
// 			}
// 		});
// });
router.post('/upload_CompetencyLetter',function(req,res){
	console.log('/upload_CompetencyLetter',req.query.hiddentype);
    var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/CompetencyLetter/" + userId;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
  	var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/CompetencyLetter/'+userId);
		},
		filename: function(req, file, callback) {
			callback(null, file.originalname);
			// if(file.originalname.includes('&')){
			// 	image = file.originalname.split('&').join('_');
			// }else{
			// 	image = file.originalname;
			// }

			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
			var flag = false;
			for(var i = 0; i < format.length;i++){
				if(file.originalname.indexOf(format[i]) > -1){
					flag = true;
					image = file.originalname.split(format[i]).join('_');
				}
			}
			if(flag == false){
				image = file.originalname
			}
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			// if(file.originalname.includes('&')){
			// 	file.originalname = file.originalname.split('&').join('_');
			// }

			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
			var flag = false;
			for(var i = 0; i < format.length;i++){
				if(file.originalname.indexOf(format[i]) > -1){
					flag = true;
					file.originalname = file.originalname.split(format[i]).join('_');
				}
			}
			if(flag == false){
				file.originalname = file.originalname
			}

			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION +'public/upload/CompetencyLetter/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) {}
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				// models.User_Transcript.find({
				// 	where:
				// 	{
				// 		user_id: userId,
				// 		type: transcript_doc,
				// 		collegeId : req.query.clgId
				// 	}
				// }).then(function(user_exists){
				// 	if(user_exists){
				// 		user_exists.update({
				// 			name: transcript_name,
				// 			user_id: userId,
				// 			type: transcript_doc,
				// 			file_name: imageLocationToCallClient,
				// 			lock_transcript : false,
				// 			collegeId : req.query.clgId
				// 		}).then(function(transcript_updated){
				// 			if(transcript_updated){
				// 				return res.json({
				// 					status: 200,
				// 					message: `Upload Completed.`,
				// 					data : transcript_doc
				// 				});
				// 			}else{
				// 				return res.json({
				// 					status: 400,
				// 					message: `Error occured in uploading document.`
				// 				});
				// 			}
				// 		})
				// 	}else{

						var fileStatus = false;
						models.competency_letter.findAll({
							where :{
								user_id: userId,
							}
						}).then((datam)=>{
							if(datam.length > 0){
								datam.forEach(function(marklistData){
									if(marklistData){
										if(marklistData.file_name == imageLocationToCallClient){
											fileStatus=true;
										}
									}
								})
							}
							if(fileStatus==true){
								res.json({
									status: 200,
									message: `File already exist. please upload another file!!!..`,
								})
							}else{
								if(doc_id != undefined && doc_id != null && doc_id != ''){
									models.competency_letter.find({
										where :{
											id : doc_id
										}
									}).then(function(transcriptUpload){
										transcriptUpload.update({
											file_name: imageLocationToCallClient,
											lock_transcript : false,
											upload_step : 'changed'
										}).then(function(updatedtranscriptUpload){
											if (updatedtranscriptUpload) {
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : updatedtranscriptUpload
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}
										})
									})
								}else{
									if(app_id == null || app_id == '' || app_id == undefined){
										models.competency_letter.create({
											name: transcript_name,
											user_id: userId,
											type: transcript_doc,
											file_name: imageLocationToCallClient,
											lock_transcript : false,
											collegeId : req.query.clgId
										}).then(function (userTranscript) {
											if (userTranscript) {
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : transcript_doc
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}

										});
									}else{
										models.competency_letter.create({
											name: transcript_name,
											user_id: userId,
											type: transcript_doc,
											file_name: imageLocationToCallClient,
											lock_transcript : false,
											collegeId : req.query.clgId,
											upload_step : "changed",
											app_id : app_id
										}).then(function (userTranscript) {
											if (userTranscript) {
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : transcript_doc
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}

										});
									}
								}
							}
						})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/CompetencyLetter/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});
// router.post('/Upload_PaymentIssueUrl',middlewares.getUserInfo,function(req,res){
// 	console.log('/Upload_PaymentIssueUrl');
//     var userId = req.query.user_id;
// 	var image;
// 	var transcript_name = req.query.transcript_name;
// 	var transcript_doc = req.query.hiddentype;
// 	var dir = constant.FILE_LOCATION + "public/upload/Payment_Acknowledgement/" + userId;
// 	var doc_id = req.query.doc_id;
// 	var app_id = req.query.app_id;
// 	if (!fs.existsSync(dir)) {
// 		fs.mkdirSync(dir);
// 	}
//   	var storage = multer.diskStorage({
// 		destination: function(req, file, callback) {
// 			callback(null, constant.FILE_LOCATION+'public/upload/Payment_Acknowledgement/'+userId);
// 		},
// 		filename: function(req, file, callback) {
// 			callback(null, file.originalname);
// 			// if(file.originalname.includes('&')){
// 			// 	image = file.originalname.split('&').join('_');
// 			// }else{
// 			// 	image = file.originalname;
// 			// }

// 			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
// 			var flag = false;
// 			for(var i = 0; i < format.length;i++){
// 				if(file.originalname.indexOf(format[i]) > -1){
// 					flag = true;
// 					image = file.originalname.split(format[i]).join('_');
// 				}
// 			}
// 			if(flag == false){
// 				image = file.originalname
// 			}
// 		}
// 	});

// 	var upload = multer({
// 		storage: storage,
// 		fileFilter: function (req, file, callback) {
// 			// if(file.originalname.includes('&')){
// 			// 	file.originalname = file.originalname.split('&').join('_');
// 			// }

// 			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
// 			var flag = false;
// 			for(var i = 0; i < format.length;i++){
// 				if(file.originalname.indexOf(format[i]) > -1){
// 					flag = true;
// 					file.originalname = file.originalname.split(format[i]).join('_');
// 				}
// 			}
// 			if(flag == false){
// 				file.originalname = file.originalname
// 			}

// 			ext = path.extname(file.originalname)
// 			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
// 				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
// 			}
// 			callback(null, true)
// 		}
// 	}).single('file');
// 	upload(req, res, function (err, data) {
// 		imageLocationToCallClient = image;
// 		fileName = imageLocationToCallClient
// 		if (ext == '.pdf') {
// 			fs.readFile(constant.FILE_LOCATION +'public/upload/Payment_Acknowledgement/' + userId + '/' + image, (err, pdfBuffer) => {
// 				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
// 					if (err) {
// 						uploadValue = false;
// 						ValueUpdateData(uploadValue);
// 					} else if (!item) {
// 						uploadValue = true;
// 						ValueUpdateData(uploadValue);
// 					} else if (item.text) {}
// 				});
// 			});
// 		} else {
// 			uploadValue = true;
// 			ValueUpdateData(uploadValue);
// 		}
// 		function ValueUpdateData(uploadValue) {
// 			if (uploadValue == true) {
// 						var fileStatus = false;
// 						models.paymenterror_details.findAll({
// 							where :{
// 								user_id: userId,
// 							}
// 						}).then((datam)=>{
// 							if(datam.length > 0){
// 								datam.forEach(function(marklistData){
// 									if(marklistData){
// 										if(marklistData.file_name == imageLocationToCallClient){
// 											fileStatus=true;
// 										}
// 									}
// 								})
// 							}
// 							if(fileStatus==true){
// 								res.json({
// 									status: 200,
// 									message: `File already exist. please upload another file!!!..`,
// 								})
// 							}else{
// 								if(datam != undefined && datam != null && datam != ''){
// 									models.paymenterror_details.find({
// 										where :{
// 											user_id : userId
// 										}
// 									}).then(function(transcriptUpload){
// 										transcriptUpload.update({
// 											file_name: imageLocationToCallClient,
// 											// lock_transcript : false,
// 											// upload_step : 'changed'
// 										}).then(function(updatedtranscriptUpload){
// 											if (updatedtranscriptUpload) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : updatedtranscriptUpload
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}
// 										})
// 									})
// 								}else{

// 										models.paymenterror_details.create({
// 											name: transcript_name,
// 											user_id: userId,
// 											// type: transcript_doc,
// 											file_name: imageLocationToCallClient,
// 											// lock_transcript : false,
// 											// collegeId : req.query.clgId,
// 											// upload_step : "changed",
// 											// app_id : app_id
// 										}).then(function (userTranscript) {
// 											if (userTranscript) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : transcript_doc
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}

// 										});

// 								}
// 							}
// 						})
// 				// 	}
// 				// })
// 			} else if (uploadValue == false) {
// 				fs.unlink(constant.FILE_LOCATION + 'public/upload/Payment_Acknowledgement/' + userId + '/' + image, function (err) {
// 					if (err) {
// 						return res.json({
// 							status: 400,
// 							message: `Error occured in uploading document.`
// 						});
// 					} else {
// 						return res.json({
// 							status: 401,
// 							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
// 						});
// 					}
// 				});
// 			}

// 		}

// 	});
// });

router.post('/Upload_PaymentIssueUrl',middlewares.getUserInfo,function(req,res){
	console.log('/Upload_PaymentIssueUrl');
    var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var order_id = req.query.order_id;
	var dir = constant.FILE_LOCATION + "public/upload/Payment_Acknowledgement/" + userId;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
  	var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/Payment_Acknowledgement/'+userId);
		},
		filename: function(req, file, callback) {
			callback(null, file.originalname);
			// if(file.originalname.includes('&')){
			// 	image = file.originalname.split('&').join('_');
			// }else{
			// 	image = file.originalname;
			// }

			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
			var flag = false;
			for(var i = 0; i < format.length;i++){
				if(file.originalname.indexOf(format[i]) > -1){
					flag = true;
					image = file.originalname.split(format[i]).join('_');
				}
			}
			if(flag == false){
				image = file.originalname
			}
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			// if(file.originalname.includes('&')){
			// 	file.originalname = file.originalname.split('&').join('_');
			// }

			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
			var flag = false;
			for(var i = 0; i < format.length;i++){
				if(file.originalname.indexOf(format[i]) > -1){
					flag = true;
					file.originalname = file.originalname.split(format[i]).join('_');
				}
			}
			if(flag == false){
				file.originalname = file.originalname
			}

			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		fileName = imageLocationToCallClient
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION +'public/upload/Payment_Acknowledgement/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) {}
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}
		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
						var fileStatus = false;
						models.paymenterror_details.findAll({
							where :{
								user_id: userId,
							}
						}).then((datam)=>{
							if(datam.length > 0){
								datam.forEach(function(marklistData){
									if(marklistData){
										if(marklistData.file_name == imageLocationToCallClient){
											fileStatus=true;
										}
									}
								})
							}
							if(fileStatus==true){
								res.json({
									status: 200,
									message: `File already exist. please upload another file!!!..`,
								})
							}else{
								if(datam != undefined && datam != null && datam != ''){
									models.paymenterror_details.find({
										where :{
											user_id : userId
										}
									}).then(function(transcriptUpload){
										transcriptUpload.update({
											file_name: imageLocationToCallClient,
											[Op.or]:[{
												source:'guattestation',
									 },
									 {
										source:'gumoi',
									 }]
											// lock_transcript : false,
											// upload_step : 'changed'
										}).then(function(updatedtranscriptUpload){
											if (updatedtranscriptUpload) {
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : updatedtranscriptUpload
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}
										})
									})
								}else{

										models.paymenterror_details.create({
											name: transcript_name,
											user_id: userId,
											file_name: imageLocationToCallClient,
											order_id  :order_id,
											[Op.or]:[{
												source:'guattestation',
									 },
									 {
										source:'gumoi',
									 }]
											// lock_transcript : false,
											// collegeId : req.query.clgId,
											// upload_step : "changed",
											// app_id : app_id
										}).then(function (userTranscript) {
											if (userTranscript) {
												return res.json({
													status: 200,
													message: `Upload Completed.`,
													data : transcript_doc
												});
											} else {
												return res.json({
													status: 400,
													message: `Error occured in uploading document.`
												});
											}

										});

								}
							}
						})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/Payment_Acknowledgement/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}

	});
});
router.get('/getUploadUserMarklist',middlewares.getUserInfo,function(req,res){
	console.log('/getUploadUserMarklist');
	var view_data={
		annual_bachelors_firstYear:[],
		annual_bachelors_secondYear:[],
		annual_bachelors_thirdYear:[],
		annual_bachelors_fourthYear:[],
		annual_bachelors_fifthYear:[],

		annual_masters_firstYear:[],
		annual_masters_secondYear:[],
		annual_masters_thirdYear:[],
		annual_masters_fourthYear:[],
		annual_masters_fifthYear:[],

		annual_phd_firstYear:[],
		annual_phd_secondYear:[],
		annual_phd_thirdYear:[],
		annual_phd_fourthYear:[],
		annual_phd_fifthYear:[],

		annual_bachelors_semesterFirst:[],
		annual_bachelors_semesterSecond:[],
		annual_bachelors_semesterThird:[],
		annual_bachelors_semesterFourth:[],
		annual_bachelors_semesterFifth:[],
		annual_bachelors_semesterSixth:[],
		annual_bachelors_semesterSeventh:[],
		annual_bachelors_semesterEight:[],
		annual_bachelors_semesterNine:[],
		annual_bachelors_semesterTen:[],

		annual_masters_semesterFirst:[],
		annual_masters_semesterSecond:[],
		annual_masters_semesterThird:[],
		annual_masters_semesterFourth:[],
		annual_masters_semesterFifth:[],
		annual_masters_semesterSixth:[],
		annual_masters_semesterSeventh:[],
		annual_masters_semesterEight:[],
		annual_masters_semesterNine:[],
		annual_masters_semesterTen:[],

		annual_phd_semesterFirst:[],
		annual_phd_semesterSecond:[],
		annual_phd_semesterThird:[],
		annual_phd_semesterFourth:[],
		annual_phd_semesterFifth:[],
		annual_phd_semesterSixth:[],
		annual_phd_semesterSeventh:[],
		annual_phd_semesterEight:[],
		annual_phd_semesterNine:[],
		annual_phd_semesterTen:[],
	}
	var view_data2={
		education:[]
	};
	var outercounter = 0;

	models.User.find({
		where:{
			id:req.User.id
		}
	}).then(function(users){
		if(users){
			var education=users.applying_for;
			var education1=education.split(',')
			var finalEducation=education1[0]
			view_data2.education.push({
				education:finalEducation
			});
			models.userMarkList.findAll({
				where:{
					user_id:req.User.id,source : 'guattestation'
				}
			}).then(function(marklist){
				if(marklist.length>0){
					marklist.forEach(function(markAllList){
			 			if(markAllList.patteren=="Annual" && markAllList.type=="Bachelors" && markAllList.name=="First Year"){
				 			models.userMarkList.findAll({
					 			where:{
									user_id:req.User.id,
									name:'First Year',
									type:'Bachelors',
									patteren:'Annual',source : 'guattestation'
								}
							}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){


									view_data.annual_bachelors_firstYear.push({
									patterenName:allBachmarklistData.name,
									patteren:allBachmarklistData.patteren,
									faculty:allBachmarklistData.faculty,
									file_name:allBachmarklistData.file_name,
									type:allBachmarklistData.type,
									lock_marklist:allBachmarklistData.lock_marklist,
									college_name:collegeData.name,
									collegeId:allBachmarklistData.collegeId,
									facultyYear:facultyYearData.year

									});
								})
								});

								});
				 			})
			 			} else if(markAllList.patteren=="Annual" && markAllList.type=="Bachelors" && markAllList.name=="Second Year"){
							models.userMarkList.findAll({
								where:{
									user_id:req.User.id,
									name:"Second Year",
									type:"Bachelors",
									patteren:"Annual",source : 'guattestation'

								}
							}).then(function(marklistData){
									marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){
										view_data.annual_bachelors_secondYear.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year

										});
									});
									});

									});
							})
						}else if(markAllList.patteren=="Annual" && markAllList.type=="Bachelors" && markAllList.name=="Third Year"){
							models.userMarkList.findAll({
								where:{
									user_id:req.User.id,
									name:"Third Year",
									type:"Bachelors",
									patteren:"Annual",source : 'guattestation'

								}
							}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){
										view_data.annual_bachelors_thirdYear.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year

										});
									});
									});
								});
							})
	     				}else if(markAllList.patteren=="Annual" && markAllList.type=="Bachelors" && markAllList.name=="Fourth Year"){
							models.userMarkList.findAll({
								where:{
									user_id:req.User.id,
									name:"Fourth Year",
									type:"Bachelors",
									patteren:"Annual",source : 'guattestation'

								}
							}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){
										view_data.annual_bachelors_fourthYear.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year

										});
									});
									});
								});
							})
						}else if(markAllList.patteren=="Annual" && markAllList.type=="Bachelors" && markAllList.name=="Fifth Year"){
							models.userMarkList.findAll({
								where:{
									user_id:req.User.id,
									name:"Fifth Year",
									type:"Bachelors",
									patteren:"Annual",source : 'guattestation'
								}
							}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){
											view_data.annual_bachelors_fifthYear.push({
											patterenName:allBachmarklistData.name,
											patteren:allBachmarklistData.patteren,
											faculty:allBachmarklistData.faculty,
											file_name:allBachmarklistData.file_name,
											type:allBachmarklistData.type,
											lock_marklist:allBachmarklistData.lock_marklist,
											college_name:collegeData.name,
											collegeId:allBachmarklistData.collegeId,
											facultyYear:facultyYearData.year

											});
										});
									});
								});
							})
						}else if(markAllList.patteren=="Annual" && markAllList.type=="Masters" && markAllList.name=="First Year"){
							models.userMarkList.findAll({
								where:{
									user_id:req.User.id,
									name:"First Year",
									type:"Masters",
									patteren:"Annual",source : 'guattestation'

								}
							}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){
											view_data.annual_masters_firstYear.push({
												patterenName:allBachmarklistData.name,
												patteren:allBachmarklistData.patteren,
												faculty:allBachmarklistData.faculty,
												file_name:allBachmarklistData.file_name,
												type:allBachmarklistData.type,
												lock_marklist:allBachmarklistData.lock_marklist,
												college_name:collegeData.name,
												collegeId:allBachmarklistData.collegeId,
												facultyYear:facultyYearData.year
											});
										});
									});
								});
							})
		 				}else if(markAllList.patteren=="Annual" && markAllList.type=="Masters" && markAllList.name=="Second Year"){
							models.userMarkList.findAll({
								where:{
									user_id:req.User.id,
									name:"Second Year",
									type:"Masters",
									patteren:"Annual",source : 'guattestation'

								}
							}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){
											view_data.annual_masters_secondYear.push({
												patterenName:allBachmarklistData.name,
												patteren:allBachmarklistData.patteren,
												faculty:allBachmarklistData.faculty,
												file_name:allBachmarklistData.file_name,
												type:allBachmarklistData.type,
												lock_marklist:allBachmarklistData.lock_marklist,
												college_name:collegeData.name,
												collegeId:allBachmarklistData.collegeId,
												facultyYear:facultyYearData.year
											});
										});
									});
								});
							})
						}else if(markAllList.patteren=="Annual" && markAllList.type=="Masters" && markAllList.name=="Third Year"){
							models.userMarkList.findAll({
								where:{
									user_id:req.User.id,
									name:"Third Year",
									type:"Masters",
									patteren:"Annual",source : 'guattestation'
								}
							}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){
											view_data.annual_masters_thirdYear.push({
												patterenName:allBachmarklistData.name,
												patteren:allBachmarklistData.patteren,
												faculty:allBachmarklistData.faculty,
												file_name:allBachmarklistData.file_name,
												type:allBachmarklistData.type,
												lock_marklist:allBachmarklistData.lock_marklist,
												college_name:collegeData.name,
												collegeId:allBachmarklistData.collegeId,
												facultyYear:facultyYearData.year
											});
										});
									});
								});
							})
						}else if(markAllList.patteren=="Annual" && markAllList.type=="Masters" && markAllList.name=="Fourth Year"){
							models.userMarkList.findAll({
								where:{
									user_id:req.User.id,
									name:"Fourth Year",
									type:"Masters",
									patteren:"Annual",source : 'guattestation'
								}
							}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){
											view_data.annual_masters_fourthYear.push({
												patterenName:allBachmarklistData.name,
												patteren:allBachmarklistData.patteren,
												faculty:allBachmarklistData.faculty,
												file_name:allBachmarklistData.file_name,
												type:allBachmarklistData.type,
												lock_marklist:allBachmarklistData.lock_marklist,
												college_name:collegeData.name,
												collegeId:allBachmarklistData.collegeId,
												facultyYear:facultyYearData.year
											});
										});
									});
								});
							})
	     				 }else if(markAllList.patteren=="Annual" && markAllList.type=="Masters" && markAllList.name=="Fifth Year"){
							models.userMarkList.findAll({
								where:{
									user_id:req.User.id,
									name:"Fifth Year",
									type:"Masters",
									patteren:"Annual",source : 'guattestation'
								}
							}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
									models.College.find({
										where:{
											id:allBachmarklistData.collegeId
										}
									}).then(function(collegeData){
										models.Program_List.find({
											where:{
												faculty:allBachmarklistData.faculty
											}
										}).then(function(facultyYearData){
											view_data.annual_masters_fifthYear.push({
												patterenName:allBachmarklistData.name,
												patteren:allBachmarklistData.patteren,
												faculty:allBachmarklistData.faculty,
												file_name:allBachmarklistData.file_name,
												type:allBachmarklistData.type,
												lock_marklist:allBachmarklistData.lock_marklist,
												college_name:collegeData.name,
												collegeId:allBachmarklistData.collegeId,
												facultyYear:facultyYearData.year
											});
										});
									});
								});
							})
						}else if(markAllList.patteren=="Annual" && markAllList.type=="PhD" && markAllList.name=="First Year"){
						models.userMarkList.findAll({
							where:{
								user_id:req.User.id,
								name:"First Year",
								type:"PhD",
								patteren:"Annual",source : 'guattestation'
							}
						}).then(function(marklistData){
							marklistData.forEach(function(allBachmarklistData){
								models.College.find({
									where:{
										id:allBachmarklistData.collegeId
									}
								}).then(function(collegeData){
									models.Program_List.find({
										where:{
											faculty:allBachmarklistData.faculty
										}
									}).then(function(facultyYearData){
										view_data.annual_phd_firstYear.push({
											patterenName:allBachmarklistData.name,
											patteren:allBachmarklistData.patteren,
											faculty:allBachmarklistData.faculty,
											file_name:allBachmarklistData.file_name,
											type:allBachmarklistData.type,
											lock_marklist:allBachmarklistData.lock_marklist,
											college_name:collegeData.name,
											collegeId:allBachmarklistData.collegeId,
											facultyYear:facultyYearData.year
										});
									});
								});
							});
						})
					}else if(markAllList.patteren=="Annual" && markAllList.type=="PhD" && markAllList.name=="Second Year"){
						models.userMarkList.findAll({
							where:{
								user_id:req.User.id,
								name:"Second Year",
								type:"PhD",
								patteren:"Annual",source : 'guattestation'
							}
						}).then(function(marklistData){
							marklistData.forEach(function(allBachmarklistData){
								models.College.find({
									where:{
										id:allBachmarklistData.collegeId
									}
								}).then(function(collegeData){
									models.Program_List.find({
										where:{
											faculty:allBachmarklistData.faculty
										}
									}).then(function(facultyYearData){
										view_data.annual_phd_secondYear.push({
											patterenName:allBachmarklistData.name,
											patteren:allBachmarklistData.patteren,
											faculty:allBachmarklistData.faculty,
											file_name:allBachmarklistData.file_name,
											type:allBachmarklistData.type,
											lock_marklist:allBachmarklistData.lock_marklist,
											college_name:collegeData.name,
											collegeId:allBachmarklistData.collegeId,
											facultyYear:facultyYearData.year
										});
									});
								});
							});
						})
					}else if(markAllList.patteren=="Annual" && markAllList.type=="PhD" && markAllList.name=="Third Year"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Third Year",
							type:"PhD",
							patteren:"Annual",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_phd_thirdYear.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
	 			}else if(markAllList.patteren=="Annual" && markAllList.type=="PhD" && markAllList.name=="Fourt Year"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Fourth Year",
							type:"PhD",
							patteren:"Annual",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_phd_fourthYear.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Annual" && markAllList.type=="PhD" && markAllList.name=="Fifth Year"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Fifth Year",
							type:"PhD",
							patteren:"Annual",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_phd_fifthYear.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 1"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 1",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterFirst.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 2"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 2",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterSecond.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 3"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 3",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterThird.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 4"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 4",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterFourth.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 5"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 5",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterFifth.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 6"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 6",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterSixth.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 7"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 7",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterSeventh.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 8"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 8",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterEight.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 9"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 9",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterNine.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Bachelors" && markAllList.name=="Semester 10"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 10",
							type:"Bachelors",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_bachelors_semesterTen.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 1"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 1",
							type:"Masters",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_masters_semesterFirst.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 2"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 2",
							type:"Masters",
							patteren:"Semester",source : 'guattestation'

						}
					}).then(function(marklistData){
							marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
								view_data.annual_masters_semesterSecond.push({
								patterenName:allBachmarklistData.name,
								patteren:allBachmarklistData.patteren,
								faculty:allBachmarklistData.faculty,
								file_name:allBachmarklistData.file_name,
								type:allBachmarklistData.type,
								lock_marklist:allBachmarklistData.lock_marklist,
								college_name:collegeData.name,
								collegeId:allBachmarklistData.collegeId,
								facultyYear:facultyYearData.year

								});
							});
							});

							});
						})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 3"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 3",
							type:"Masters",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_masters_semesterThird.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 4"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 4",
							type:"Masters",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_masters_semesterFourth.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 5"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 5",
							type:"Masters",
							patteren:"Semester"
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_masters_semesterFifth.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 6"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 6",
							type:"Masters",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_masters_semesterSixth.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 7"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 7",
							type:"Masters",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_masters_semesterSeventh.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 8"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 8",
							type:"Masters",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_masters_semesterEight.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 9"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 9",
							type:"Masters",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_masters_semesterNine.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="Masters" && markAllList.name=="Semester 10"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 10",
							type:"Masters",
							patteren:"Semester",source : 'guattestation'

						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_masters_semesterTen.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 1"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 1",
							type:"PhD",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
									view_data.annual_phd_semesterFirst.push({
										patterenName:allBachmarklistData.name,
										patteren:allBachmarklistData.patteren,
										faculty:allBachmarklistData.faculty,
										file_name:allBachmarklistData.file_name,
										type:allBachmarklistData.type,
										lock_marklist:allBachmarklistData.lock_marklist,
										college_name:collegeData.name,
										collegeId:allBachmarklistData.collegeId,
										facultyYear:facultyYearData.year
									});
								});
							});
						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 2"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 2",
							type:"PhD",
							patteren:"Semester",source : 'guattestation'
						}
					}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
								view_data.annual_phd_semesterSecond.push({
								patterenName:allBachmarklistData.name,
								patteren:allBachmarklistData.patteren,
								faculty:allBachmarklistData.faculty,
								file_name:allBachmarklistData.file_name,
								type:allBachmarklistData.type,
								lock_marklist:allBachmarklistData.lock_marklist,
								college_name:collegeData.name,
								collegeId:allBachmarklistData.collegeId,
								facultyYear:facultyYearData.year

								});
							});
							});

							});
						})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 3"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 3",
							type:"PhD",
							patteren:"Semester"
							,source : 'guattestation'
						}
					}).then(function(marklistData){
							marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
								view_data.annual_phd_semesterThird.push({
								patterenName:allBachmarklistData.name,
								patteren:allBachmarklistData.patteren,
								faculty:allBachmarklistData.faculty,
								file_name:allBachmarklistData.file_name,
								type:allBachmarklistData.type,
								lock_marklist:allBachmarklistData.lock_marklist,
								college_name:collegeData.name,
								collegeId:allBachmarklistData.collegeId,
								facultyYear:facultyYearData.year

								});
							});
							});

							});
						})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 4"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 4",
							type:"PhD",
							patteren:"Semester"
							,source : 'guattestation'
						}
					}).then(function(marklistData){
							marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
								view_data.annual_phd_semesterFourth.push({
								patterenName:allBachmarklistData.name,
								patteren:allBachmarklistData.patteren,
								faculty:allBachmarklistData.faculty,
								file_name:allBachmarklistData.file_name,
								type:allBachmarklistData.type,
								lock_marklist:allBachmarklistData.lock_marklist,
								college_name:collegeData.name,
								collegeId:allBachmarklistData.collegeId,
								facultyYear:facultyYearData.year

								});
							});
							});

							});
						})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 5"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 5",
							type:"PhD",
							patteren:"Semester"
							,source : 'guattestation'
						}
					}).then(function(marklistData){
							marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
								view_data.annual_phd_semesterFifth.push({
								patterenName:allBachmarklistData.name,
								patteren:allBachmarklistData.patteren,
								faculty:allBachmarklistData.faculty,
								file_name:allBachmarklistData.file_name,
								type:allBachmarklistData.type,
								lock_marklist:allBachmarklistData.lock_marklist,
								college_name:collegeData.name,
								collegeId:allBachmarklistData.collegeId,
								facultyYear:facultyYearData.year

								});
							});
							});

							});
						})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 6"){
				models.userMarkList.findAll({
					where:{
						user_id:req.User.id,
						name:"Semester 6",
						type:"PhD",
						patteren:"Semester"
						,source : 'guattestation'
					}
				}).then(function(marklistData){
						marklistData.forEach(function(allBachmarklistData){
						models.College.find({
							where:{
								id:allBachmarklistData.collegeId
							}
						}).then(function(collegeData){
							models.Program_List.find({
								where:{
									faculty:allBachmarklistData.faculty
								}
							}).then(function(facultyYearData){
							view_data.annual_phd_semesterSixth.push({
							patterenName:allBachmarklistData.name,
							patteren:allBachmarklistData.patteren,
							faculty:allBachmarklistData.faculty,
							file_name:allBachmarklistData.file_name,
							type:allBachmarklistData.type,
							lock_marklist:allBachmarklistData.lock_marklist,
							college_name:collegeData.name,
							collegeId:allBachmarklistData.collegeId,
							facultyYear:facultyYearData.year

							});
						});
						});

						});
					})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 7"){
						models.userMarkList.findAll({
							where:{
								user_id:req.User.id,
								name:"Semester 7",
								type:"PhD",
								patteren:"Semester"
								,source : 'guattestation'
							}
						}).then(function(marklistData){
								marklistData.forEach(function(allBachmarklistData){
								models.College.find({
									where:{
										id:allBachmarklistData.collegeId
									}
								}).then(function(collegeData){
									models.Program_List.find({
										where:{
											faculty:allBachmarklistData.faculty
										}
									}).then(function(facultyYearData){
									view_data.annual_phd_semesterSeventh.push({
									patterenName:allBachmarklistData.name,
									patteren:allBachmarklistData.patteren,
									faculty:allBachmarklistData.faculty,
									file_name:allBachmarklistData.file_name,
									type:allBachmarklistData.type,
									lock_marklist:allBachmarklistData.lock_marklist,
									college_name:collegeData.name,
									collegeId:allBachmarklistData.collegeId,
									facultyYear:facultyYearData.year

									});
								});
								});

								});
							})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 8"){
					models.userMarkList.findAll({
						where:{
							user_id:req.User.id,
							name:"Semester 8",
							type:"PhD",
							patteren:"Semester"
							,source : 'guattestation'
						}
					}).then(function(marklistData){
							marklistData.forEach(function(allBachmarklistData){
							models.College.find({
								where:{
									id:allBachmarklistData.collegeId
								}
							}).then(function(collegeData){
								models.Program_List.find({
									where:{
										faculty:allBachmarklistData.faculty
									}
								}).then(function(facultyYearData){
								view_data.annual_phd_semesterEight.push({
								patterenName:allBachmarklistData.name,
								patteren:allBachmarklistData.patteren,
								faculty:allBachmarklistData.faculty,
								file_name:allBachmarklistData.file_name,
								type:allBachmarklistData.type,
								lock_marklist:allBachmarklistData.lock_marklist,
								college_name:collegeData.name,
								collegeId:allBachmarklistData.collegeId,
								facultyYear:facultyYearData.year

								});
							});
							});

							});
						})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 9"){
								models.userMarkList.findAll({
									where:{
										user_id:req.User.id,
										name:"Semester 9",
										type:"PhD",
										patteren:"Semester"
										,source : 'guattestation'
									}
								}).then(function(marklistData){
										marklistData.forEach(function(allBachmarklistData){
										models.College.find({
											where:{
												id:allBachmarklistData.collegeId
											}
										}).then(function(collegeData){
											models.Program_List.find({
												where:{
													faculty:allBachmarklistData.faculty
												}
											}).then(function(facultyYearData){
											view_data.annual_phd_semesterNine.push({
											patterenName:allBachmarklistData.name,
											patteren:allBachmarklistData.patteren,
											faculty:allBachmarklistData.faculty,
											file_name:allBachmarklistData.file_name,
											type:allBachmarklistData.type,
											lock_marklist:allBachmarklistData.lock_marklist,
											college_name:collegeData.name,
											collegeId:allBachmarklistData.collegeId,
											facultyYear:facultyYearData.year

											});
										});
										});

										});
									})
				}else if(markAllList.patteren=="Semester" && markAllList.type=="PhD" && markAllList.name=="Semester 10"){
										models.userMarkList.findAll({
											where:{
												user_id:req.User.id,
												name:"Semester 10",
												type:"PhD",
												patteren:"Semester"
												,source : 'guattestation'
											}
										}).then(function(marklistData){
												marklistData.forEach(function(allBachmarklistData){
												models.College.find({
													where:{
														id:allBachmarklistData.collegeId
													}
												}).then(function(collegeData){
													models.Program_List.find({
														where:{
															faculty:allBachmarklistData.faculty
														}
													}).then(function(facultyYearData){
													view_data.annual_phd_semesterTen.push({
													patterenName:allBachmarklistData.name,
													patteren:allBachmarklistData.patteren,
													faculty:allBachmarklistData.faculty,
													file_name:allBachmarklistData.file_name,
													type:allBachmarklistData.type,
													lock_marklist:allBachmarklistData.lock_marklist,
													college_name:collegeData.name,
													collegeId:allBachmarklistData.collegeId,
													facultyYear:facultyYearData.year

													});
												});
												});

												});
											})
				}

				 outercounter ++;

		 })
		 setTimeout(function(){
			if(marklist.length==outercounter){

				     return res.json({
					     message: 'Successfully  data !',
					     status: 200,
					     data: view_data,
					     data1:view_data2
				     });
			}

		 },6000)

			}else{
				res.json({
					status:400,
					message:'Bad Request'
				});
			}

		})
	}

	})

});

router.post('/reUpload_transcript',function(req,res){
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/documents/" + userId;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/documents/'+userId);
		},
		filename: function(req, file, callback) {
			callback(null, file.originalname);
			if(file.originalname.includes('&')){
				image = file.originalname.split('&').join('_');
			}else{
				image = file.originalname;
			}
		}
	});

	var upload = multer({
	storage: storage,
	fileFilter: function (req, file, callback) {
		if(file.originalname.includes('&')){
			file.originalname = file.originalname.split('&').join('_');
		}
		ext = path.extname(file.originalname)
		if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
			return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
		}
		callback(null, true)
	}
	}).single('file');
	upload(req, res, function (err, data) {
	imageLocationToCallClient = image;
	if (ext == '.pdf') {
		fs.readFile(constant.FILE_LOCATION +'public/upload/documents/' + userId + '/' + image, (err, pdfBuffer) => {
			new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
				if (err) {
					uploadValue = false;
					ValueUpdateData(uploadValue);
				} else if (!item) {
					uploadValue = true;
					ValueUpdateData(uploadValue);
				} else if (item.text) {}
			});
		});
	} else {
		uploadValue = true;
		ValueUpdateData(uploadValue);
	}

	function ValueUpdateData(uploadValue) {
		if (uploadValue == true) {
			models.User_Transcript.find({
				where:
				{
					id : req.query.id,source : 'guattestation' 
					// user_id: userId,
					// type: 'transcripts',
					// collegeId : req.query.clgId
				}
			}).then(function(user_exists){
				if(user_exists){
					user_exists.update({
						//name: transcript_name,
						user_id: userId,
						//type: 'transcripts',
						file_name: imageLocationToCallClient,
						lock_transcript : false,
						collegeId : req.query.clgId
					}).then(function(transcript_updated){
						if(transcript_updated){
							return res.json({
								status: 200,
								message: `Upload Completed.`,
								data : transcript_doc
							});
						}else{
							return res.json({
								status: 400,
								message: `Error occured in uploading document.`
							});
						}
					})
				}else{
					models.User_Transcript.create({
						name: transcript_name,
						user_id: userId,
						type: 'transcripts',
						file_name: imageLocationToCallClient,
						lock_transcript : false,
						collegeId : req.query.clgId,source : 'guattestation' 
					}).then(function (userTranscript) {
						if (userTranscript) {
							return res.json({
								status: 200,
								message: `Upload Completed.`,
								data : transcript_doc
							});
						} else {
							return res.json({
								status: 400,
								message: `Error occured in uploading document.`
							});
						}

					});
				}
			})
		} else if (uploadValue == false) {
			fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + userId + '/' + image, function (err) {
				if (err) {
					return res.json({
						status: 400,
						message: `Error occured in uploading document.`
					});
				} else {
					return res.json({
						status: 401,
						message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
					});
				}
			});
		}

	}
	});
});




router.post('/language',(req,res)=>{
	models.InstructionalDetails.update(
		{instruction_medium:req.body.language},
        {where:
			{userId :req.body.userId}
		}).then((err,updated)=>{
			if(err){
				console.error(err);
			}
				res.json({
					status:200,
					data:'saved!!!'
				})

		})
	})


router.get('/viewFileYearWise',middlewares.getUserInfo,function(req,res){
	var view_data=[];
	models.userMarkList.findAll({
		where:{
			user_id:req.User.id,
			name:req.query.year,
			patteren:req.query.pattern,
			type:req.query.education
			,source : 'guattestation'

		}
	}).then(function(users){
		if(users){
	    users.forEach(function(userData){
		models.College.find({
			where:{
				id:userData.collegeId
			}
		}).then(function(collegeData){

		    view_data.push({
			patternName:userData.name,
			pattern:userData.patteren,
			faculty:userData.faculty,
			file_name:userData.file_name,
			type:userData.type,
			lock_marklist:userData.lock_marklist,
			college_name:collegeData.name,
			marklistId:userData.id

		    })
		});


		});
        setTimeout(function(){
		res.json({
			status:200,
			data:view_data
		})

	 },500)

	}else{
		res.json({
			status:400
		})
	}



	});
})

router.get('/getMarklistLetter',function(req,res){
	var data = {};
	var file_id = req.query.id;
	models.userMarkList.find({
		where:{
			id : file_id,source : 'guattestation'
		}
	}).then(function(userMarkList){
		if(userMarkList){
			var fileName = userMarkList.file_name;
		    var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
				var file = constant.FILE_LOCATION+'public/upload/documents/'+userMarkList.user_id+'/'+userMarkList.file_name;
				var file1 = constant.BASE_URL+'/upload/documents/'+userMarkList.user_id+'/'+userMarkList.file_name;

				var fileName = userMarkList.file_name;
				if (!fs.existsSync(file)){
					res.json({
						status : 400
					})
				}else{
					data.file = fileName;
					data.filePath=file1;
					data.fileExtension=fileExtension;
					data.userId=req.User.id;
					res.json({
						status : 200,
						data : data
					})
				}
			//})
		}
	})
});


router.get('/getCurriculum',middlewares.getUserInfo,function(req,res){
	var data = {};
	var file_id = req.query.id;
	models.User_Curriculum.find({
		where:{
			file_name : file_id
		}
	}).then(function(userMarkList){
		if(userMarkList){
			var fileName = userMarkList.file_name;
		    var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
				var file = constant.FILE_LOCATION+'public/upload/documents/'+userMarkList.user_id+'/'+userMarkList.file_name;
				var file1 = constant.BASE_URL+'/upload/curriculum/'+userMarkList.user_id+'/'+userMarkList.file_name;
				var fileName = userMarkList.file_name;

				if (!fs.existsSync(file)){
					res.json({
						status : 400
					})
				}else{
					data.file = fileName;
					data.filePath=file1;
					data.fileExtension=fileExtension;
					data.userId=req.User.id;
					res.json({
						status : 200,
						data : data
					})
				}
			//})
		}
	})
});
router.delete('/deleteUploadFile',middlewares.getUserInfo,function(req,res){
	var userId=req.User.id;
	models.userMarkList.find({
		where:{
			user_id:req.User.id,source : 'guattestation'
		}

	}).then(function(users){
		if(users){
			models.userMarkList.find({
				where:{
					id:req.query.id,source : 'guattestation'
				}

			}).then(function(file){
				if(file){
					var path = constant.FILE_LOCATION + "public/upload/documents/" + userId + "/" + file.file_name;
					require('fs').unlink(path, function(err) {
						file.destroy().then(function(userMarklistDelete){
							res.json({
								status:200,
								data:userMarklistDelete,
								message:'File successfully deleted!...'
							})

						});
					});
				}else{
					res.json({
						status:400,
						message:'File not  Deleted!!..'
					});
				}
			})
		}
	})
});

router.get('/downloadMarkshhet', function (req, res) {
	var file_name = req.query.file_name;
	var userId = req.User.id;
	const downloadData = constant.FILE_LOCATION + "public/upload/documents/" + userId + "/" + file_name;
	res.download(downloadData);
});

router.put('/updateLoginCount',function(req,res){
	models.User.find({
		where:{
			id : req.body.user_id
		}
	}).then(function(user){
		user.update({
			login_count : 1
		})

			res.json({
				status:200,
				data:user
			});

	})
})

router.get('/changeCollegeWithDeleteMarklist',middlewares.getUserInfo,function(req,res){
	var userId=req.User.id;
	var view_data=[];
	models.userMarkList.findAll({
		where: {
			user_id: req.User.id,
			name:req.query.year,
			patteren:req.query.pattern,
			type:req.query.education,source : 'guattestation'
		}
	}).then(function (userMarklist) {
			if (userMarklist) {
				userMarklist.forEach(function(userMarklistData){
				var path = constant.FILE_LOCATION + "public/upload/documents/" + userId + "/" + userMarklistData.file_name;
				require('fs').unlink(path, function(err) {
					models.userMarkList.find({
						where:{
						file_name:userMarklistData.file_name,
						user_id:req.User.id,
						name:req.query.year,
						patteren:req.query.pattern,
						type:req.query.education,source : 'guattestation'
						}
					}).then(function(fileData){
					fileData.destroy().then(function (deleteMarklist) {
						if(deleteMarklist){
							view_data.push({
								file:deleteMarklist
							})


						}
					})
				});
				})

			});
			res.json({
				status : 200,
				message : "Marklist deleted Successfull"
			});
		}else{
				res.json({
				status : 400,
					message : "Marklist not delete"
		     	});
		    }
		})
});

router.post('/instructionalDetails',middlewares.getUserInfo,(req,res)=>{
	models.User.update(
		{instructionalField:req.body.instructionalDetails},
		{where:
			{id:req.User.id}
		}
	).then(updated=>{
		const valueUpdated =updated;
		res.status(200).json({
		 message : valueUpdated
		})
	})
})

// router.post('/educationalDetails',middlewares.getUserInfo,(req,res)=>{
// 	// models.User.update(
// 	// 	{educationalDetails:req.body.educationalDetails},
// 	// 	{where:
// 	// 		{id:req.User.id}
// 	// 	}
// 	// ).then(updated=>{
// 	// 	const valueUpdated = updated;
// 	// 	res.status(200).json({
// 	// 		message : valueUpdated
// 	// 	})
// 	// })
// 	if(req.body.applied_for == "PrevData"){
// 		models.userMarkList.updatePrevData(req.User.id,req.body.educationalDetailsValues).then(function(updated){
// 			res.json({
// 				status : 200,
// 				message : "updated"
// 			})
// 		})
// 	}else{
// 		models.Applied_For_Details.find({
// 			where : {
// 				user_id : req.User.id,
// 				app_id :{
// 					[Op.eq] : null
// 				}
// 			}
// 		}).then(function(appliedForDetails){
// 			if(req.body.applied_for == "educationalDetails"){
// 				if(appliedForDetails){
// 					appliedForDetails.update({
// 						educationalDetails:req.body.educationalDetailsValues
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "updated"
// 						})
// 					})
// 				}else{
// 					models.Applied_For_Details.create({
// 						educationalDetails:req.body.educationalDetailsValues,
// 						user_id : req.User.id
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "added"
// 						})
// 					})
// 				}
// 			}else if(req.body.applied_for == "instructionalDetails"){
// 				if(appliedForDetails){
// 					appliedForDetails.update({
// 						instructionalField:req.body.educationalDetailsValues
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "updated"
// 						})
// 					})
// 				}else{
// 					models.Applied_For_Details.create({
// 						instructionalField:req.body.educationalDetailsValues,
// 						user_id : req.User.id
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "added"
// 						})
// 					})
// 				}
// 			}else if(req.body.applied_for == "curriculumDetails"){
// 				if(appliedForDetails){
// 					appliedForDetails.update({
// 						curriculum:req.body.educationalDetailsValues
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "updated"
// 						})
// 					})
// 				}else{
// 					models.Applied_For_Details.create({
// 						curriculum:req.body.educationalDetailsValues,
// 						user_id : req.User.id
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "added"
// 						})
// 					})
// 				}
// 			}else if(req.body.applied_for == "gradToPer"){
// 				if(appliedForDetails){
// 					appliedForDetails.update({
// 						gradToPer:req.body.educationalDetailsValues
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "updated"
// 						})
// 					})
// 				}else{
// 					models.Applied_For_Details.create({
// 						gradToPer:req.body.educationalDetailsValues,
// 						user_id : req.User.id
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "added"
// 						})
// 					})
// 				}
// 			}else if(req.body.applied_for == "affiliation"){
// 				if(appliedForDetails){
// 					appliedForDetails.update({
// 						affiliation:req.body.educationalDetailsValues
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "updated"
// 						})
// 					})
// 				}else{
// 					models.Applied_For_Details.create({
// 						affiliation:req.body.educationalDetailsValues,
// 						user_id : req.User.id
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "added"
// 						})
// 					})
// 				}
// 			}else if(req.body.applied_for == "CompetencyLetter"){
// 				if(appliedForDetails){
// 					appliedForDetails.update({
// 						CompetencyLetter:req.body.educationalDetailsValues
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "updated"
// 						})
// 					})
// 				}else{
// 					models.Applied_For_Details.create({
// 						CompetencyLetter:req.body.educationalDetailsValues,
// 						user_id : req.User.id
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "added"
// 						})
// 					})
// 				}
// 			}else if(req.body.applied_for == "LetterforNameChange"){
// 				if(appliedForDetails){
// 					appliedForDetails.update({
// 						LetterforNameChange:req.body.educationalDetailsValues
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "updated"
// 						})
// 					})
// 				}else{
// 					models.Applied_For_Details.create({
// 						LetterforNameChange:req.body.educationalDetailsValues,
// 						user_id : req.User.id
// 					}).then(function(updatedDetails){
// 						res.json({
// 							status : 200,
// 							message : "added"
// 						})
// 					})
// 				}
// 			}
// 		})
// 	}


// })
router.post('/educationalDetails',middlewares.getUserInfo,(req,res)=>{
	console.log('educationalDetailseducationalDetailseducationalDetails@@@' + 	(req.body.applied_for));
	// models.User.update(
	// 	{educationalDetails:req.body.educationalDetails},
	// 	{where:
	// 		{id:req.User.id}
	// 	}
	// ).then(updated=>{
	// 	const valueUpdated = updated;
	// 	res.status(200).json({
	// 		message : valueUpdated
	// 	})
	// })
	if(req.body.applied_for == "PrevData"){
		models.userMarkList.updatePrevData(req.User.id,req.body.educationalDetailsValues).then(function(updated){
			res.json({
				status : 200,
				message : "updated"
			})
		})
	}else{
		models.Applied_For_Details.find({
			where : {
				user_id : req.User.id,
				app_id :{
					[Op.eq] : null
				},
				source : 'guattestation'
			}
		}).then(function(appliedForDetails){
			if(req.body.applied_for == "educationalDetails"){
				if(appliedForDetails){
					appliedForDetails.update({
						educationalDetails: 1,
						instructionalField : 0 
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "updated"
						})
					})
				}else{
					models.Applied_For_Details.create({
						educationalDetails:1,
						instructionalField : 0 ,
						user_id : req.User.id,
						source : 'guattestation'
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "added"
						})
					})
				}
			}else if(req.body.applied_for == "instructionalDetails"){
				if(appliedForDetails){
					appliedForDetails.update({
						instructionalField:1,
						educationalDetails : 0
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "updated"
						})
					})
				}else{
					models.Applied_For_Details.create({
						instructionalField:1,
						user_id : req.User.id,
						educationalDetails : 0,
						source : 'guattestation'
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "added"
						})
					})
				}
			}else if(req.body.applied_for == "curriculumDetails"){
				if(appliedForDetails){
					appliedForDetails.update({
						curriculum:req.body.educationalDetailsValues
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "updated"
						})
					})
				}else{
					models.Applied_For_Details.create({
						curriculum:req.body.educationalDetailsValues,
						user_id : req.User.id,
						source : 'guattestation'
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "added"
						})
					})
				}
			}else if(req.body.applied_for == "gradToPer"){
				if(appliedForDetails){
					appliedForDetails.update({
						gradToPer:req.body.educationalDetailsValues
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "updated"
						})
					})
				}else{
					models.Applied_For_Details.create({
						gradToPer:req.body.educationalDetailsValues,
						user_id : req.User.id,
						source : 'guattestation'
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "added"
						})
					})
				}
			}else if(req.body.applied_for == "affiliation"){
				if(appliedForDetails){
					appliedForDetails.update({
						affiliation:req.body.educationalDetailsValues
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "updated"
						})
					})
				}else{
					models.Applied_For_Details.create({
						affiliation:req.body.educationalDetailsValues,
						user_id : req.User.id,
						source : 'guattestation'
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "added"
						})
					})
				}
			}else if(req.body.applied_for == "CompetencyLetter"){
				if(appliedForDetails){
					appliedForDetails.update({
						CompetencyLetter:req.body.educationalDetailsValues
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "updated"
						})
					})
				}else{
					models.Applied_For_Details.create({
						CompetencyLetter:req.body.educationalDetailsValues,
						user_id : req.User.id,
						source : 'guattestation'
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "added"
						})
					})
				}
			}else if(req.body.applied_for == "LetterforNameChange"){
				if(appliedForDetails){
					appliedForDetails.update({
						LetterforNameChange:req.body.educationalDetailsValues
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "updated"
						})
					})
				}else{
					models.Applied_For_Details.create({
						LetterforNameChange:req.body.educationalDetailsValues,
						user_id : req.User.id,
						source : 'guattestation'
					}).then(function(updatedDetails){
						res.json({
							status : 200,
							message : "added"
						})
					})
				}
			}
		})
	}


})
router.post('/updateAttestedFor',middlewares.getUserInfo,(req,res)=>{
	console.log("/updateAttestedFor" + req.body.value);

		models.Applied_For_Details.find({
			where : {
				user_id : req.User.id,
				app_id :{
					[Op.eq] : null
				},
				source : 'guattestation'
			}
		}).then(function(appliedForDetails){

			appliedForDetails.update({
				attestedfor :  req.body.value
			}).then(function(updatedDetails){
				res.json({
					status : 200,
					message : "updated"
				})
			})

		})



})


router.post('/curriculumDetails',middlewares.getUserInfo,(req,res)=>{
	models.Applied_For_Details.update(
		{curriculum:req.body.curriculumDetails,source : 'guattestation'},
		{where:
			{user_id:req.User.id}
		}
	).then(updated=>{
		const valueUpdated = updated;
		res.status(200).json({
			message : valueUpdated
		})
	})
})


router.post('/instructionalUserDetails',middlewares.getUserInfo,async (req,res)=>{
	console.log('/instructionalUserDetails');
	var editFlag = req.body.editFlag;
	var app_id = req.body.app_id;
		models.InstructionalDetails.find({
			where:{
				id: req.body[0].idCtrl
			}
		}).then(user =>{
			if(!user){
				models.InstructionalDetails.create({
					userId:req.User.id,
					studentName: req.body[0].nameCtrl.toUpperCase(),
					courseName:req.body[0].courseCtrl,
					collegeName:req.body[0].collegeCtrl,
					specialization:req.body[0].specializationCtrl,
					duration:req.body[0].durationCtrl,
					yearofpassing:req.body[0].passingCtrl,
					yearofenrollment:req.body[0].enrollCtrl,
					division:req.body[0].divisionCtrl,
					academicYear : req.body[0].acadYearCtrl,
					education: req.body[0].education,
					instruction_medium: req.body[0].mediumCtrl,
					courseshort : req.body[1],
					clg : req.body[2]
				}).then((userCreated)=>{
					if(userCreated){
						res.status(200).json({
							message:'data saved successfully!!!'
						})
					}
	
				})
	
			}else{
				user.update({
					studentName:req.body[0].nameCtrl.toUpperCase(),
					courseName:req.body[0].courseCtrl,
					collegeName:req.body[0].collegeCtrl,
					specialization:req.body[0].specializationCtrl,
					duration:req.body[0].durationCtrl,
					yearofpassing:req.body[0].passingCtrl,
					yearofenrollment:req.body[0].enrollCtrl,
					division:req.body[0].divisionCtrl,
					academicYear : req.body[0].acadYearCtrl,
					instruction_medium: req.body[0].mediumCtrl,
					courseshort : req.body[1],
					clg : req.body[2]
				}).then(userUpdated =>{
					res.status(200).json({
						message:'data saved successfully!!!'
					})
				})
	
			}
	
		})
	// }
	
})

router.post('/affiliationUserDetails',middlewares.getUserInfo,async (req,res)=>{
	console.log('/affiliationUserDetails');
	models.Affiliation_Letter.find({
		where:{
			id: req.body.idCtrl
		}
	}).then(user =>{
		if(!user){
			models.Affiliation_Letter.create({
				user_id:req.User.id,
				studentName:req.body.nameCtrl,
				courseName:req.body.courseCtrl,
				collegeName:req.body.collegeCtrl,
				specialization:req.body.specializationCtrl,
				duration:req.body.durationCtrl,
				yearofpassing:req.body.passingCtrl,
				division:req.body.divisionCtrl,
				academicYear : req.body.acadYearCtrl,
				education: req.body.education,
				medium: req.body.mediumCtrl
			}).then((userCreated)=>{
				if(userCreated){
					res.status(200).json({
						message:'data saved successfully!!!'
					})
				}

			})

		}else{
			user.update({
				studentName:req.body.nameCtrl,
				courseName:req.body.courseCtrl,
				collegeName:req.body.collegeCtrl,
				specialization:req.body.specializationCtrl,
				duration:req.body.durationCtrl,
				yearofpassing:req.body.passingCtrl,
				division:req.body.divisionCtrl,
				academicYear : req.body.acadYearCtrl,
				medium: req.body.mediumCtrl
			}).then(userUpdated =>{
				res.status(200).json({
					message:'data saved successfully!!!'
				})
			})

		}

	})
})
router.post('/saveLetterNameChangeData',middlewares.getUserInfo,async (req,res)=>{
	console.log('/saveLetterNameChangeData', req.body.lastnameasperpassportCtrl);

	var userId=req.User.id
	models.Letterfor_NameChange.find({
		where:{
			user_id: req.User.id
		}
	}).then(user =>{
		if(!user){
			models.Letterfor_NameChange.create({
				user_id:userId,
				firstnameaspermarksheet:req.body.firstnameaspermarksheetCtrl,
				fathersnameaspermarksheet:req.body.fathersnameaspermarksheetCtrl,
				mothersnameaspermarksheet:req.body.mothersnameaspermarksheetCtrl,
				lastnameaspermarksheet:req.body.lastnameaspermarksheetCtrl,
				firstnameasperpassport:req.body.firstnameasperpassportCtrl	,
				fathersnameasperpassport:req.body.fathersnameasperpassportCtrl,
				lastnameasperpassport:req.body.lastnameasperpassportCtrl,
				//  file_name :'test',
				type: 'Passport'
			}).then((userCreated)=>{
				if(userCreated){
					res.json({
						status : 200,
						message:'data saved successfully!!!'
					})
				}else{
					status : 400
				}

			})

		}else{
			user.update({
				firstnameaspermarksheet:req.body.firstnameaspermarksheetCtrl,
				fathersnameaspermarksheet:req.body.fathersnameaspermarksheetCtrl,
				mothersnameaspermarksheet:req.body.mothersnameaspermarksheetCtrl,
				lastnameaspermarksheet:req.body.lastnameaspermarksheetCtrl,
				firstnameasperpassport:req.body.firstnameasperpassportCtrl,
				fathersnameasperpassport:req.body.fathersnameasperpassportCtrl,
				lastnameasperpassport:req.body.lastnameasperpassportCtrl,
				// file_name :,
				type: 'Passport'
			}).then(userUpdated =>{
				if(userUpdated){

				}
				res.json({
					status : 200,
					message:'data saved successfully!!!'
				})
			})

		}

	})
})

// router.get('/getNameChangeData',middlewares.getUserInfo,async (req,res)=>{
// 	console.log('/getNameChangeData', req.User.id);
// 	var userId=req.User.id
// 	var filename_data = [];
// 	var letterforNameChange_upload= [];
// 	var filePath;
// 	var filename;
// 	const s3 = new AWS.S3({
// 		endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 		accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 		secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 		s3BucketEndpoint: true,
// 	});
// 	s3.listObjectsV2({
// 		Bucket: "muattestation",
// 	}, function (err, data) {
// 		if (err) {
// 			res.json({status :500})
// 		} else {
// 			// Return the list ("Contents") as JSON
// 			letterforNameChange_upload = data.Contents
// 			// res.json({status :200,
//         //     data : data.Contents})
// 	models.Letterfor_NameChange.find({
// 		where:{
// 			user_id:userId
// 		}
// 	}).then(user =>{
// 		console.log("user === > "+ user.file_name);
// 		letterforNameChange_upload.forEach(function (data){
//             if(data.ETag.includes(user.file_name)){
//                     filename = JSON.parse(data.ETag);
//                     filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
//                     // console.log("filePath of filePath"+ filePath);
//             }else if(user.file_name.includes('.')){
//              filename= (user) ? constant.FILE_LOCATION + "public/upload/NameChangeLetter/" + req.User.id + "/" + user.file_name : null,
//              filePath= (user) ? constant.BASE_URL + "/upload/NameChangeLetter/" + req.User.id + "/" + user.file_name : null
//          }
//         })
// 		filename_data.push({
// 			filePath: filePath,
// 			filename: filename,
// 		})
// 		if(user){
// 			console.log("filename_data "+  JSON.stringify(filename_data));
// 			res.json({
// 				status : 200,
// 				data :  user,
// 				filename : filename_data
// 			})
// 		}else {
// 			res.json({
// 				status : 400,
// 			})
// 		}


// 	})
// }
// })
// })

router.get('/getNameChangeData',middlewares.getUserInfo,async (req,res)=>{
	console.log('/getNameChangeData', req.User.id);
	var userId=req.User.id
	var filename = [];
	models.Letterfor_NameChange.find({
		where:{
			user_id:userId
		}
	}).then(user =>{
		filename.push({
			filePath: (user.file_name) ? constant.FILE_LOCATION + "public/upload/NameChangeLetter/" + req.User.id + "/" + user.file_name : null,
			filename: (user.file_name) ? constant.BASE_URL  + "/"+  "upload/NameChangeLetter/" + req.User.id + "/" + user.file_name : null,
		})
		if(user){
			res.json({
				status : 200,
				data :  user,
				filename : filename
			})
		}else {
			res.json({
				status : 400,
			})
		}


	})
})
// router.post('/upload_curriculum',function(req,res){
// 	var userId = req.query.user_id;
// 	var image;
// 	var transcript_name = req.query.transcript_name;
// 	var transcript_doc = req.query.hiddentype;
// 	var doc_id = req.query.doc_id;
// 	var dir = constant.FILE_LOCATION + "public/upload/documents/" + userId;
// 	var app_id = req.query.app_id;
// 	var filename;
// 	if (!fs.existsSync(dir)) {
// 		fs.mkdirSync(dir);
// 	}
// 		var storage = multer.diskStorage({
// 		destination: function(req, file, callback) {
// 			callback(null, constant.FILE_LOCATION+'public/upload/documents/'+userId);
// 		},
// 		filename: function(req, file, callback) {
// 			//to generate the filename in a random string
// 			var extension = file.originalname.split('.');
// 			filename = (require('shortid').generate())+'.'+extension[1];
// 			callback(null, filename);
// 			// if(file.originalname.includes('&')){
// 			// 	image = file.originalname.split('&').join('_');
// 			// }else{
// 			// 	image = file.originalname;
// 			// }
// 			// if(file.originalname.includes(' ')){
// 			// 	image = file.originalname.split(' ').join('_');
// 			// }else{
// 			// 	image = file.originalname;
// 			// }

// 			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
// 			var flag = false;
// 			for(var i = 0; i < format.length;i++){
// 				if(file.originalname.indexOf(format[i]) > -1){
// 					flag = true;
// 					image = file.originalname.split(format[i]).join('_');
// 				}
// 			}
// 			if(flag == false){
// 				image = file.originalname
// 			}

// 		}
// 	});

// 	var upload = multer({
// 		storage: storage,
// 		fileFilter: function (req, file, callback) {
// 			// if(file.originalname.includes('&')){
// 			// 	file.originalname = file.originalname.split('&').join('_');
// 			// }
// 			// if(file.originalname.includes(' ')){
// 			// 	file.originalname = file.originalname.split(' ').join('_');
// 			// }

// 			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
// 			var flag = false;
// 			for(var i = 0; i < format.length;i++){
// 				if(file.originalname.indexOf(format[i]) > -1){
// 					flag = true;
// 					file.originalname = file.originalname.split(format[i]).join('_');
// 				}
// 			}
// 			if(flag == false){
// 				file.originalname = file.originalname
// 			}


// 			ext = path.extname(file.originalname)
// 			if ( ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
// 				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
// 			}
// 			callback(null, true)
// 		}
// 	}).single('file');
// 	upload(req, res, function (err, data) {
// 		imageLocationToCallClient = filename;
// 		if (ext == '.pdf') {
// 			fs.readFile(constant.FILE_LOCATION +'public/upload/documents/' + userId + '/' + image, (err, pdfBuffer) => {
// 				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
// 					if (err) {
// 						uploadValue = false;
// 						ValueUpdateData(uploadValue);
// 					} else if (!item) {
// 						uploadValue = true;
// 						ValueUpdateData(uploadValue);
// 					} else if (item.text) {}
// 				});
// 			});
// 		} else {
// 			uploadValue = true;
// 			ValueUpdateData(uploadValue);
// 		}

// 		function ValueUpdateData(uploadValue) {
// 			if (uploadValue == true) {

// 				var fileStatus = false;
// 				models.User_Curriculum.findAll({
// 					where :{
// 						user_id: userId,
// 					}
// 				}).then((datam)=>{
// 					if(datam.length > 0){
// 						datam.forEach(function(marklistData){
// 							if(marklistData){
// 								if(marklistData.file_name == imageLocationToCallClient){
// 									fileStatus=true;
// 								}
// 							}
// 						})
// 					}
//                     if(fileStatus==true){
// 						res.json({
// 							status: 200,
// 							message: `File already exist. please upload another file!!!..`,
// 						})
// 					}else{
// 						if(doc_id != undefined && doc_id != null && doc_id != ''){
// 							models.User_Curriculum.find({
// 								where:{
// 									user_id : userId,
// 									id : doc_id
// 								}
// 							}).then(function(curriculum_data){
// 								curriculum_data.update({
// 									file_name: imageLocationToCallClient,
// 									lock_transcript : false,
// 									collegeId: req.query.collegeId,
// 									upload_step : "changed"
// 								}).then(function (userTranscript) {
// 									if (userTranscript) {
// 										return res.json({
// 											status: 200,
// 											message: `Upload Completed.`,
// 											data : transcript_doc
// 										});
// 									} else {
// 										return res.json({
// 											status: 400,
// 											message: `Error occured in uploading document.`
// 										});
// 									}
// 								});
// 							})
// 						}else{
// 							if(app_id == null){
// 								models.User_Curriculum.create({
// 									name: transcript_name,
// 									user_id: userId,
// 									file_name: imageLocationToCallClient,
// 									lock_transcript : false,
// 									collegeId: req.query.collegeId,
// 									upload_step : "default"
// 								}).then(function (userTranscript) {
// 									if (userTranscript) {
// 										return res.json({
// 											status: 200,
// 											message: `Upload Completed.`,
// 											data : transcript_doc
// 										});
// 									} else {
// 										return res.json({
// 											status: 400,
// 											message: `Error occured in uploading document.`
// 										});
// 									}
// 								});
// 							}else{
// 								models.User_Curriculum.create({
// 									name: transcript_name,
// 									user_id: userId,
// 									file_name: imageLocationToCallClient,
// 									lock_transcript : false,
// 									collegeId: req.query.collegeId,
// 									upload_step : "changed",
// 									app_id : app_id
// 								}).then(function (userTranscript) {
// 									if (userTranscript) {
// 										return res.json({
// 											status: 200,
// 											message: `Upload Completed.`,
// 											data : transcript_doc
// 										});
// 									} else {
// 										return res.json({
// 											status: 400,
// 											message: `Error occured in uploading document.`
// 										});
// 									}
// 								});
// 							}
// 						}
// 					}
// 				})

// 			} else if (uploadValue == false) {
// 				fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + userId + '/' + image, function (err) {
// 					if (err) {
// 						return res.json({
// 							status: 400,
// 							message: `Error occured in uploading document.`
// 						});
// 					} else {
// 						return res.json({
// 							status: 401,
// 							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
// 						});
// 					}
// 				});
// 			}

// 		}
// 	});
// });
router.post('/upload_curriculum',function(req,res){
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var doc_id = req.query.doc_id;
	var dir = constant.FILE_LOCATION + "public/upload/documents/" + userId;
	var app_id = req.query.app_id;
	var filename;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
		var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/documents/'+userId);
		},
		filename: function(req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10,'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if ( ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = filename;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION +'public/upload/documents/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) {}
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {

				var fileStatus = false;
				models.User_Curriculum.findAll({
					where :{
						user_id: userId,
					}
				}).then((datam)=>{
					if(datam.length > 0){
						datam.forEach(function(marklistData){
							if(marklistData){
								if(marklistData.file_name == imageLocationToCallClient){
									fileStatus=true;
								}
							}
						})
					}
                    if(fileStatus==true){
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					}else{
						if(doc_id != undefined && doc_id != null && doc_id != ''){
							models.User_Curriculum.find({
								where:{
									user_id : userId,
									id : doc_id
								}
							}).then(function(curriculum_data){
								curriculum_data.update({
									file_name: imageLocationToCallClient,
									lock_transcript : false,
									collegeId: req.query.collegeId,
									upload_step : "changed"
								}).then(function (userTranscript) {
									if (userTranscript) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data : transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								});
							})
						}else{
							if(app_id == null){
								models.User_Curriculum.create({
									name: transcript_name,
									user_id: userId,
									file_name: imageLocationToCallClient,
									lock_transcript : false,
									collegeId: req.query.collegeId,
									upload_step : "default"
								}).then(function (userTranscript) {
									if (userTranscript) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data : transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								});
							}else{
								models.User_Curriculum.create({
									name: transcript_name,
									user_id: userId,
									file_name: imageLocationToCallClient,
									lock_transcript : false,
									collegeId: req.query.collegeId,
									upload_step : "changed",
									app_id : app_id
								}).then(function (userTranscript) {
									if (userTranscript) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data : transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								});
							}
						}
					}
				})

			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});


router.delete('/deleteUploadpdf',middlewares.getUserInfo,function(req,res){
	models.User_Curriculum.find({
		where:{
			user_id:req.User.id
		}

	}).then(function(users){
		if(users){
			models.User_Curriculum.find({
				where:{
					id:req.query.id
				}
			}).then(function(file){
				if(file){
					fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
						file.destroy().then(function(userMarklistDelete){
							res.json({
								status:200,
								data:userMarklistDelete
							})
						});
					});
			}else{
				res.json({
					status:400,
					message:'File Deleted!!..'
				});
			}

			})
		}
	})
});

router.post('/deleteErrataCurriculum',middlewares.getUserInfo,function(req,res){
	var userData = req.body.data
	models.User_Curriculum.find({
		where:{
			user_id:userData.user_id
		}

	}).then(function(users){
		if(users){
			models.User_Curriculum.find({
				where:{
					id:userData.id,
					user_id:userData.user_id
				}
			}).then(function(file){
				if(file){
					//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + userData.user_id + '/' + file.file_name, function (err) {
						file.destroy().then(function(userMarklistDelete){
							if(userMarklistDelete){
								models.Activitytracker.create({
									user_id : userData.user_id,
									activity : userMarklistDelete.name+ 'Deleted',
									data : userMarklistDelete.file_name + ' deleted by ' + req.User.email,
									applicaiton_id : userData.app_id
								})
							res.json({
								status:200,
								message:'Curriculum deleted successfully!!...'
							})
						}
						});
					//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}

			})
		}
	})
});


router.get('/getAdminInstructionalDetails',(req,res)=>{
	var data = [];
	models.InstructionalDetails.findAll(
		{
			where:{
				userId:req.query.userId
			}
		}
	).then(user=>{
		user.forEach(function (userdata){
			data.push({
					name : userdata.studentName,
					course:  userdata.courseName,
					college :userdata.collegeName,
					duration : userdata.duration,
					specialization : userdata.specialization,
					yearofpassing : userdata.yearofpassing,
					division :userdata.division,
					app_id:userdata.app_id
				})
			})
		if(data){
			res.json({
				data :  data
			})
		}else{
			res.json({
			data  : null
			})
		}
	})
})

router.get('/getAdminHrdDetails',(req,res)=>{
	console.log("getAdminHrdDetails ===>");
	var data = [];
	models.Hrd_details.findAll(
		{
			where:{
				user_id:req.query.userId
			}
		}
	).then(user=>{
		user.forEach(function (userdata){
			data.push({
						fullName :  userdata.fullName,
						course_name :  userdata.course_name,
						seat_no : userdata.seat_no,
						prn_no :  userdata.prn_no,
						cgpa : userdata.cgpa,
						cgpi :  userdata.cgpi,
						transcript_no : userdata.transcript_no,
						transcript_date :  userdata.transcript_date,
						exam_date : userdata.exam_date,
						specialization : userdata.specialization,
						reference_no :  userdata.reference_no,
						app_id : userdata.app_id,
						degree :  userdata.degree
				})
			})
		if(data){
			res.json({
				data :  data
			})
		}else{
			res.json({
			data  : null
			})
		}
	})
})
router.post('/saveMarkListDetails',middlewares.getUserInfo,async (req,res)=>{
	var userId = req.User.id;
	var faculty = await functions.programList(req.body.data.faculty);
	if(req.body.data.id != ''){
		models.userMarkList.find({
			where:{
				id : req.body.data.id,source : 'guattestation'
			}
		}).then(async function(marklist){
			marklist.update({
				// collegeId : req.body.data.collegeId,
				collegeId : 1,
				faculty : req.body.data.faculty,
				patteren : req.body.data.patteren,
				name : req.body.data.name,
				course_faculty  : faculty.faculty,
				enrollment_number : req.body.data.enrollmentno
			})

			var removemarklistid =  await functions.removemarksheets(req.body.data.id);
			// var previous_empty = await functions.previous_empty(userId)
				res.json({
					status:200,
					message: `Updated Successfully.`,
					data:marklist
				});

		})
	}else{
		if(req.body.data.editFlag == "true"){
			models.userMarkList.create({
				user_id: userId,
				type: req.body.data.degreeName,
				// collegeId : req.body.data.collegeId,
				collegeId : 1,
				faculty : req.body.data.faculty,
				patteren : req.body.data.patteren,
				name : req.body.data.name,
				college_stream_type : req.body.data.college_stream,
				app_id : req.body.data.app_id,
				course_faculty  : faculty.faculty,
				enrollment_number : req.body.data.enrollmentno,source : 'guattestation'
			}).then(function (userMarkListDetails) {
				if (userMarkListDetails) {
					return res.json({
						status: 200,
						message: `Saved Successfully.`,
						data : userMarkListDetails
					});
				} else {
					return res.json({
						status: 400,
						message: `Error occured in uploading document.`
					});
				}
			});
		}else{
			models.userMarkList.create({
				user_id: userId,
				type: req.body.data.degreeName,
				// collegeId : req.body.data.collegeId,
				collegeId : 1,
				faculty : req.body.data.faculty,
				patteren : req.body.data.patteren,
				name : req.body.data.name,
				college_stream_type : 0,
				course_faculty  : faculty.faculty,
				enrollment_number : req.body.data.enrollmentno,source : 'guattestation'
			}).then(function (userMarkListDetails) {
				if (userMarkListDetails) {
					return res.json({
						status: 200,
						message: `Saved Successfully.`,
						data : userMarkListDetails
					});
				} else {
					return res.json({
						status: 400,
						message: `Error occured in uploading document.`
					});
				}
			});
		}
	}
})
router.post('/settonull',middlewares.getUserInfo,async (req,res)=>{
	console.log('settonull');
	var userId =req.User.id;
	let previous_data_null=await functions.previous_empty(userId);
})

router.post('/saveHrdAdminDetails',middlewares.getUserInfo,(req,res)=>{
	console.log("saveHrdAdminDetails");
	var degree = req.body.degree;
	var type = req.body.type;
	var userId =req.body.userId

	models.Hrd_details.findAll({
		where : {
			user_id : '51051'
		}
	}).then(function (savedetails){
		console.log("else");
		if(type == 'reset'){
			models.Hrd_details.update(
				{
					 verification_type: null,
					//  verification_type : savedetails[0].verification_type + ',' + type
				},
				{   where   :  {

					user_id : userId,
					degree :  degree
				}
				}).then((err,updated)=>{
						res.json({
							status :200,
							type : 'reset'
						})
				})
		}else{
			if(savedetails[0].verification_type != null){
				models.Hrd_details.update(
					{
						 verification_type: null,
						 verification_type : savedetails[0].verification_type + ',' + type
					},
					{   where   :  {

						user_id : userId,
						degree :  degree
					}
					}).then((err,updated)=>{


								res.json({
									status :200
								})

					})
			}else{
				models.Hrd_details.update(
					{
						//  verification_type: null,
						 verification_type :   type
					},
					{   where   :  {

						user_id : userId,
						degree :  degree
					}
					}).then((err,updated)=>{
								res.json({
									status : 200
								})

					})
			}
		}




	})
})

router.post('/deleteDetails', middlewares.getUserInfo, function(req, res){
	models.userMarkList.find({
		where: {
			id : req.body.id,source : 'guattestation'
		}
	}).then(function (userMarklist) {
			if (userMarklist) {
				userMarklist.destroy().then(function (delmarklist) {
					if(delmarklist){
						res.json({
							status : 200,
							message : "College Details deleted Successfully"
						})

					}else{
						res.json({
							status : 400,
							message : "College Details not delete"
						});
					}
				});
			}
		});
});

router.get('/getMarkListDetails',middlewares.getUserInfo,function(req,res){
	console.log('/getMarkListDetails')

	var userMarkListDetails = [];
	var userMarkLists = [];

	// models.userMarkList.findAll({
	// 	where: {
	// 		user_id : req.User.id,
	// 		type:req.query.degreeName
	// 	}
	// }).then(function (userMarkLists) {
	// 	if(userMarkLists.length > 0){
	// 		userMarkLists.forEach(function(userMarkList) {
	// 			if(userMarkList.collegeId != '' && userMarkList.collegeId != null){
	// 				models.College.find({
	// 					where:{
	// 						id : userMarkList.collegeId
	// 					}
	// 				}).then(function(college){
	// 					userMarkListDetails.push({
	// 						id: userMarkList.id,
	// 						faculty: userMarkList.faculty,
	// 						user_id: userMarkList.user_id,
	// 						type : userMarkList.type,
	// 						patteren : userMarkList.patteren,
	// 						collegeName : college.name,
	// 						collegeId : userMarkList.collegeId,
	// 						college_stream : userMarkList.college_stream_type,
	// 						name : userMarkList.name,
	// 					});
	// 				})
	// 			}
	// 		});
	// 	}
	// 	setTimeout(function() {
	// 		res.json({
	// 			status : 200,
	// 			data : userMarkListDetails,
	// 		})
	// 	}, 1500);
	// })
	if(req.query.editFlag == 'true'){
		models.userMarkList.findAll({
			where: {
				user_id : req.User.id,
				type:req.query.degreeName,source : 'guattestation'
			}
		}).then(function(userMarkList_Details){
			userMarkList_Details.forEach(detail=>{
				if(detail.app_id != null){
					var app_idArr = detail.app_id.split(',');
					app_idArr.forEach(app_id =>{
						if(app_id == req.query.app_id){
							userMarkLists.push(detail)
						}
					})
				}
			})

			userMarkLists.forEach(function(userMarkList) {
				if(userMarkList.collegeId != '' && userMarkList.collegeId != null){
					models.College.find({
						where:{
							id : userMarkList.collegeId
						}
					}).then(function(college){
						userMarkListDetails.push({
							id: userMarkList.id,
							faculty: userMarkList.faculty,
							user_id: userMarkList.user_id,
							type : userMarkList.type,
							patteren : userMarkList.patteren,
							collegeName : college.name,
							collegeId : userMarkList.collegeId,
							college_stream : userMarkList.college_stream_type,
							name : userMarkList.name,
							app_id : userMarkList.app_id,
							enrollment : userMarkList.enrollment_number
						});
					})
				}
			});

			setTimeout(function() {
				res.json({
					status : 200,
					data : userMarkListDetails,
				})
			}, 1500);

		})
	}else{
		models.userMarkList.find({
			where : {
				user_id : req.User.id,source : 'guattestation'

			}
		}).then(function(userMarkList_Details){
			if(userMarkList_Details){
				if(userMarkList_Details.previous_data == true){
					models.userMarkList.findAll({
						where : {
							user_id : req.User.id,
							type:req.query.degreeName,source : 'guattestation'
						}
					}).then(function(userMarkList_data){
						if(userMarkList_data.length > 0){
							userMarkList_data.forEach(function(userMarkList) {
								if(userMarkList.collegeId != '' && userMarkList.collegeId != null){
									models.College.find({
										where:{
											id : userMarkList.collegeId
										}
									}).then(function(college){
										userMarkListDetails.push({
											id: userMarkList.id,
											faculty: userMarkList.faculty,
											user_id: userMarkList.user_id,
											type : userMarkList.type,
											patteren : userMarkList.patteren,
											collegeName : college.name,
											collegeId : userMarkList.collegeId,
											college_stream : userMarkList.college_stream_type,
											name : userMarkList.name,
											app_id : userMarkList.app_id,
											enrollment : userMarkList.enrollment_number
										});
									})
								}
							});
						}
						setTimeout(function() {
							res.json({
								status : 200,
								data : userMarkListDetails,
							})
						}, 1500);
					})
				}else if(userMarkList_Details.previous_data == false || userMarkList_Details.previous_data == ''){
					models.userMarkList.findAll({
						where : {
							user_id : req.User.id,
							type:req.query.degreeName,
							app_id : {
								[Op.eq] : null
							},source : 'guattestation'
						}
					}).then(function(userMarkList_data){
						if(userMarkList_data.length > 0){
							userMarkList_data.forEach(function(userMarkList) {
								if(userMarkList.collegeId != '' && userMarkList.collegeId != null){
									models.College.find({
										where:{
											id : userMarkList.collegeId
										}
									}).then(function(college){
										userMarkListDetails.push({
											id: userMarkList.id,
											faculty: userMarkList.faculty,
											user_id: userMarkList.user_id,
											type : userMarkList.type,
											patteren : userMarkList.patteren,
											collegeName : college.name,
											collegeId : userMarkList.collegeId,
											college_stream : userMarkList.college_stream_type,
											name : userMarkList.name,
											app_id : userMarkList.app_id,
											enrollment :  userMarkList.enrollment_number
										});
									})
								}else{
									userMarkListDetails.push({
										id: userMarkList.id,
										faculty: userMarkList.faculty,
										user_id: userMarkList.user_id,
										type : userMarkList.type,
										patteren : userMarkList.patteren,
										college_stream : userMarkList.college_stream_type,
										name : userMarkList.name,
										app_id : null,
										enrollment : userMarkList.enrollment_number
									});
								}
							});
						}
						setTimeout(function() {
							res.json({
								status : 200,
								data : userMarkListDetails,
							})
						}, 1500);
					})
				}
			}else{
				res.json({
					status : 200,
					data : userMarkListDetails
				})
			}
		})
	}
});

// router.get('/getuserEducationDetails',middlewares.getUserInfo,function(req,res){
// 	console.log('/getuserEducationDetails');
// 	var view_data=[];
// 	var userMarkList_uploads = [];
// 	var more_marksheets = [];
// 	var usermarklist_data = [];
// 	var filename;
// 	var filePath;
// 	const s3 = new AWS.S3({
// 		endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 		accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 		secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 		s3BucketEndpoint: true,
// 	});

// 	// const file = req.files.file
// 	// const { name, mimetype, size, data } = file
// 	// const fileContent  = Buffer.from(data, ' ');
// 	s3.listObjectsV2({
// 		Bucket: "muattestation",
// 	}, function (err, data) {
// 		if (err) {
// 			res.json({status :500})
// 		} else {
// 			// Return the list ("Contents") as JSON
// 			usermarklist_data = data.Contents
// 			// res.json({status :200,
// 			//     data : data.Contents})


// 	if(req.query.editFlag == 'true'){
// 		models.UserMarklist_Upload.findAll({
// 			where :{
// 				user_id : req.User.id,
// 				education_type : req.query.degreeValue
// 			}
// 		}).then(function(userMarkListUploads){
// 			if(userMarkListUploads.length > 0){
// 				userMarkListUploads.forEach(userMarklistUpload=>{
// 					if(userMarklistUpload.app_id != null){
// 						var app_idArr = userMarklistUpload.app_id.split(',');
// 						app_idArr.forEach(app_id=>{
// 							if(app_id == req.query.app_id){
// 								userMarkList_uploads.push(userMarklistUpload);
// 							}
// 						})
// 					}
// 				});
// 				if(userMarkList_uploads.length > 0){
// 					userMarkList_uploads.forEach(userMarkList_upload=>{
// 						models.userMarkList.find({
// 							where : {
// 								id : userMarkList_upload.user_marklist_id,
// 							}
// 						}).then(function(userMarklist){
// 							if(userMarklist){
// 								models.College.find({
// 									where :{
// 										id : userMarklist.collegeId
// 									}
// 								}).then(function(college){
// 									usermarklist_data.forEach(function (data){
// 										// console.log("data == = >" + data);
// 										if(data.ETag.includes(userMarklist_upload.file_name)){
// 												filename = JSON.parse(data.ETag);
// 												filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
// 										}else if(userMarkList_upload.file_name.includes('.')) {
// 											filename = constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarkList_upload.file_name,
// 											 filePath = constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarkList_upload.file_name
// 										}
// 									})
// 									if(userMarkList_upload.name.includes("_Attempt_")){
// 										more_marksheets.push({
// 											faculty:userMarklist.faculty,
// 											pattern:userMarklist.patteren,
// 											collegeId:college.id,
// 											collegeName:college.name,
// 											education_type:userMarklist.type,
// 											user_marklistid:userMarklist.id,
// 											selectDifferent:userMarklist.college_stream_type,
// 											patternName:userMarkList_upload.name,
// 											filePath :filePath,
// 											filename : filename,
// 											// filename : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarkList_upload.file_name,
// 											lock_transcript : userMarkList_upload.lock_transcript,
// 											doc_id : userMarkList_upload.id,
// 											upload_step : userMarkList_upload.upload_step,
// 											app_id : userMarkList_upload.app_id
// 										});
// 									}else{
// 										view_data.push({
// 											faculty:userMarklist.faculty,
// 											pattern:userMarklist.patteren,
// 											collegeId:college.id,
// 											collegeName:college.name,
// 											education_type:userMarklist.type,
// 											user_marklistid:userMarklist.id,
// 											selectDifferent:userMarklist.college_stream_type,
// 											patternName:userMarkList_upload.name,
// 											filePath : filePath,
// 											filename : filename,
// 											// filename : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarkList_upload.file_name,
// 											lock_transcript : userMarkList_upload.lock_transcript,
// 											doc_id : userMarkList_upload.id,
// 											upload_step : userMarkList_upload.upload_step,
// 											app_id : userMarkList_upload.app_id
// 										});
// 									}

// 								})
// 							}
// 						})
// 					})

// 					models.userMarkList.findAll({
// 						where:{
// 							user_id : req.User.id,
// 							type: req.query.degreeValue,
// 							app_id :{
// 								[Op.ne]: null
// 							}
// 						}
// 					}).then(function(userMarkLists){
// 						userMarkLists.forEach(userMarklist=>{
// 							models.College.find({
// 								where :{
// 									id : userMarklist.collegeId
// 								}
// 							}).then(function(college){
// 								if(view_data.length > 0){
// 									if(userMarklist.college_stream_type == true){
// 										var flag = false;
// 										var name = userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name
// 										view_data.forEach(vData=>{
// 											if(name == vData.patternName){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 												filePath : null,
// 												filename : null,
// 												lock_transcript :  null,
// 												doc_id : null,
// 												upload_step : null,
// 												app_id : null
// 											});
// 										}
// 									}else if(userMarklist.college_stream_type == false){
// 										models.Program_List.find({
// 											where :{
// 												faculty : userMarklist.faculty,
// 												degree : userMarklist.type
// 											}
// 										}).then(function(facultyMaster){
// 											var totalDocument = 0;
// 											if(userMarklist.patteren == 'Semester'){

// 												totalDocument = facultyMaster.year * 2;
// 												for(var i = 1; i <= totalDocument; i++){
// 													var flag = false;
// 													var name = userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i
// 													view_data.forEach(vData=>{
// 														if(name == vData.patternName){
// 															flag = true;
// 														}
// 													})
// 													if(flag == false){
// 														view_data.push({
// 															faculty:userMarklist.faculty,
// 															pattern:userMarklist.patteren,
// 															collegeId:college.id,
// 															collegeName:college.name,
// 															education_type:userMarklist.type,
// 															user_marklistid:userMarklist.id,
// 															selectDifferent:userMarklist.college_stream_type,
// 															patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 															filePath : null,
// 															filename : null,
// 															lock_transcript :  null,
// 															doc_id : null,
// 															upload_step : null,
// 															app_id : null
// 														});
// 													}
// 												}

// 											}else if(userMarklist.patteren == 'Annual'){
// 												totalDocument = facultyMaster.year;
// 												for(var i = 1; i <= totalDocument; i++){
// 													var year = converter.toWordsOrdinal(i);
// 													var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 													var flag = false;
// 													var name = userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year";
// 													view_data.forEach(vData=>{
// 														if(name == vData.patternName){
// 															flag = true;
// 														}
// 													})
// 													if(flag == false){
// 														view_data.push({
// 															faculty:userMarklist.faculty,
// 															pattern:userMarklist.patteren,
// 															collegeId:college.id,
// 															collegeName:college.name,
// 															education_type:userMarklist.type,
// 															user_marklistid:userMarklist.id,
// 															selectDifferent:userMarklist.college_stream_type,
// 															patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 															filePath : null,
// 															filename : null,
// 															lock_transcript :  null,
// 															doc_id : null,
// 															upload_step : null,
// 															app_id : null
// 														});
// 													}
// 												}
// 											}
// 										})
// 									}
// 								}else{
// 									if(userMarklist.college_stream_type == true){
// 										view_data.push({
// 											faculty:userMarklist.faculty,
// 											pattern:userMarklist.patteren,
// 											collegeId:college.id,
// 											collegeName:college.name,
// 											education_type:userMarklist.type,
// 											user_marklistid:userMarklist.id,
// 											selectDifferent:userMarklist.college_stream_type,
// 											patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 											filePath : null,
// 											filename : null,
// 											lock_transcript :  null,
// 											doc_id : null,
// 											upload_step : null,
// 											app_id : null
// 										});
// 									}else if(userMarklist.college_stream_type == false){
// 										models.Program_List.find({
// 											where :{
// 												faculty : userMarklist.faculty,
// 												degree : userMarklist.type
// 											}
// 										}).then(function(facultyMaster){
// 											var totalDocument = 0;
// 											if(userMarklist.patteren == 'Semester'){
// 												totalDocument = facultyMaster.year * 2;
// 												for(var i = 1; i <= totalDocument; i++){
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 														filePath : null,
// 														filename : null,
// 														lock_transcript :  null,
// 														doc_id : null,
// 														upload_step : null,
// 														app_id : null
// 													});
// 												}

// 											}else if(userMarklist.patteren == 'Annual'){
// 												totalDocument = facultyMaster.year;
// 												for(var i = 1; i <= totalDocument; i++){
// 													var year = converter.toWordsOrdinal(i);
// 													var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 														filePath : null,
// 														filename : null,
// 														lock_transcript :  null,
// 														doc_id : null,
// 														upload_step : null,
// 														app_id : null
// 													});
// 												}
// 											}
// 										})
// 									}
// 								}
// 							})
// 						})
// 					})


// 				}else{
// 					models.userMarkList.findAll({
// 						where:{
// 							user_id : req.User.id,
// 							type: req.query.degreeValue
// 						}
// 					}).then(function(userMarkLists){
// 						userMarkLists.forEach(userMarklist=>{
// 							models.UserMarklist_Upload.findAll({
// 								where :{
// 									user_marklist_id : userMarklist.id
// 								}
// 							}).then(function(UserMarklist_Uploads){
// 								models.College.find({
// 									where :{
// 										id : userMarklist.collegeId
// 									}
// 								}).then(function(college){
// 									usermarklist_data.forEach(function (data){
// 										// console.log("data == = >" + data);
// 										if(data.ETag.includes(userMarklist.file_name)){
// 												filename = JSON.parse(data.ETag);
// 												filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
// 										}else if(userMarklist.file_name.includes('.')){
// 											 filename= (userMarklist) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist.file_name : null,
// 											 filePath = (userMarklist) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist.file_name : null
// 										}
// 									})
// 									if(UserMarklist_Uploads.length > 0){
// 										UserMarklist_Uploads.forEach(userMarklist_upload=>{
// 											if(userMarklist_upload.name.includes("_Attempt_")){
// 												more_marksheets.push({
// 													faculty:userMarklist.faculty,
// 													pattern:userMarklist.patteren,
// 													collegeId:college.id,
// 													collegeName:college.name,
// 													education_type:userMarklist.type,
// 													user_marklistid:userMarklist.id,
// 													selectDifferent:userMarklist.college_stream_type,
// 													patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 													filePath :filePath,
// 													filename : filename,
// 													// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 													lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 													doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 													upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 													app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 												});
// 											}else{
// 												view_data.push({
// 													faculty:userMarklist.faculty,
// 													pattern:userMarklist.patteren,
// 													collegeId:college.id,
// 													collegeName:college.name,
// 													education_type:userMarklist.type,
// 													user_marklistid:userMarklist.id,
// 													selectDifferent:userMarklist.college_stream_type,
// 													patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 													filePath : filePath,
// 													filename : filename,
// 													// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 													lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 													doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 													upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 													app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 												});
// 											}
// 										})
// 									}else{
// 										if(userMarklist.college_stream_type == true){
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 												filePath : null,
// 												filename : null,
// 												lock_transcript :  null,
// 												doc_id : null,
// 												upload_step : null,
// 												app_id : null
// 											});
// 										}else if(userMarklist.college_stream_type == false){
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName: null,
// 												filePath : null,
// 												filename : null,
// 												lock_transcript :  null,
// 												doc_id : null,
// 												upload_step : null,
// 												app_id : null
// 											});
// 										}
// 									}
// 								})
// 							})
// 						})
// 					})
// 				}

// 			}else{
// 				var userMarkLists = [];
// 				models.userMarkList.findAll({
// 					where:{
// 						user_id : req.User.id,
// 						type: req.query.degreeValue
// 					}
// 				}).then(function(userMarkLists_data){
// 					userMarkLists_data.forEach(userMarklist=>{
// 						if(userMarklist.app_id != null){
// 							var app_idArr = userMarklist.app_id.split(',');
// 							app_idArr.forEach(app_id=>{
// 								if(app_id == req.query.app_id){
// 									userMarkLists.push(userMarklist);
// 								}
// 							})
// 						}
// 					});
// 					userMarkLists.forEach(userMarklist=>{
// 						models.UserMarklist_Upload.findAll({
// 							where :{
// 								user_marklist_id : userMarklist.id
// 							}
// 						}).then(function(UserMarklist_Uploads){
// 							models.College.find({
// 								where :{
// 									id : userMarklist.collegeId
// 								}
// 							}).then(function(college){
// 								usermarklist_data.forEach(function (data){
// 									// console.log("data == = >" + data);
// 									if(data.ETag.includes(userMarklist.file_name)){
// 											filename = JSON.parse(data.ETag);
// 											filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
// 									}else if(userMarklist.file_name.includes('.')){
// 										 filename= (userMarklist) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist.file_name : null,
// 										 filePath = (userMarklist) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist.file_name : null
// 									}
// 								})
// 								if(UserMarklist_Uploads.length > 0){
// 									UserMarklist_Uploads.forEach(userMarklist_upload=>{
// 										if(userMarklist_upload.name.includes("_Attempt_")){
// 											more_marksheets.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 												filePath : filePath,
// 												filename : filename,
// 												// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 												lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 												doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 												upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 												app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 											});
// 										}else{
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 												filePath : filePath,
// 												filename : filename,
// 												// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 												lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 												doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 												upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 												app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 											});
// 										}
// 									})
// 								}else{
// 									if(userMarklist.college_stream_type == true){
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 												filePath : null,
// 												filename : null,
// 												lock_transcript :  null,
// 												doc_id : null,
// 												upload_step : null,
// 												app_id : null
// 											});
// 										}else if(userMarklist.college_stream_type == false){
// 											models.Program_List.find({
// 												where :{
// 													faculty : userMarklist.faculty,
// 													degree : userMarklist.type
// 												}
// 											}).then(function(facultyMaster){
// 												var totalDocument = 0;
// 												if(userMarklist.patteren == 'Semester'){
// 													totalDocument = facultyMaster.year * 2;
// 													for(var i = 1; i <= totalDocument; i++){
// 														view_data.push({
// 															faculty:userMarklist.faculty,
// 															pattern:userMarklist.patteren,
// 															collegeId:college.id,
// 															collegeName:college.name,
// 															education_type:userMarklist.type,
// 															user_marklistid:userMarklist.id,
// 															selectDifferent:userMarklist.college_stream_type,
// 															patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 															filePath : null,
// 															filename : null,
// 															lock_transcript :  null,
// 															doc_id : null,
// 															upload_step : null,
// 															app_id : null
// 														});
// 													}

// 												}else if(userMarklist.patteren == 'Annual'){
// 													totalDocument = facultyMaster.year;
// 													for(var i = 1; i <= totalDocument; i++){
// 														var year = converter.toWordsOrdinal(i);
// 														var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 														view_data.push({
// 															faculty:userMarklist.faculty,
// 															pattern:userMarklist.patteren,
// 															collegeId:college.id,
// 															collegeName:college.name,
// 															education_type:userMarklist.type,
// 															user_marklistid:userMarklist.id,
// 															selectDifferent:userMarklist.college_stream_type,
// 															patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 															filePath : null,
// 															filename : null,
// 															lock_transcript :  null,
// 															doc_id : null,
// 															upload_step : null,
// 															app_id : null
// 														});
// 													}
// 												}
// 											})
// 										}
// 									// }

// 								}
// 							})
// 						})
// 					})
// 				})
// 			}
// 			setTimeout(()=>{
// 				res.json({
// 					status : 200,
// 					data : view_data,
// 					more_marksheets : more_marksheets
// 				})
// 			},3000)
// 		})
// 	}else{
// 		models.userMarkList.find({
// 				where:{
// 					user_id : req.User.id,
// 				}
// 			}).then(function(userMarkList){
// 				if(userMarkList){
// 					if(userMarkList.previous_data == true){
// 						models.userMarkList.findAll({
// 							where:{
// 								user_id : req.User.id,
// 								type: req.query.degreeValue
// 							}
// 						}).then(function(userMarkLists){
// 							userMarkLists.forEach(userMarklist=>{
// 								models.UserMarklist_Upload.findAll({
// 									where :{
// 										user_marklist_id : userMarklist.id
// 									}
// 								}).then(function(UserMarklist_Uploads){
// 									models.College.find({
// 										where :{
// 											id : userMarklist.collegeId
// 										}
// 									}).then(function(college){
// 										if(UserMarklist_Uploads.length > 0){
// 											UserMarklist_Uploads.forEach(userMarklist_upload=>{
// 												usermarklist_data.forEach(function (data){
// 													// console.log("data == = >" + data);
// 													if(data.ETag.includes(userMarklist_upload.file_name)){
// 															filename = JSON.parse(data.ETag);
// 															filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
// 													}else if(userMarklist_upload.file_name.includes('.')){
// 														filename = (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														 filePath = (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null
// 													}
// 												})

// 												if(userMarklist_upload.name.includes("_Attempt_")){
// 													console.log("in more marksheeets == > ");
// 													more_marksheets.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 														filePath : filePath,
// 														filename : filename,
// 														// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 													});
// 												}else{
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 														filePath : filePath,
// 														filename : filename,
// 														// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 													});
// 												}
// 											})

// 											if(userMarklist.college_stream_type == true){
// 												var patternName = userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name;
// 												var availFlag = false;
// 												view_data.forEach(data=>{
// 													if(data.patternName == patternName){
// 														availFlag = true;
// 													}
// 												})
// 												if(availFlag == false){
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName: patternName,
// 														filePath : null,
// 														filename : null,
// 														lock_transcript :  null,
// 														doc_id : null,
// 														upload_step : null,
// 														app_id : null
// 													});
// 												}
// 											}else if(userMarklist.college_stream_type == false){
// 												models.Program_List.find({
// 													where :{
// 														faculty : userMarklist.faculty,
// 														degree : userMarklist.type
// 													}
// 												}).then(function(facultyMaster){
// 													var totalDocument = 0;
// 													if(userMarklist.patteren == 'Semester'){
// 														totalDocument = facultyMaster.year * 2;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var patternName = userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i;
// 															var availFlag = false;
// 															view_data.forEach(data=>{
// 																if(data.patternName == patternName){
// 																	availFlag = true;
// 																}
// 															})
// 															if(availFlag == false){
// 																view_data.push({
// 																	faculty:userMarklist.faculty,
// 																	pattern:userMarklist.patteren,
// 																	collegeId:college.id,
// 																	collegeName:college.name,
// 																	education_type:userMarklist.type,
// 																	user_marklistid:userMarklist.id,
// 																	selectDifferent:userMarklist.college_stream_type,
// 																	patternName: patternName,
// 																	filePath : null,
// 																	filename : null,
// 																	lock_transcript :  null,
// 																	doc_id : null,
// 																	upload_step : null,
// 																	app_id : null
// 																});
// 															}
// 														}
// 													}else if(userMarklist.patteren == 'Annual'){
// 														totalDocument = facultyMaster.year;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var year = converter.toWordsOrdinal(i);
// 															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 															var patternName = userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year"
// 															var availFlag = false;
// 															view_data.forEach(data=>{
// 																if(data.patternName == patternName){
// 																	availFlag = true;
// 																}
// 															})
// 															if(availFlag == false){
// 																view_data.push({
// 																	faculty:userMarklist.faculty,
// 																	pattern:userMarklist.patteren,
// 																	collegeId:college.id,
// 																	collegeName:college.name,
// 																	education_type:userMarklist.type,
// 																	user_marklistid:userMarklist.id,
// 																	selectDifferent:userMarklist.college_stream_type,
// 																	patternName: patternName,
// 																	filePath : null,
// 																	filename : null,
// 																	lock_transcript :  null,
// 																	doc_id : null,
// 																	upload_step : null,
// 																	app_id : null
// 																});
// 															}
// 														}
// 													}
// 												})
// 											}
// 										}else{
// 											if(userMarklist.college_stream_type == true){
// 												view_data.push({
// 													faculty:userMarklist.faculty,
// 													pattern:userMarklist.patteren,
// 													collegeId:college.id,
// 													collegeName:college.name,
// 													education_type:userMarklist.type,
// 													user_marklistid:userMarklist.id,
// 													selectDifferent:userMarklist.college_stream_type,
// 													patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 													filePath : null,
// 													filename : null,
// 													lock_transcript :  null,
// 													doc_id : null,
// 													upload_step : null,
// 													app_id : null
// 												});
// 											}else if(userMarklist.college_stream_type == false){
// 												models.Program_List.find({
// 													where :{
// 														faculty : userMarklist.faculty,
// 														degree : userMarklist.type
// 													}
// 												}).then(function(facultyMaster){
// 													var totalDocument = 0;
// 													if(userMarklist.patteren == 'Semester'){
// 														totalDocument = facultyMaster.year * 2;
// 														for(var i = 1; i <= totalDocument; i++){
// 															view_data.push({
// 																faculty:userMarklist.faculty,
// 																pattern:userMarklist.patteren,
// 																collegeId:college.id,
// 																collegeName:college.name,
// 																education_type:userMarklist.type,
// 																user_marklistid:userMarklist.id,
// 																selectDifferent:userMarklist.college_stream_type,
// 																patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 																filePath : null,
// 																filename : null,
// 																lock_transcript :  null,
// 																doc_id : null,
// 																upload_step : null,
// 																app_id : null
// 															});
// 														}

// 													}else if(userMarklist.patteren == 'Annual'){
// 														totalDocument = facultyMaster.year;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var year = converter.toWordsOrdinal(i);
// 															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 															view_data.push({
// 																faculty:userMarklist.faculty,
// 																pattern:userMarklist.patteren,
// 																collegeId:college.id,
// 																collegeName:college.name,
// 																education_type:userMarklist.type,
// 																user_marklistid:userMarklist.id,
// 																selectDifferent:userMarklist.college_stream_type,
// 																patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 																filePath : null,
// 																filename : null,
// 																lock_transcript :  null,
// 																doc_id : null,
// 																upload_step : null,
// 																app_id : null
// 															});
// 														}
// 													}
// 												})
// 											}
// 										}
// 									})
// 								})
// 							})
// 						})
// 					}else{
// 						models.userMarkList.findAll({
// 							where:{
// 								user_id : req.User.id,
// 								type: req.query.degreeValue,
// 								app_id :{
// 									[Op.eq] : null
// 								}
// 							}
// 						}).then(function(userMarkLists){
// 							userMarkLists.forEach(userMarklist=>{
// 								models.UserMarklist_Upload.findAll({
// 									where :{
// 										user_marklist_id : userMarklist.id
// 									}
// 								}).then(function(UserMarklist_Uploads){
// 									models.College.find({
// 										where :{
// 											id : userMarklist.collegeId
// 										}
// 									}).then(function(college){
// 										if(UserMarklist_Uploads.length > 0){
// 											UserMarklist_Uploads.forEach(userMarklist_upload=>{
// 												// setTimeout(()=>{
// 												usermarklist_data.forEach(function (data){

// 														if(data.ETag.includes(userMarklist_upload.file_name)){
// 																filename = JSON.parse(data.ETag);
// 																filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
// 																 console.log("filePath of filePath"+ filePath);
// 														}else if(userMarklist_upload.file_name.includes('.')){
// 															console.log("ncn");
// 															filePath =(userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null;
// 															filename= (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null
// 														}
// 													})
// 												// },3000)
// 												if(userMarklist_upload.name.includes("_Attempt_")){

// 													more_marksheets.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 														// filePath : (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														filePath : filePath,
// 														// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														filename : filename,
// 														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 													});
// 												}else{
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 														filePath :filePath,
// 														// filePath : (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														filename : filename,
// 														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 													});
// 												}
// 											})
// 											if(userMarklist.college_stream_type == true){
// 												var patternName = userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name;
// 												var availFlag = false;
// 												view_data.forEach(data=>{
// 													if(data.patternName == patternName){
// 														availFlag = true;
// 													}
// 												})
// 												if(availFlag == false){
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName: patternName,
// 														filePath : null,
// 														filename : null,
// 														lock_transcript :  null,
// 														doc_id : null,
// 														upload_step : null,
// 														app_id : null
// 													});
// 												}
// 											}else if(userMarklist.college_stream_type == false){
// 												models.Program_List.find({
// 													where :{
// 														faculty : userMarklist.faculty,
// 														degree : userMarklist.type
// 													}
// 												}).then(function(facultyMaster){
// 													var totalDocument = 0;
// 													if(userMarklist.patteren == 'Semester'){
// 														totalDocument = facultyMaster.year * 2;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var patternName = userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i;
// 															var availFlag = false;
// 															view_data.forEach(data=>{
// 																if(data.patternName == patternName){
// 																	availFlag = true;
// 																}
// 															})
// 															if(availFlag == false){
// 																view_data.push({
// 																	faculty:userMarklist.faculty,
// 																	pattern:userMarklist.patteren,
// 																	collegeId:college.id,
// 																	collegeName:college.name,
// 																	education_type:userMarklist.type,
// 																	user_marklistid:userMarklist.id,
// 																	selectDifferent:userMarklist.college_stream_type,
// 																	patternName: patternName,
// 																	filePath : null,
// 																	filename : null,
// 																	lock_transcript :  null,
// 																	doc_id : null,
// 																	upload_step : null,
// 																	app_id : null
// 																});
// 															}
// 														}
// 													}else if(userMarklist.patteren == 'Annual'){
// 														totalDocument = facultyMaster.year;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var year = converter.toWordsOrdinal(i);
// 															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 															var patternName = userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year"
// 															var availFlag = false;
// 															view_data.forEach(data=>{
// 																if(data.patternName == patternName){
// 																	availFlag = true;
// 																}
// 															})
// 															if(availFlag == false){
// 																view_data.push({
// 																	faculty:userMarklist.faculty,
// 																	pattern:userMarklist.patteren,
// 																	collegeId:college.id,
// 																	collegeName:college.name,
// 																	education_type:userMarklist.type,
// 																	user_marklistid:userMarklist.id,
// 																	selectDifferent:userMarklist.college_stream_type,
// 																	patternName: patternName,
// 																	filePath : null,
// 																	filename : null,
// 																	lock_transcript :  null,
// 																	doc_id : null,
// 																	upload_step : null,
// 																	app_id : null
// 																});
// 															}
// 														}
// 													}
// 												})
// 											}
// 										}else{
// 											if(userMarklist.college_stream_type == true){
// 												view_data.push({
// 													faculty:userMarklist.faculty,
// 													pattern:userMarklist.patteren,
// 													collegeId:college.id,
// 													collegeName:college.name,
// 													education_type:userMarklist.type,
// 													user_marklistid:userMarklist.id,
// 													selectDifferent:userMarklist.college_stream_type,
// 													patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 													filePath : null,
// 													filename : null,
// 													lock_transcript :  null,
// 													doc_id : null,
// 													upload_step : null,
// 													app_id : null
// 												});
// 											}else if(userMarklist.college_stream_type == false){
// 												models.Program_List.find({
// 													where :{
// 														faculty : userMarklist.faculty,
// 														degree : userMarklist.type
// 													}
// 												}).then(function(facultyMaster){
// 													var totalDocument = 0;
// 													if(userMarklist.patteren == 'Semester'){
// 														totalDocument = facultyMaster.year * 2;
// 														for(var i = 1; i <= totalDocument; i++){
// 															view_data.push({
// 																faculty:userMarklist.faculty,
// 																pattern:userMarklist.patteren,
// 																collegeId:college.id,
// 																collegeName:college.name,
// 																education_type:userMarklist.type,
// 																user_marklistid:userMarklist.id,
// 																selectDifferent:userMarklist.college_stream_type,
// 																patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 																filePath : null,
// 																filename : null,
// 																lock_transcript :  null,
// 																doc_id : null,
// 																upload_step : null,
// 																app_id : null
// 															});
// 														}

// 													}else if(userMarklist.patteren == 'Annual'){
// 														totalDocument = facultyMaster.year;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var year = converter.toWordsOrdinal(i);
// 															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 															view_data.push({
// 																faculty:userMarklist.faculty,
// 																pattern:userMarklist.patteren,
// 																collegeId:college.id,
// 																collegeName:college.name,
// 																education_type:userMarklist.type,
// 																user_marklistid:userMarklist.id,
// 																selectDifferent:userMarklist.college_stream_type,
// 																patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 																filePath : null,
// 																filename : null,
// 																lock_transcript :  null,
// 																doc_id : null,
// 																upload_step : null,
// 																app_id : null
// 															});
// 														}
// 													}
// 												})
// 											}
// 										}
// 									})
// 								})
// 							})
// 						})
// 					}
// 				}
// 				setTimeout(()=>{
// 					res.json({
// 						status : 200,
// 						data : view_data,
// 						more_marksheets : more_marksheets
// 					})
// 				},3000);
// 			})

// 	}
// }
// })
// });

router.get('/getuserEducationDetails',middlewares.getUserInfo,function(req,res){
	console.log('/getuserEducationDetails');
	var view_data=[];
	var userMarkList_uploads = [];
	var more_marksheets = [];



	if(req.query.editFlag == 'true'){
		models.userMarkList.find({
			where:{
				user_id : req.User.id,
				app_id :{
					[Op.ne] : null
				},source : 'guattestation'
			}
		}).then(function(userMarkList){
			if(userMarkList){
					models.userMarkList.findAll({
						where:{
							user_id : req.User.id,
							type: req.query.degreeValue,
							app_id :{
								[Op.ne] : null
							},source : 'guattestation'
						}
					}).then(function(userMarkLists){
						userMarkLists.forEach(userMarklist=>{
							models.UserMarklist_Upload.findAll({
								where :{
									user_marklist_id : userMarklist.id,source : 'guattestation'
								}
							}).then(function(UserMarklist_Uploads){
								models.College.find({
									where :{
										id : userMarklist.collegeId
									}
								}).then(function(college){
									if(UserMarklist_Uploads.length > 0){
										UserMarklist_Uploads.forEach(userMarklist_upload=>{
											if(userMarklist_upload.name.includes("_Attempt_")){
												more_marksheets.push({
													faculty:userMarklist.faculty,
													pattern:userMarklist.patteren,
													collegeId:college.id,
													collegeName:college.name,
													education_type:userMarklist.type,
													user_marklistid:userMarklist.id,
													selectDifferent:userMarklist.college_stream_type,
													patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
													type : (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
													filePath : (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
													filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
													lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
													doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
													upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
													app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
												});
											}else{
												view_data.push({
													faculty:userMarklist.faculty,
													pattern:userMarklist.patteren,
													collegeId:college.id,
													collegeName:college.name,
													education_type:userMarklist.type,
													user_marklistid:userMarklist.id,
													selectDifferent:userMarklist.college_stream_type,
													patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
													type : (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
													filePath : (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
													filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
													lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
													doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
													upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
													app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
												});
											}
										})
										if(userMarklist.college_stream_type == true){
											var patternName = userMarklist.type+"_"+userMarklist.course_faculty + '_' + userMarklist.name;
											var availFlag = false;
											view_data.forEach(data=>{
												if(data.patternName == patternName){
													availFlag = true;
												}
											})
											if(availFlag == false){
												view_data.push({
													faculty:userMarklist.faculty,
													pattern:userMarklist.patteren,
													collegeId:college.id,
													collegeName:college.name,
													education_type:userMarklist.type,
													user_marklistid:userMarklist.id,
													selectDifferent:userMarklist.college_stream_type,
													patternName: patternName,
													type : null,
													filePath : null,
													filename : null,
													lock_transcript :  null,
													doc_id : null,
													upload_step : null,
													app_id : null
												});
											}
										}else if(userMarklist.college_stream_type == false){
											models.Program_List.find({
												where :{
													course_name : userMarklist.faculty,
													// degree : userMarklist.type
												}
											}).then(function(facultyMaster){
												var totalDocument = 0;
												if(userMarklist.patteren == 'Semester'){
													totalDocument = facultyMaster.duration * 2;
													for(var i = 1; i <= totalDocument; i++){
														var patternName = userMarklist.type+"_"+userMarklist.course_faculty+"_Semester "+ i;
														var availFlag = false;
														view_data.forEach(data=>{
															if(data.patternName == patternName){
																availFlag = true;
															}
														})
														if(availFlag == false){
															view_data.push({
																faculty:userMarklist.faculty,
																pattern:userMarklist.patteren,
																collegeId:college.id,
																collegeName:college.name,
																education_type:userMarklist.type,
																user_marklistid:userMarklist.id,
																selectDifferent:userMarklist.college_stream_type,
																patternName: patternName,
																type : null,
																filePath : null,
																filename : null,
																lock_transcript :  null,
																doc_id : null,
																upload_step : null,
																app_id : null
															});
														}
													}
												}else if(userMarklist.patteren == 'Annual'){
													totalDocument = facultyMaster.duration;
													for(var i = 1; i <= totalDocument; i++){
														var year = converter.toWordsOrdinal(i);
														var inWords = year.charAt(0).toUpperCase() + year.slice(1);
														var patternName = userMarklist.type+"_"+userMarklist.course_faculty+"_"+ inWords + " Year"
														var availFlag = false;
														view_data.forEach(data=>{
															if(data.patternName == patternName){
																availFlag = true;
															}
														})
														if(availFlag == false){
															view_data.push({
																faculty:userMarklist.faculty,
																pattern:userMarklist.patteren,
																collegeId:college.id,
																collegeName:college.name,
																education_type:userMarklist.type,
																user_marklistid:userMarklist.id,
																selectDifferent:userMarklist.college_stream_type,
																patternName: patternName,
																filePath : null,
																type : null,
																filename : null,
																lock_transcript :  null,
																doc_id : null,
																upload_step : null,
																app_id : null
															});
														}
													}
												}
											})
										}
									}else{
										if(userMarklist.college_stream_type == true){
											console.log("1111111111111111");
											models.Applied_For_Details.findAll({
												where : {
													user_id : req.User.id,
													app_id :{
														[Op.ne] : null
													},
													source : 'guattestation'
												}
											})
											models.Applicant_Marksheet.findAll({
												where : {
														user_id :   req.User.id,
														name : 'YearThird'
												}
											}).then(function (applicant_marksheet){
												console.log("userfnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn");
														if(applicant_marksheet.length > 0){
																models.edu_details.findAll({
																	where:{
		
																		user_id :  req.User.id
																	}
																}).then(function (edu_details){
																	console.log("edu_detailsedu_detailsedu_details" + JSON.stringify(edu_details));
																		var check = edu_details[0].applying_for +"_"+edu_details[0].stream+ '_' + userMarklist.name;
																		if(check == edu_details[0].applying_for+"_"+edu_details[0].stream+"_"+ userMarklist.name){
																			if(check.includes('Third Year')){
																				console.log("cxb kcxjbv kjx cv");
																				models.UserMarklist_Upload.create({
																					name: edu_details[0].applying_for+"_"+edu_details[0].stream+"_"+ userMarklist.name,
																					user_id: req.User.id,
																					user_marklist_id:userMarkLists[0].id,
																					education_type: edu_details[0].applying_for,
																					file_name: applicant_marksheet[0].file_name,
																					lock_transcript : false,
																					upload_step : "default",source : 'guattestation'
																				}).then(function (userMarklist) {
																					if (userMarklist) {
																						var src = constant.FILE_LOCATION + req.User.id + '/documents' + applicant_marksheet[0].file_name
																						var dest =constant.FILE_LOCATION+'public/upload/documents/' + req.User.id + '/' + applicant_marksheet[0].file_name
																								// fs.copyFileSync(src, dest);
																					} else {
		
																					}
		
																				});
																			}else{
																				view_data.push({
																					faculty:userMarklist.faculty,
																					pattern:userMarklist.patteren,
																					collegeId:college.id,
																					collegeName:college.name,
																					education_type:userMarklist.type,
																					user_marklistid:userMarklist.id,
																					selectDifferent:userMarklist.college_stream_type,
																					patternName: userMarklist.type+"_"+ userMarklist.course_faculty + '_' + userMarklist.name,
																					type : null,
																					filePath : null,
																					filename : null,
																					lock_transcript :  null,
																					doc_id : null,
																					upload_step : null,
																					app_id : null
																				});
																			}
																		}else{
																			view_data.push({
																				faculty:userMarklist.faculty,
																				pattern:userMarklist.patteren,
																				collegeId:college.id,
																				collegeName:college.name,
																				education_type:userMarklist.type,
																				user_marklistid:userMarklist.id,
																				selectDifferent:userMarklist.college_stream_type,
																				patternName: userMarklist.type+"_"+userMarklist.course_faculty + '_' + userMarklist.name,
																				type : null,
																				filePath : null,
																				filename : null,
																				lock_transcript :  null,
																				doc_id : null,
																				upload_step : null,
																				app_id : null
																			});
																		}
		
		
																})
														}else{
																					view_data.push({
																						faculty:userMarklist.faculty,
																						pattern:userMarklist.patteren,
																						collegeId:college.id,
																						collegeName:college.name,
																						education_type:userMarklist.type,
																						user_marklistid:userMarklist.id,
																						selectDifferent:userMarklist.college_stream_type,
																						patternName:userMarklist.type+"_"+ userMarklist.course_faculty + '_' + userMarklist.name,
																						type : null,
																						filePath : null,
																						filename : null,
																						lock_transcript :  null,
																						doc_id : null,
																						upload_step : null,
																						app_id : null
																					})
														}
											})
										}else if(userMarklist.college_stream_type == false){
											console.log("elseeeeeeeeeeeeeeeeee" + userMarklist.faculty);
											var semester_check;
											models.Program_List.find({
												where :{
													course_name : userMarklist.faculty,
													// degree : userMarklist.type
												}
											}).then(function(facultyMaster){
												console.log("facultyMasterfacultyMaster" + JSON.stringify(facultyMaster));
												var totalDocument = 0;
												if(userMarklist.patteren == 'Semester'){
													models.Applicant_Marksheet.findAll({
														where : {
															user_id :  req.User.id,
															name : 'YearThird'
														}
													}).then(function (applicant_marksheet){
															if(applicant_marksheet.length >0){
																models.edu_details.findAll({
																	user_id :  req.User.id
																}).then(function (edu_details){
																	totalDocument = facultyMaster.duration * 2;
																for(var i = 1; i <= totalDocument; i++){
																	if(totalDocument == '6'){
																		semester_check = '_Semester 6'
																	}else if(totalDocument == '10'){
																		semester_check = '_Semester 10'
																	}else if(totalDocument == '8'){
																		semester_check = '_Semester 8'
		
																	}else if(totalDocument == '4'){
																		semester_check = '_Semester 4'
																	}
																	var check = userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i;
																	if(check == edu_details[0].applying_for+"_"+edu_details[0].stream+"_Semester "+ i){
																		if(check.includes(semester_check)){
																						models.UserMarklist_Upload.create({
																							name  : edu_details[0].applying_for+"_"+edu_details[0].stream+"_Semester "+ i,
																							user_id: req.User.id,
																							user_marklist_id:userMarkLists[0].id,
																							education_type: edu_details[0].applying_for,
																							file_name: applicant_marksheet[0].file_name,
																							lock_transcript : false,
																							upload_step : "default",source : 'guattestation'
																						}).then(function (userMarklist) {
																							if (userMarklist) {
																								var src = constant.FILE_LOCATION + req.User.id + '/documents/' + applicant_marksheet[0].file_name
																								var dest =constant.FILE_LOCATION+'public/upload/documents/' + req.User.id + '/' + applicant_marksheet[0].file_name
																								if (!fs.existsSync(dest)) {
																									fs.mkdirSync(dest);
																								}
																								fs.copyFileSync(src, dest);
																							} else {
																								view_data.push({
																									faculty:userMarklist.stream,
																									pattern:userMarklist.patteren,
																									collegeId:college.id,
																									collegeName:college.name,
																									education_type:userMarklist.type,
																									user_marklistid:userMarklist.id,
																									selectDifferent:userMarklist.college_stream_type,
																									patternName: userMarklist.type+"_"+userMarklist.course_faculty+"_Semester "+ i,
																									type : null,
																									filePath : null,
																									filename : null,
																									lock_transcript :  null,
																									doc_id : null,
																									upload_step : null,
																									app_id : null
																								});
																							}
		
																						});
																		}else{
																			view_data.push({
																				faculty:userMarklist.stream,
																				pattern:userMarklist.patteren,
																				collegeId:college.id,
																				collegeName:college.name,
																				education_type:userMarklist.type,
																				user_marklistid:userMarklist.id,
																				selectDifferent:userMarklist.college_stream_type,
																				patternName:userMarklist.type+"_"+ userMarklist.course_faculty+"_Semester "+ i,
																				type : null,
																				filePath : null,
																				filename : null,
																				lock_transcript :  null,
																				doc_id : null,
																				upload_step : null,
																				app_id : null
																			});
																		}
																	}else{
																		view_data.push({
																			faculty:userMarklist.stream,
																			pattern:userMarklist.patteren,
																			collegeId:college.id,
																			collegeName:college.name,
																			education_type:userMarklist.type,
																			user_marklistid:userMarklist.id,
																			selectDifferent:userMarklist.college_stream_type,
																			patternName:userMarklist.type+"_"+ userMarklist.course_faculty+"_Semester "+ i,
																			type : null,
																			filePath : null,
																			filename : null,
																			lock_transcript :  null,
																			doc_id : null,
																			upload_step : null,
																			app_id : null
																		});
																	}
		
		
																}
																})
		
															}else{
																// fetch from verification
																models.DocumentDetails.findAll({
																	where  : {
																		user_id: req.User.id,
																		type : 'marksheet'
																	}
																}).then(function (document){
																	if(document.length > 0){
																		document.forEach(function (documents){
																				totalDocument = facultyMaster.duration * 2;
																				for(var i = 1; i <= totalDocument; i++){
																					var roman_number =  documents.semester.split(' ')
																					var roman = converter_roman.romanToArab(roman_number[1]);
																			if(documents.courseName.includes(userMarklist.faculty ) && documents.courseName.includes(userMarklist.type) && "Semester "+ i == 'Semester ' + roman){
																				models.UserMarklist_Upload.create({
																					name  : userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
																					user_id: req.User.id,
																					user_marklist_id:userMarkLists[0].id,
																					education_type: userMarklist.type,
																					file_name: documents.file,
																					lock_transcript : false,
																					upload_step : "default",source : 'guattestation'
																				}).then(function (userMarklist) {
																					if (userMarklist) {
																						var src = constant.FILE_LOCATION + req.User.id + '/documents/' + documents.file
																						var dest =constant.FILE_LOCATION+'public/upload/documents/' + req.User.id + '/' + documents.file
																						if (!fs.existsSync(dest)) {
																							fs.mkdirSync(dest);
																						}
																						fs.copyFileSync(src, dest);
																					} else {
																						view_data.push({
																							faculty:userMarklist.faculty,
																							pattern:userMarklist.patteren,
																							collegeId:college.id,
																							collegeName:college.name,
																							education_type:userMarklist.type,
																							user_marklistid:userMarklist.id,
																							selectDifferent:userMarklist.college_stream_type,
																							patternName: userMarklist.type+"_"+userMarklist.course_faculty+"_Semester "+ i,
																							type : null,
																							filePath : null,
																							filename : documents.file,
																							lock_transcript :  0,
																							doc_id : null,
																							upload_step : null,
																							app_id : null
																						});
																					}
		
																				});
		
																				}else{
																					totalDocument = facultyMaster.duration * 2;
																					for(var i = 1; i <= totalDocument; i++){
																						view_data.push({
																							faculty:userMarklist.faculty,
																							pattern:userMarklist.patteren,
																							collegeId:college.id,
																							collegeName:college.name,
																							education_type:userMarklist.type,
																							user_marklistid:userMarklist.id,
																							selectDifferent:userMarklist.college_stream_type,
																							patternName:userMarklist.type+"_"+ userMarklist.course_faculty+"_Semester "+ i,
																							type : null,
																							filePath : null,
																							filename : null,
																							lock_transcript :  null,
																							doc_id : null,
																							upload_step : null,
																							app_id : null
																						});
																					}
																				}
																				}
		
																		})
		
																	}else{
																		totalDocument = facultyMaster.duration * 2;
																		for(var i = 1; i <= totalDocument; i++){
																			view_data.push({
																				faculty:userMarklist.faculty,
																				pattern:userMarklist.patteren,
																				collegeId:college.id,
																				collegeName:college.name,
																				education_type:userMarklist.type,
																				user_marklistid:userMarklist.id,
																				selectDifferent:userMarklist.college_stream_type,
																				patternName:userMarklist.type+"_"+ userMarklist.course_faculty+"_Semester "+ i,
																				type : null,
																				filePath : null,
																				filename : null,
																				lock_transcript :  null,
																				doc_id : null,
																				upload_step : null,
																				app_id : null
																			});
																		}
																	}
																})
		
															}
													})
		
		
												}else if(userMarklist.patteren == 'Annual'){
													console.log("Annuallllllllll" +  req.User.id);
													models.Applicant_Marksheet.findAll({
														where :{
															user_id : req.User.id,
															name  : 'YearThird'
														}
													}).then(function (applicant_marksheet){
																if(applicant_marksheet.length > 0){
																		models.edu_details.findAll({
																			where : {
																				user_id :  req.User.id
																			}
																		}).then(function (edu_details){
																			console.log("eduuu detai;ssssss");
																			totalDocument = facultyMaster.duration;
																			for(var i = 1; i <= totalDocument; i++){
																				var year = converter.toWordsOrdinal(i);
																				var inWords = year.charAt(0).toUpperCase() + year.slice(1);
																				var check =  userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year";
																				console.log("checkcheckcheckcheckcheck" +  edu_details[0].applying_for+"_"+edu_details[0].stream+"_"+ inWords + " Year");
																				
																				if(check == edu_details[0].applying_for+"_"+edu_details[0].stream+"_"+ inWords + " Year"){
																					if(check.includes('Third Year')){
																						models.UserMarklist_Upload.create({
																							name: edu_details[0].applying_for+"_"+edu_details[0].stream+"_"+ inWords + " Year",
																							user_id: req.User.id,
																							user_marklist_id:userMarkLists[0].id,
																							education_type: edu_details[0].applying_for,
																							file_name: applicant_marksheet[0].file_name,
																							lock_transcript : false,
																							upload_step : "default",source : 'guattestation'
																						}).then(function (userMarklist) {
																							if (userMarklist) {
																								var src = constant.FILE_LOCATION + req.User.id + '/documents' + applicant_marksheet[0].file_name
																								var dest =constant.FILE_LOCATION+'public/upload/documents/' + req.User.id + '/' + applicant_marksheet[0].file_name
																								if (!fs.existsSync(dest)) {
																									fs.mkdirSync(dest);
																								}
																								fs.copyFileSync(src, dest);
																							} else {
		
																							}
		
																						});
																					}else{
																						view_data.push({
																							faculty:userMarklist.faculty,
																							pattern:userMarklist.patteren,
																							collegeId:college.id,
																							collegeName:college.name,
																							education_type:userMarklist.type,
																							user_marklistid:userMarklist.id,
																							selectDifferent:userMarklist.college_stream_type,
																							patternName:userMarklist.type+"_"+ userMarklist.course_faculty+"_"+ inWords + " Year",
																							type : null,
																							filePath : null,
																							filename : null,
																							lock_transcript :  null,
																							doc_id : null,
																							upload_step : null,
																							app_id : null
																						});
																					}
																				}else{
																					view_data.push({
																						faculty:userMarklist.faculty,
																						pattern:userMarklist.patteren,
																						collegeId:college.id,
																						collegeName:college.name,
																						education_type:userMarklist.type,
																						user_marklistid:userMarklist.id,
																						selectDifferent:userMarklist.college_stream_type,
																						patternName: userMarklist.type+"_"+userMarklist.course_faculty+"_"+ inWords + " Year",
																						type : null,
																						filePath : null,
																						filename : null,
																						lock_transcript :  null,
																						doc_id : null,
																						upload_step : null,
																						app_id : null
																					});
																				}
		
		
																			}
																		})
		
		
																	// }
																}else{
																	models.DocumentDetails.findAll({
																		where : {
																			user_id: req.User.id,
																			type : 'marksheet'
																		}
																	}).then(function (document_details){
																				if(document_details.length > 0){
																					var stream;
																						totalDocument = facultyMaster.duration;
																						for(var i = 1; i <= totalDocument; i++){
																							var year = converter.toWordsOrdinal(i);
																							var inWords = year.charAt(0).toUpperCase() + year.slice(1);
		
																							document_details.forEach(function (documents){
																								var check =  userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year";
																									if(documents.courseName.includes(userMarklist.type) &&  documents.courseName.includes(userMarklist.faculty) &&inWords + " Year" == documents.semester ){
																										models.UserMarklist_Upload.create({
																											name: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
																											user_id: req.User.id,
																											user_marklist_id:userMarkLists[0].id,
																											education_type: userMarklist.type,
																											file_name: documents.file,
																											lock_transcript : false,
																											upload_step : "default",source : 'guattestation'
																										}).then(function (userMarklist) {
																											if (userMarklist) {
																												var src = constant.FILE_LOCATION + req.User.id + '/documents/' + documents.file
																												var dest =constant.FILE_LOCATION+'public/upload/documents/' + req.User.id + '/' + documents.file
																												if (!fs.existsSync(dest)) {
																													fs.mkdirSync(dest);
																												}
																												fs.copyFileSync(src, dest);
																											} else {
		
																											}
		
																										});
																									}else{
		
																									}
																							})
		
		
																						}
		
																				}else{
																					totalDocument = facultyMaster.duration;
																					for(var i = 1; i <= totalDocument; i++){
																						var year = converter.toWordsOrdinal(i);
																						var inWords = year.charAt(0).toUpperCase() + year.slice(1);
																						view_data.push({
																							faculty:userMarklist.faculty,
																							pattern:userMarklist.patteren,
																							collegeId:college.id,
																							collegeName:college.name,
																							education_type:userMarklist.type,
																							user_marklistid:userMarklist.id,
																							selectDifferent:userMarklist.college_stream_type,
																							patternName: userMarklist.type+"_"+ userMarklist.course_faculty+"_"+ inWords + " Year",
																							type : null,
																							filePath : null,
																							filename : null,
																							lock_transcript :  null,
																							doc_id : null,
																							upload_step : null,
																							app_id : null
																						});
																					}
																				}
																	})
		
																}
													})
		
												}
											})
										}
									}
								})
							})
						})
					})
				
			}
			setTimeout(()=>{
				res.json({
					status : 200,
					data : view_data,
					more_marksheets : more_marksheets
				})
			},3000);
		})
	}
	else{
		models.userMarkList.find({
				where:{
					user_id : req.User.id,source : 'guattestation'
				}
			}).then(function(userMarkList){
				if(userMarkList){
						models.userMarkList.findAll({
							where:{
								user_id : req.User.id,
								type: req.query.degreeValue,
								app_id :{
									[Op.eq] : null
								},source : 'guattestation'
							}
						}).then(function(userMarkLists){
							userMarkLists.forEach(userMarklist=>{
								models.UserMarklist_Upload.findAll({
									where :{
										user_marklist_id : userMarklist.id,source : 'guattestation'
									}
								}).then(function(UserMarklist_Uploads){
									models.College.find({
										where :{
											id : userMarklist.collegeId
										}
									}).then(function(college){
										if(UserMarklist_Uploads.length > 0){
											UserMarklist_Uploads.forEach(userMarklist_upload=>{
												if(userMarklist_upload.name.includes("_Attempt_")){
													more_marksheets.push({
														faculty:userMarklist.faculty,
														pattern:userMarklist.patteren,
														collegeId:college.id,
														collegeName:college.name,
														education_type:userMarklist.type,
														user_marklistid:userMarklist.id,
														selectDifferent:userMarklist.college_stream_type,
														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
														type : (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
														filePath : (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
														filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
													});
												}else{
													view_data.push({
														faculty:userMarklist.faculty,
														pattern:userMarklist.patteren,
														collegeId:college.id,
														collegeName:college.name,
														education_type:userMarklist.type,
														user_marklistid:userMarklist.id,
														selectDifferent:userMarklist.college_stream_type,
														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
														type : (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
														filePath : (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
														filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarklist_upload.file_name : null,
														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
													});
												}
											})
											if(userMarklist.college_stream_type == true){
												var patternName = userMarklist.type+"_"+userMarklist.course_faculty + '_' + userMarklist.name;
												var availFlag = false;
												view_data.forEach(data=>{
													if(data.patternName == patternName){
														availFlag = true;
													}
												})
												if(availFlag == false){
													view_data.push({
														faculty:userMarklist.faculty,
														pattern:userMarklist.patteren,
														collegeId:college.id,
														collegeName:college.name,
														education_type:userMarklist.type,
														user_marklistid:userMarklist.id,
														selectDifferent:userMarklist.college_stream_type,
														patternName: patternName,
														type : null,
														filePath : null,
														filename : null,
														lock_transcript :  null,
														doc_id : null,
														upload_step : null,
														app_id : null
													});
												}
											}else if(userMarklist.college_stream_type == false){
												models.Program_List.find({
													where :{
														course_name : userMarklist.faculty,
														// degree : userMarklist.type
													}
												}).then(function(facultyMaster){
													var totalDocument = 0;
													if(userMarklist.patteren == 'Semester'){
														totalDocument = facultyMaster.duration * 2;
														for(var i = 1; i <= totalDocument; i++){
															var patternName = userMarklist.type+"_"+userMarklist.course_faculty+"_Semester "+ i;
															var availFlag = false;
															view_data.forEach(data=>{
																if(data.patternName == patternName){
																	availFlag = true;
																}
															})
															if(availFlag == false){
																view_data.push({
																	faculty:userMarklist.faculty,
																	pattern:userMarklist.patteren,
																	collegeId:college.id,
																	collegeName:college.name,
																	education_type:userMarklist.type,
																	user_marklistid:userMarklist.id,
																	selectDifferent:userMarklist.college_stream_type,
																	patternName: patternName,
																	type : null,
																	filePath : null,
																	filename : null,
																	lock_transcript :  null,
																	doc_id : null,
																	upload_step : null,
																	app_id : null
																});
															}
														}
													}else if(userMarklist.patteren == 'Annual'){
														totalDocument = facultyMaster.duration;
														for(var i = 1; i <= totalDocument; i++){
															var year = converter.toWordsOrdinal(i);
															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
															var patternName = userMarklist.type+"_"+userMarklist.course_faculty+"_"+ inWords + " Year"
															var availFlag = false;
															view_data.forEach(data=>{
																if(data.patternName == patternName){
																	availFlag = true;
																}
															})
															if(availFlag == false){
																view_data.push({
																	faculty:userMarklist.faculty,
																	pattern:userMarklist.patteren,
																	collegeId:college.id,
																	collegeName:college.name,
																	education_type:userMarklist.type,
																	user_marklistid:userMarklist.id,
																	selectDifferent:userMarklist.college_stream_type,
																	patternName: patternName,
																	filePath : null,
																	type : null,
																	filename : null,
																	lock_transcript :  null,
																	doc_id : null,
																	upload_step : null,
																	app_id : null
																});
															}
														}
													}
												})
											}
										}else{
											if(userMarklist.college_stream_type == true){
												console.log("1111111111111111");
												models.Applied_For_Details.findAll({
													where : {
														user_id : req.User.id,
														app_id :{
															[Op.eq] : null
														},
														source : 'guattestation'
													}
												})
												models.Applicant_Marksheet.findAll({
													where : {
															user_id :   req.User.id,
															name : 'YearThird'
													}
												}).then(function (applicant_marksheet){
													console.log("userfnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn");
															if(applicant_marksheet.length > 0){
																	models.edu_details.findAll({
																		where:{

																			user_id :  req.User.id
																		}
																	}).then(function (edu_details){
																		console.log("edu_detailsedu_detailsedu_details" + JSON.stringify(edu_details));
																			var check = edu_details[0].applying_for +"_"+edu_details[0].stream+ '_' + userMarklist.name;
																			if(check == edu_details[0].applying_for+"_"+edu_details[0].stream+"_"+ userMarklist.name){
																				if(check.includes('Third Year')){
																					console.log("cxb kcxjbv kjx cv");
																					models.UserMarklist_Upload.create({
																						name: edu_details[0].applying_for+"_"+edu_details[0].stream+"_"+ userMarklist.name,
																						user_id: req.User.id,
																						user_marklist_id:userMarkLists[0].id,
																						education_type: edu_details[0].applying_for,
																						file_name: applicant_marksheet[0].file_name,
																						lock_transcript : false,
																						upload_step : "default",
																					}).then(function (userMarklist) {
																						if (userMarklist) {
																							var src = constant.FILE_LOCATION + req.User.id + '/documents' + applicant_marksheet[0].file_name
																							var dest =constant.FILE_LOCATION+'public/upload/documents/' + req.User.id + '/' + applicant_marksheet[0].file_name
																									// fs.copyFileSync(src, dest);
																						} else {

																						}

																					});
																				}else{
																					view_data.push({
																						faculty:userMarklist.faculty,
																						pattern:userMarklist.patteren,
																						collegeId:college.id,
																						collegeName:college.name,
																						education_type:userMarklist.type,
																						user_marklistid:userMarklist.id,
																						selectDifferent:userMarklist.college_stream_type,
																						patternName: userMarklist.type+"_"+ userMarklist.course_faculty + '_' + userMarklist.name,
																						type : null,
																						filePath : null,
																						filename : null,
																						lock_transcript :  null,
																						doc_id : null,
																						upload_step : null,
																						app_id : null
																					});
																				}
																			}else{
																				view_data.push({
																					faculty:userMarklist.faculty,
																					pattern:userMarklist.patteren,
																					collegeId:college.id,
																					collegeName:college.name,
																					education_type:userMarklist.type,
																					user_marklistid:userMarklist.id,
																					selectDifferent:userMarklist.college_stream_type,
																					patternName: userMarklist.type+"_"+userMarklist.course_faculty + '_' + userMarklist.name,
																					type : null,
																					filePath : null,
																					filename : null,
																					lock_transcript :  null,
																					doc_id : null,
																					upload_step : null,
																					app_id : null
																				});
																			}


																	})
															}else{
																						view_data.push({
																							faculty:userMarklist.faculty,
																							pattern:userMarklist.patteren,
																							collegeId:college.id,
																							collegeName:college.name,
																							education_type:userMarklist.type,
																							user_marklistid:userMarklist.id,
																							selectDifferent:userMarklist.college_stream_type,
																							patternName:userMarklist.type+"_"+ userMarklist.course_faculty + '_' + userMarklist.name,
																							type : null,
																							filePath : null,
																							filename : null,
																							lock_transcript :  null,
																							doc_id : null,
																							upload_step : null,
																							app_id : null
																						})
															}
												})
											}else if(userMarkList.college_stream_type == false){
												models.Program_List.find({
													where :{
														course_name : userMarklist.faculty,
														// degree : userMarklist.type
													}
												}).then(function(facultyMaster){
													var totalDocument = 0;
													if(userMarklist.patteren == 'Semester'){
														totalDocument = facultyMaster.duration * 2;
														for(var i = 1; i <= totalDocument; i++){
															var patternName = userMarklist.type+"_"+userMarklist.course_faculty+"_Semester "+ i;
															var availFlag = false;
															view_data.forEach(data=>{
																if(data.patternName == patternName){
																	availFlag = true;
																}
															})
															if(availFlag == false){
																view_data.push({
																	faculty:userMarklist.faculty,
																	pattern:userMarklist.patteren,
																	collegeId:college.id,
																	collegeName:college.name,
																	education_type:userMarklist.type,
																	user_marklistid:userMarklist.id,
																	selectDifferent:userMarklist.college_stream_type,
																	patternName: patternName,
																	type : null,
																	filePath : null,
																	filename : null,
																	lock_transcript :  null,
																	doc_id : null,
																	upload_step : null,
																	app_id : null
																});
															}
														}
													}else if(userMarklist.patteren == 'Annual'){
														totalDocument = facultyMaster.duration;
														for(var i = 1; i <= totalDocument; i++){
															var year = converter.toWordsOrdinal(i);
															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
															var patternName = userMarklist.type+"_"+userMarklist.course_faculty+"_"+ inWords + " Year"
															var availFlag = false;
															view_data.forEach(data=>{
																if(data.patternName == patternName){
																	availFlag = true;
																}
															})
															if(availFlag == false){
																view_data.push({
																	faculty:userMarklist.faculty,
																	pattern:userMarklist.patteren,
																	collegeId:college.id,
																	collegeName:college.name,
																	education_type:userMarklist.type,
																	user_marklistid:userMarklist.id,
																	selectDifferent:userMarklist.college_stream_type,
																	patternName: patternName,
																	filePath : null,
																	type : null,
																	filename : null,
																	lock_transcript :  null,
																	doc_id : null,
																	upload_step : null,
																	app_id : null
																});
															}
														}
													}
												})
											}
										}
									})
								})
							})
						})
					
				}
				setTimeout(()=>{
					res.json({
						status : 200,
						data : view_data,
						more_marksheets : more_marksheets
					})
				},3000);
			})

	}

});

router.get('/getAttestedFor',middlewares.getUserInfo,async function(req,res){
	var applied = await functions.getAttestedFor(req.User.id);
	if(applied){
		res.json({
			data : applied.attestedfor,
			status : 200
		})
	}else{
		res.json({
			status :  400
		})
	}
})
router.get('/getUserMasterDetails',middlewares.getUserInfo, function(req, res){
		var view_data=[];
		models.userMarkList.find({
			where:{
				user_id:req.User.id,
				type:"Masters",source : 'guattestation'
			}

		}).then(function(userExist){
       if( userExist!=null && userExist!=undefined && userExist.college_stream_type==false){
		models.userMarkList.findAll({
			where:{
				user_id:req.User.id,
				type:"Masters",source : 'guattestation'
			}
		}).then(function(user){
			if(user.length>0){
				user.forEach(function(userData){
					models.College.find({
						where:{
						id:userData.collegeId
						}
					}).then(function(college){
						view_data.push({
							faculty:userData.faculty,
							pattern:userData.patteren,
							collegeId:college.id,
							collegeName:college.name,
							education_type:userData.type,
							user_marklistid:userData.id,
							selectDifferent:userData.college_stream_type,


						});
					})

				})
				setTimeout(function(){
					res.json({
						status:200,
						data:view_data
					})
				}, 1000);

			}
		});
	}else if(userExist!=null && userExist!=undefined && userExist.college_stream_type==true) {
		models.userMarkList.findAll({
			where:{
				user_id:req.User.id,
				type:"Masters",source : 'guattestation'
			}
		}).then(function(user){
			if(user.length>0){
				user.forEach(function(userData){
					models.College.find({
						where:{
						id:userData.collegeId
						}
					}).then(function(college){
						view_data.push({
							faculty:userData.faculty,
							pattern:userData.patteren,
							collegeId:college.id,
							collegeName:college.name,
							education_type:userData.type,
							user_marklistid:userData.id,
							selectDifferent:userData.college_stream_type,
							patternName:userData.name

						});
					})

				})
				setTimeout(function(){
					res.json({
						status:200,
						data:view_data
					})
				}, 1000);

			}
		});
			}
			else{
				res.json({
					status:400,
					message:'There are no details of Bachelor please add Bachelor details go to 2nd step!!..'
				})

			}

	});
});

router.get('/getUserPhdDetails',middlewares.getUserInfo, function(req, res){
	var view_data=[];
	models.userMarkList.find({
		where:{
			user_id:req.User.id,
			type:"PhD",source : 'guattestation'
		}

	}).then(function(userExist){
	if( userExist!=null && userExist!=undefined && userExist.college_stream_type==false){
	models.userMarkList.findAll({
		where:{
			user_id:req.User.id,
			type:"PhD",source : 'guattestation'
		}
	}).then(function(user){
		if(user.length>0){
			user.forEach(function(userData){
				models.College.find({
					where:{
					id:userData.collegeId
					}
				}).then(function(college){
					view_data.push({
						faculty:userData.faculty,
						pattern:userData.patteren,
						collegeId:college.id,
						collegeName:college.name,
						education_type:userData.type,
						user_marklistid:userData.id,
						selectDifferent:userData.college_stream_type,


					});
				})

			})
			setTimeout(function(){
				res.json({
					status:200,
					data:view_data
				})
			}, 1000);

		}
	});
}else if(userExist!=null && userExist!=undefined && userExist.college_stream_type==true) {
	models.userMarkList.findAll({
		where:{
			user_id:req.User.id,
			type:"PhD",source : 'guattestation'
		}
	}).then(function(user){
		if(user.length>0){
			user.forEach(function(userData){
				models.College.find({
					where:{
					id:userData.collegeId
					}
				}).then(function(college){
					view_data.push({
						faculty:userData.faculty,
						pattern:userData.patteren,
						collegeId:college.id,
						collegeName:college.name,
						education_type:userData.type,
						user_marklistid:userData.id,
						selectDifferent:userData.college_stream_type,
						patternName:userData.name

					});
				})

			})
			setTimeout(function(){
				res.json({
					status:200,
					data:view_data
				})
			}, 1000);

		}
	});
		}
		else{
			res.json({
				status:400,
				message:'There are no details of Bachelor please add Bachelor details go to 2nd step!!..'
			})

		}

});
});

router.get('/getUploadedMarklist', middlewares.getUserInfo, function(req, res){
	var marklistDataInfos =[];
	var counts = 0
	models.userMarkList.find({
		where :{
			user_id : req.User.id,
			type : 'Bachelors',source : 'guattestation'
		}
	}).then(marklistInfos => {

		if(marklistInfos){
			models.UserMarklist_Upload.getBachelorsMarksheetData(marklistInfos.user_id).then(function(marklistInfos){
		if(marklistInfos.length > 0){
			marklistInfos.forEach(marklistInfo => {
					if((marklistInfo.file_name !='null' && marklistInfo.file_name!=null && marklistInfo.file_name!='')&& (marklistInfo.usermarklist_file_name==null || marklistInfo.usermarklist_file_name=='')){
						var fileName = marklistInfo.file_name;
						var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
						filenamee = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.file_name
						fileDeletePath = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.file_name;
						MarklistId = marklistInfo.id ,
						marklistNamee = marklistInfo.name

						marklistDataInfos.push({
							user_id : marklistInfo.user_id,
							//collegeId : transcriptInfo.collegeId,
							//collegeName : clgdata.name,
							fileName : filenamee ? filenamee : '',
							fileNameShow : marklistInfo.file_name ? marklistInfo.file_name : '',
							fileDeletePath : fileDeletePath ? fileDeletePath : '',
							userUploadMarklistId :marklistInfo.id,
							marklist_name_pattern : marklistInfo.name ? marklistInfo.name : '',
							fileExtension:fileExtension ? fileExtension : '',
							education_type:marklistInfo.education_type ? marklistInfo.education_type : '',
							lock_transcript:marklistInfo.lock_transcript

						})
					}else if((marklistInfo.usermarklist_file_name !='null' && marklistInfo.usermarklist_file_name !=null && marklistInfo.usermarklist_file_name !='') && (marklistInfo.file_name ==null || marklistInfo.file_name =='')){
						var fileName = marklistInfo.usermarklist_file_name;
						var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
						filenamee = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.usermarklist_file_name
						fileDeletePath = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
						MarklistId = marklistInfo.usermarklist_id ,
						marklistNamee = marklistInfo.usermarklist_name

						marklistDataInfos.push({
							user_id : marklistInfo.usermarklist_user_id,
							//collegeId : transcriptInfo.collegeId,
							//collegeName : clgdata.name,
							fileName : filenamee ? filenamee : '',
							fileNameShow : marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
							fileDeletePath : fileDeletePath ? fileDeletePath : '',
							userUploadMarklistId :marklistInfo.usermarklist_id,
							marklist_name_pattern : marklistInfo.usermarklist_name? marklistInfo.usermarklist_name : '',
							fileExtension:fileExtension ? fileExtension : '',
							education_type:marklistInfo.type ? marklistInfo.type : '',
							lock_transcript:marklistInfo.user_lock_marklist

						})

					}else if(marklistInfo.file_name !='null' && marklistInfo.file_name!=null && marklistInfo.file_name!='' && marklistInfo.usermarklist_file_name !='null' && marklistInfo.usermarklist_file_name !=null && marklistInfo.usermarklist_file_name !=''){
						var fileName = marklistInfo.file_name;
						var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
						filenamee = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.file_name
						fileDeletePath = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.file_name;
						MarklistId = marklistInfo.id ,
						marklistNamee = marklistInfo.name

						marklistDataInfos.push({
							user_id : marklistInfo.user_id,
							//collegeId : transcriptInfo.collegeId,
							//collegeName : clgdata.name,
							fileName : filenamee ? filenamee : '',
							fileNameShow : marklistInfo.file_name ? marklistInfo.file_name : '',
							fileDeletePath : fileDeletePath ? fileDeletePath : '',
							userUploadMarklistId :marklistInfo.id,
							marklist_name_pattern : marklistInfo.name ? marklistInfo.name : '',
							fileExtension:fileExtension ? fileExtension : '',
							education_type:marklistInfo.education_type ? marklistInfo.education_type : '',
							lock_transcript:marklistInfo.lock_transcript

						})

						// var fileNamePrevious = marklistInfo.usermarklist_file_name;
						// var fileExtensionPrevious = fileNamePrevious.substr((fileName.lastIndexOf('.') + 1));
						// filenameePrevious = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.usermarklist_file_name
						// fileDeletePathPrevious = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
						// MarklistIdPrevious = marklistInfo.usermarklist_id ,
						// marklistNameePrevious = marklistInfo.usermarklist_name

						// marklistDataInfos.push({
						// 	user_id : marklistInfo.usermarklist_user_id,
						// 	//collegeId : transcriptInfo.collegeId,
						// 	//collegeName : clgdata.name,
						// 	fileName : filenameePrevious ? filenameePrevious : '',
						// 	fileNameShow : marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
						// 	fileDeletePath : fileDeletePathPrevious ? fileDeletePathPrevious : '',
						// 	userUploadMarklistId :marklistInfo.usermarklist_id,
						// 	marklist_name_pattern : marklistInfo.usermarklist_name? marklistInfo.usermarklist_name : '',
						// 	fileExtension:fileExtensionPrevious ? fileExtensionPrevious : '',
						// 	education_type:marklistInfo.type ? marklistInfo.type : '',
						// 	lock_transcript:marklistInfo.user_lock_marklist

						// })
					}

			});
			setTimeout(function(){
				res.json({
					status:200,
					data:marklistDataInfos
				});
			},500);
		}else{
			res.json({
				status:400,
				message:'There are no uploaded marksheets please upload marksheets!!!..'
			})
		}

		});

		}else{
			res.json({
				status:400,
				message:'There are no uploaded marksheets please upload marksheets!!!..'
			});
		}

	})
});

router.get('/getUploadedMasterMarklist', middlewares.getUserInfo, function(req, res){
	var marklistDataInfos =[];
	var counts = 0
	models.userMarkList.find({
		where :{
			user_id : req.User.id,
			type : 'Masters',source : 'guattestation'
		}
	}).then(marklistInfos => {

		if(marklistInfos){
			models.UserMarklist_Upload.getMastersMarksheetData(marklistInfos.user_id).then(function(marklistInfos){
		if(marklistInfos.length > 0){
			marklistInfos.forEach(marklistInfo => {
					if((marklistInfo.file_name !='null' && marklistInfo.file_name!=null && marklistInfo.file_name!='')&& (marklistInfo.usermarklist_file_name==null || marklistInfo.usermarklist_file_name=='')){
						var fileName = marklistInfo.file_name;
						var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
						filenamee = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.file_name
						fileDeletePath = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.file_name;
						MarklistId = marklistInfo.id ,
						marklistNamee = marklistInfo.name

						marklistDataInfos.push({
							user_id : marklistInfo.user_id,
							//collegeId : transcriptInfo.collegeId,
							//collegeName : clgdata.name,
							fileName : filenamee ? filenamee : '',
							fileNameShow : marklistInfo.file_name ? marklistInfo.file_name : '',
							fileDeletePath : fileDeletePath ? fileDeletePath : '',
							userUploadMarklistId :marklistInfo.id,
							marklist_name_pattern : marklistInfo.name ? marklistInfo.name : '',
							fileExtension:fileExtension ? fileExtension : '',
							education_type:marklistInfo.education_type ? marklistInfo.education_type : '',
							lock_transcript:marklistInfo.lock_transcript

						})
					}else if((marklistInfo.usermarklist_file_name !='null' && marklistInfo.usermarklist_file_name !=null && marklistInfo.usermarklist_file_name !='') && (marklistInfo.file_name ==null || marklistInfo.file_name =='')){
						var fileName = marklistInfo.usermarklist_file_name;
						var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
						filenamee = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.usermarklist_file_name
						fileDeletePath = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
						MarklistId = marklistInfo.usermarklist_id ,
						marklistNamee = marklistInfo.usermarklist_name

						marklistDataInfos.push({
							user_id : marklistInfo.usermarklist_user_id,
							//collegeId : transcriptInfo.collegeId,
							//collegeName : clgdata.name,
							fileName : filenamee ? filenamee : '',
							fileNameShow : marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
							fileDeletePath : fileDeletePath ? fileDeletePath : '',
							userUploadMarklistId :marklistInfo.usermarklist_id,
							marklist_name_pattern : marklistInfo.usermarklist_name? marklistInfo.usermarklist_name : '',
							fileExtension:fileExtension ? fileExtension : '',
							education_type:marklistInfo.type ? marklistInfo.type : '',
							lock_transcript:marklistInfo.user_lock_marklist

						})

					}else if(marklistInfo.file_name !='null' && marklistInfo.file_name!=null && marklistInfo.file_name!='' && marklistInfo.usermarklist_file_name !='null' && marklistInfo.usermarklist_file_name !=null && marklistInfo.usermarklist_file_name !=''){
						var fileName = marklistInfo.file_name;
						var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
						filenamee = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.file_name
						fileDeletePath = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.file_name;
						MarklistId = marklistInfo.id ,
						marklistNamee = marklistInfo.name

						marklistDataInfos.push({
							user_id : marklistInfo.user_id,
							//collegeId : transcriptInfo.collegeId,
							//collegeName : clgdata.name,
							fileName : filenamee ? filenamee : '',
							fileNameShow : marklistInfo.file_name ? marklistInfo.file_name : '',
							fileDeletePath : fileDeletePath ? fileDeletePath : '',
							userUploadMarklistId :marklistInfo.id,
							marklist_name_pattern : marklistInfo.name ? marklistInfo.name : '',
							fileExtension:fileExtension ? fileExtension : '',
							education_type:marklistInfo.education_type ? marklistInfo.education_type : '',
							lock_transcript:marklistInfo.lock_transcript

						})

						// var fileNamePrevious = marklistInfo.usermarklist_file_name;
						// var fileExtensionPrevious = fileNamePrevious.substr((fileName.lastIndexOf('.') + 1));
						// filenameePrevious = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.usermarklist_file_name
						// fileDeletePathPrevious = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
						// MarklistIdPrevious = marklistInfo.usermarklist_id ,
						// marklistNameePrevious = marklistInfo.usermarklist_name

						// marklistDataInfos.push({
						// 	user_id : marklistInfo.usermarklist_user_id,
						// 	//collegeId : transcriptInfo.collegeId,
						// 	//collegeName : clgdata.name,
						// 	fileName : filenameePrevious ? filenameePrevious : '',
						// 	fileNameShow : marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
						// 	fileDeletePath : fileDeletePathPrevious ? fileDeletePathPrevious : '',
						// 	userUploadMarklistId :marklistInfo.usermarklist_id,
						// 	marklist_name_pattern : marklistInfo.usermarklist_name? marklistInfo.usermarklist_name : '',
						// 	fileExtension:fileExtensionPrevious ? fileExtensionPrevious : '',
						// 	education_type:marklistInfo.type ? marklistInfo.type : '',
						// 	lock_transcript:marklistInfo.user_lock_marklist

						// })
					}

			});
			setTimeout(function(){
				res.json({
					status:200,
					data:marklistDataInfos
				});
			},500);
		}else{
			res.json({
				status:400,
				message:'There are no uploaded marksheets please upload marksheets!!!..'
			})
		}

		});

		}else{
			res.json({
				status:400,
				message:'User does not exist!!..'
			});
		}

	})
});


router.get('/getUploadedPhdMarklist', middlewares.getUserInfo, function(req, res){
	var marklistDataInfos =[];
	var counts = 0
	models.userMarkList.find({
		where :{
			user_id : req.User.id,
			type : 'PhD',source : 'guattestation'
		}
	}).then(marklistInfos => {

		if(marklistInfos){
			models.UserMarklist_Upload.getPhdMarksheetData(marklistInfos.user_id).then(function(marklistInfos){
		if(marklistInfos.length > 0){
			marklistInfos.forEach(marklistInfo => {
					if((marklistInfo.file_name !='null' && marklistInfo.file_name!=null && marklistInfo.file_name!='')&& (marklistInfo.usermarklist_file_name==null || marklistInfo.usermarklist_file_name=='')){
						var fileName = marklistInfo.file_name;
						var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
						filenamee = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.file_name
						fileDeletePath = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.file_name;
						MarklistId = marklistInfo.id ,
						marklistNamee = marklistInfo.name

						marklistDataInfos.push({
							user_id : marklistInfo.user_id,
							//collegeId : transcriptInfo.collegeId,
							//collegeName : clgdata.name,
							fileName : filenamee ? filenamee : '',
							fileNameShow : marklistInfo.file_name ? marklistInfo.file_name : '',
							fileDeletePath : fileDeletePath ? fileDeletePath : '',
							userUploadMarklistId :marklistInfo.id,
							marklist_name_pattern : marklistInfo.name ? marklistInfo.name : '',
							fileExtension:fileExtension ? fileExtension : '',
							education_type:marklistInfo.education_type ? marklistInfo.education_type : '',
							lock_transcript:marklistInfo.lock_transcript

						})
					}else if((marklistInfo.usermarklist_file_name !='null' && marklistInfo.usermarklist_file_name !=null && marklistInfo.usermarklist_file_name !='') && (marklistInfo.file_name ==null || marklistInfo.file_name =='' )){
						var fileName = marklistInfo.usermarklist_file_name;
						var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
						filenamee = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.usermarklist_file_name
						fileDeletePath = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
						MarklistId = marklistInfo.usermarklist_id ,
						marklistNamee = marklistInfo.usermarklist_name

						marklistDataInfos.push({
							user_id : marklistInfo.usermarklist_user_id,
							//collegeId : transcriptInfo.collegeId,
							//collegeName : clgdata.name,
							fileName : filenamee ? filenamee : '',
							fileNameShow : marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
							fileDeletePath : fileDeletePath ? fileDeletePath : '',
							userUploadMarklistId :marklistInfo.usermarklist_id,
							marklist_name_pattern : marklistInfo.usermarklist_name? marklistInfo.usermarklist_name : '',
							fileExtension:fileExtension ? fileExtension : '',
							education_type:marklistInfo.type ? marklistInfo.type : '',
							lock_transcript:marklistInfo.user_lock_marklist

						})

					}else if(marklistInfo.file_name !='null' && marklistInfo.file_name!=null && marklistInfo.file_name!='' && marklistInfo.usermarklist_file_name !='null' && marklistInfo.usermarklist_file_name !=null && marklistInfo.usermarklist_file_name !=''){
						var fileName = marklistInfo.file_name;
						var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
						filenamee = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.file_name
						fileDeletePath = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.file_name;
						MarklistId = marklistInfo.id ,
						marklistNamee = marklistInfo.name

						marklistDataInfos.push({
							user_id : marklistInfo.user_id,
							//collegeId : transcriptInfo.collegeId,
							//collegeName : clgdata.name,
							fileName : filenamee ? filenamee : '',
							fileNameShow : marklistInfo.file_name ? marklistInfo.file_name : '',
							fileDeletePath : fileDeletePath ? fileDeletePath : '',
							userUploadMarklistId :marklistInfo.id,
							marklist_name_pattern : marklistInfo.name ? marklistInfo.name : '',
							fileExtension:fileExtension ? fileExtension : '',
							education_type:marklistInfo.education_type ? marklistInfo.education_type : '',
							lock_transcript:marklistInfo.lock_transcript

						})

						// var fileNamePrevious = marklistInfo.usermarklist_file_name;
						// var fileExtensionPrevious = fileNamePrevious.substr((fileName.lastIndexOf('.') + 1));
						// filenameePrevious = constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ marklistInfo.usermarklist_file_name
						// fileDeletePathPrevious = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
						// MarklistIdPrevious = marklistInfo.usermarklist_id ,
						// marklistNameePrevious = marklistInfo.usermarklist_name

						// marklistDataInfos.push({
						// 	user_id : marklistInfo.usermarklist_user_id,
						// 	//collegeId : transcriptInfo.collegeId,
						// 	//collegeName : clgdata.name,
						// 	fileName : filenameePrevious ? filenameePrevious : '',
						// 	fileNameShow : marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
						// 	fileDeletePath : fileDeletePathPrevious ? fileDeletePathPrevious : '',
						// 	userUploadMarklistId :marklistInfo.usermarklist_id,
						// 	marklist_name_pattern : marklistInfo.usermarklist_name? marklistInfo.usermarklist_name : '',
						// 	fileExtension:fileExtensionPrevious ? fileExtensionPrevious : '',
						// 	education_type:marklistInfo.type ? marklistInfo.type : '',
						// 	lock_transcript:marklistInfo.user_lock_marklist

						// })
					}

			});
			setTimeout(function(){
				res.json({
					status:200,
					data:marklistDataInfos
				});
			},500);
		}else{
			res.json({
				status:400,
				message:'There are no uploaded marksheets please upload marksheets!!!..'
			})
		}

		});

		}else{
			res.json({
				status:400,
				message:'User does not exist!!..'
			});
		}

	})
});

router.get('/downloadMarklist', middlewares.getUserInfo, function (req, res) {
	var file_name = req.query.file_name;
	var userId = req.User.id;
	const downloadData = constant.FILE_LOCATION + "public/upload/documents/" + userId + "/" + file_name;
	res.download(downloadData);
});

router.post('/deleteMarklist', middlewares.getUserInfo, function(req, res){
	var userData = req.body.data
	models.UserMarklist_Upload.find({
		where: {
			id: userData.userUploadMarklistId,
			user_id:req.User.id,source : 'guattestation'
		}
	}).then(function (userMarklist) {
			if (userMarklist) {
				var path = userData.fileDeletePath
				//require('fs').unlink(path, function(err) {
					userMarklist.destroy().then(function (delmarklist) {
						if(delmarklist){
							res.json({
								status : 200,
								message : "Marksheet deleted Successfully"
							})

						}else{
							res.json({
								status : 400,
								message : "Marksheet not delete"
							});
						}
					});
				//});
			}else{
				models.userMarkList.find({
					where: {
						id: userData.userUploadMarklistId,
						user_id:req.User.id,source : 'guattestation'
					}
				}).then(function (userMarklists) {
					if(userMarklists){
					var path = userData.fileDeletePath
					//require('fs').unlink(path, function(err) {
						userMarklists.destroy().then(function (delmarklist) {
							if(delmarklist){
								res.json({
									status : 200,
									message : "Marksheet deleted Successfully"
								})

							}else{
								res.json({
									status : 400,
									message : "Marksheet not delete"
								});
							}
						});
					//});
					models.UserMarklist_Upload.find({
						where: {
							user_marklist_id: userMarklists.id,
							user_id:req.User.id,source : 'guattestation'
						}
					}).then(function (userMarklistsUpload) {
						if(userMarklistsUpload){
							var path = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + userMarklistsUpload.file_name;
							//require('fs').unlink(path, function(err) {
								userMarklistsUpload.destroy().then(function (delmarklist) {
									if(delmarklist){
										res.json({
											status : 200,
											message : "Marksheet deleted Successfully"
										})

									}else{
										res.json({
											status : 400,
											message : "Marksheet not delete"
										});
									}
								});
							//});

						}

					});


					}

				});

			}
		});
});

router.post('/deleteErrataMarklist', middlewares.getUserInfo, function(req, res){
	var userData = req.body.data
	models.UserMarklist_Upload.find({
		where: {
			id: userData.id,
			user_id:userData.user_id,source : 'guattestation'
		}
	}).then(function (userMarklist) {
			if (userMarklist) {
				var path = userData.file_path
				//('fs').unlink(path, function(err) {
					userMarklist.destroy().then(function (delmarklist) {
						models.Activitytracker.create({
							user_id : userData.user_id,
							activity : delmarklist.name+ 'Deleted',
							data : delmarklist.file_name + ' deleted by ' + req.User.email,
							applicaiton_id : userData.app_id
						})

						if(delmarklist){
							res.json({
								status : 200,
								message : "Marksheet deleted Successfully"
							})

						}else{
							res.json({
								status : 400,
								message : "Marksheet not delete"
							});
						}
					});
				//});
			}else{
				models.userMarkList.find({
					where: {
						id: userData.id,
						user_id:userData.user_id,source : 'guattestation'
					}
				}).then(function (userMarklists) {
					if(userMarklists){
					var path = userData.file_path
					//require('fs').unlink(path, function(err) {
						userMarklists.destroy().then(function (delmarklist) {
							if(delmarklist){
								models.Activitytracker.create({
									user_id : userData.user_id,
									activity : delmarklist.name+ 'Deleted',
									data : delmarklist.file_name + ' deleted by ' + req.User.email,
									applicaiton_id : userData.app_id
								})

								res.json({
									status : 200,
									message : "Marksheet deleted Successfully"
								})

							}else{
								res.json({
									status : 400,
									message : "Marksheet not delete"
								});
							}
						});
					//});
					models.UserMarklist_Upload.find({
						where: {
							user_marklist_id: userMarklists.id,
							user_id:userData.user_id,source : 'guattestation'
						}
					}).then(function (userMarklistsUpload) {
						if(userMarklistsUpload){
							var path = constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + userMarklistsUpload.file_name;
						//	require('fs').unlink(path, function(err) {
								userMarklistsUpload.destroy().then(function (delmarklist) {
									if(delmarklist){
										models.Activitytracker.create({
											user_id : userData.user_id,
											activity : delmarklist.name+ 'Deleted',
											data : delmarklist.file_name + ' deleted by ' + req.User.email,
											applicaiton_id : userData.app_id
										})

										res.json({
											status : 200,
											message : "Marksheet deleted Successfully"
										})

									}else{
										res.json({
											status : 400,
											message : "Marksheet not delete"
										});
									}
								});
							//});

						}

					});


					}

				});

			}
		});
});

router.get('/sendEmail',function(req,res){
	var user_id = req.query.user_id;
	models.Applied_For_Details.find({
		where : {
			user_id : user_id,
			source : 'guattestation'
		}
	}).then(function(user){
		if(user.educationalDetails == true){
			models.User_Transcript.findAll({
				where :{
					user_id : user_id,source : 'guattestation' 
				}
			}).then(function(userTranscripts){
				var collegeData = [];
				userTranscripts.forEach(transcript=>{
					var singleCollege = {
						user_id : '',
						collegeName : '',
						studentName : '',
						college_id : '',
						collegeEmail : '',
						user_transcript : [],
						user_markList : []
					}
					if(transcript.collegeId != 0 && transcript.collegeId != null)
					{
						models.College.find({
							where:{
								id : transcript.collegeId
							}
						}).then(function(college){
							if(collegeData.length < 1){
								singleCollege.user_id = user_id;
								singleCollege.collegeName = college.name;
								singleCollege.collegeEmail = college.emailId;
								singleCollege.studentName = user.name + ' ' + user.surname;
								singleCollege.college_id = college.id;
								singleCollege.alternateEmail = college.alternateEmailId;
								singleCollege.user_transcript.push({'fileName':transcript.file_name,'transcript':'upload/documents/'+ user_id + "/" + urlencode(transcript.file_name)});
								collegeData.push(singleCollege);
							}else{
								var transcriptFlag = false;
								for(var i = 0; i<collegeData.length; i++){
									if(collegeData[i].college_id == transcript.collegeId){
										collegeData[i].user_transcript.push({'fileName':transcript.file_name,'transcript':'upload/documents/'+user_id + "/" + urlencode(transcript.file_name)});
										transcriptFlag = true;
										break;
									}
								}
								if(transcriptFlag == false){
									singleCollege.user_id = user_id;
									singleCollege.collegeName = college.name;
									singleCollege.studentName = user.name + ' ' + user.surname;
									singleCollege.college_id = college.id;
									singleCollege.collegeEmail = college.emailId;
									singleCollege.alternateEmail = college.alternateEmailId;
									singleCollege.user_transcript.push({'fileName':transcript.file_name,'transcript':'upload/documents/'+user_id + "/" + urlencode(transcript.file_name)});
									collegeData.push(singleCollege);
								}
							}
						})
					}
				});
				models.userMarkList.find({
					where : {
						user_id : user_id,source : 'guattestation'
					}
				}).then(function(userMarkListsData){
				models.UserMarklist_Upload.getMarksheetDataSendToInstitute(userMarkListsData.user_id).then(function(userMarkLists){
					userMarkLists.forEach(markList=>{
						var singleCollege = {
							user_id : '',
							collegeName : '',
							studentName : '',
							college_id : '',
							collegeEmail : '',
							user_transcript : [],
							user_markList : []
						}
						models.College.find({
							where:{
								id : markList.collegeId
							}
						}).then(function(college){
							if(collegeData.length < 1){
								singleCollege.user_id = user_id;
								singleCollege.collegeName = college.name;
								singleCollege.collegeEmail = college.emailId;
								singleCollege.studentName = user.name + ' ' + user.surname;
								singleCollege.college_id = college.id;
								singleCollege.alternateEmail = college.alternateEmailId;
								if((markList.file_name !='null' && markList.file_name!=null)&& (markList.usermarklist_file_name==null)){
									singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
									collegeData.push(singleCollege);
								}else if((markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null) && (markList.file_name ==null)){
									singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
									collegeData.push(singleCollege);
								}else if(markList.file_name !='null' && markList.file_name!=null && markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null){
									singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
									collegeData.push(singleCollege);
									singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
									collegeData.push(singleCollege);
								}
							}else{
								var flag = false;
								for(var i = 0; i<collegeData.length; i++){
									if(collegeData[i].college_id == markList.collegeId){
										if((markList.file_name !='null' && markList.file_name!=null)&& (markList.usermarklist_file_name==null)){
											collegeData[i].user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
											flag = true;
											break;
										}else if((markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null) && (markList.file_name ==null)){
											collegeData[i].user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
											flag = true;
											break;
										}else if(markList.file_name !='null' && markList.file_name!=null && markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null){
											collegeData[i].user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
											//flag = true;

											collegeData[i].user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
											flag = true;
											break;
										}
									}
								}
								if(flag == false){
									singleCollege.user_id = user_id;
									singleCollege.collegeName = college.name;
									singleCollege.studentName = user.name + ' ' + user.surname;
									singleCollege.college_id = college.id;
									singleCollege.collegeEmail = college.emailId;
									singleCollege.alternateEmail = college.alternateEmailId;
									if((markList.file_name !='null' && markList.file_name!=null)&& (markList.usermarklist_file_name==null)){
										singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
										collegeData.push(singleCollege);
									}else if((markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null) && (markList.file_name ==null)){
										singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
										collegeData.push(singleCollege);
									}else if(markList.file_name !='null' && markList.file_name!=null && markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null){
										singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
										collegeData.push(singleCollege);
										singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
										collegeData.push(singleCollege);

									}
								}
							}
						});
					})
					setTimeout(function(){
						request.post(constant.BASE_URL_SENDGRID + 'transcriptVerificationEmailShweta', {
							json: {
								collegeData : collegeData,
								source : 'gu'
							}
						}, function (error, response, body) {
							if(body.notSent.length > 0){
								body.noteSent.forEach(data=>{
									models.User_Transcript.updateSingleCollegeEmailStatus(user_id,data.college_id,null,'not sent');
								})
							}
							body.data.forEach(msgId=>{
								models.User_Transcript.updateSingleCollegeEmailStatus(user_id,msgId.college_id,msgId.msg_id,'sent');
							})

						})
					},1000);
				});
				})
			})
		}
		if(user.instructionalField == true){
			var collegeData = [];
			models.InstructionalDetails.find({
				where :{
					userId : user_id
				}
			}).then(function(instructional){
				models.userMarkList.find({
					where : {
						user_id : user_id,source : 'guattestation'
					}
				}).then(function(userMarkListsData){
					models.UserMarklist_Upload.getMarksheetDataSendToCollege(userMarkListsData.user_id,userMarkListsData.collegeId).then(function(userMarkLists){
						userMarkLists.forEach(markList=>{
							var singleCollege = {
								user_id : '',
								collegeName : '',
								studentName : '',
								college_id : '',
								collegeEmail : '',
								courseName : '',
								user_markList : [],
								alternateEmail : ''
							}
							models.College.find({
								where:{
									id : markList.collegeId
								}
							}).then(function(college){
								if(collegeData.length < 1){
									singleCollege.user_id = user_id;
									singleCollege.collegeName = college.name;
									singleCollege.collegeEmail = college.emailId;
									singleCollege.studentName = instructional.studentName;
									singleCollege.college_id = college.id;
									singleCollege.courseName = instructional.courseName;
									singleCollege.alternateEmail = college.alternateEmailId;
									if((markList.file_name !='null' && markList.file_name!=null)&& (markList.usermarklist_file_name==null)){
									singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
									collegeData.push(singleCollege);
									}else if((markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null) && (markList.file_name ==null)){
										singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
										collegeData.push(singleCollege);
									}else if(markList.file_name !='null' && markList.file_name!=null && markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null){
										singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
										collegeData.push(singleCollege);
										singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
										collegeData.push(singleCollege);

									}
								}else{
									var flag = false;
									for(var i = 0; i<collegeData.length; i++){
										if(collegeData[i].college_id == markList.collegeId){
											if((markList.file_name !='null' && markList.file_name!=null)&& (markList.usermarklist_file_name==null)){
												collegeData[i].user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
												flag = true;
												break;
											}else if((markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null) && (markList.file_name ==null)){
												collegeData[i].user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
												flag = true;
												break;
											}else if(markList.file_name !='null' && markList.file_name!=null && markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null){
												collegeData[i].user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
												flag = true;
												collegeData[i].user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
												flag = true;
												break;

											}
										}
									}
									if(flag == false){
										singleCollege.user_id = user_id;
										singleCollege.collegeName = college.name;
										singleCollege.studentName = instructional.studentName;
										singleCollege.courseName = instructional.courseName;
										singleCollege.college_id = college.id;
										singleCollege.collegeEmail = college.emailId;
										singleCollege.alternateEmail = college.alternateEmailId;
										if((markList.file_name !='null' && markList.file_name!=null)&& (markList.usermarklist_file_name==null)){
											singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
											collegeData.push(singleCollege);
										}else if((markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null) && (markList.file_name ==null)){
											singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
											collegeData.push(singleCollege);
										}else if(markList.file_name !='null' && markList.file_name!=null && markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null){
											singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
											collegeData.push(singleCollege);
											singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
											collegeData.push(singleCollege);
										}
									}
								}
							});
						})
						setTimeout(()=>{
							request.post(constant.BASE_URL_SENDGRID + 'instructionalFieldVerificationEmail', {
								json: {
									collegeData : collegeData,
									source : 'gu'
								}
							}, function (error, response, body) {
								if(body.notSent.length > 0){
									body.noteSent.forEach(data=>{
										models.InstructionalDetails.updateSingleEmailStatus(user_id,null,'not sent');
									})
								}
								body.data.forEach(msgId=>{
									models.InstructionalDetails.updateSingleEmailStatus(user_id,msgId.msg_id,'sent');
								})
							})
						},1000);
					});
				})
			})
		}
		if(user.curriculum == true){
			var collegeData = [];
			models.User_Curriculum.findAll({
				where :{
					user_id : user_id
				}
			}).then(function(userCurriculums){
				userCurriculums.forEach(curriculum=>{
					var singleCollege = {
						user_id : '',
						collegeName : '',
						studentName : '',
						college_id : '',
						collegeEmail : '',
						alternateEmail : '',
						user_curriculum : [],
						user_markList : []
					}
					models.College.find({
						where:{
							id : curriculum.collegeId
						}
					}).then(function(college){
						if(collegeData.length < 1){
							singleCollege.user_id = user_id;
							singleCollege.collegeName = college.name;
							singleCollege.collegeEmail = college.emailId;
							singleCollege.studentName = user.name + ' ' + user.surname;
							singleCollege.college_id = college.id;
							singleCollege.alternateEmail = college.alternateEmailId;
							singleCollege.user_curriculum.push({'fileName':curriculum.file_name,'curriculum':'upload/curriculum/'+ user_id + "/" + urlencode(curriculum.file_name)});
							collegeData.push(singleCollege);
						}else{
							var transcriptFlag = false;
							for(var i = 0; i<collegeData.length; i++){
								if(collegeData[i].college_id == curriculum.collegeId){
									collegeData[i].user_curriculum.push({'fileName':curriculum.file_name,'curriculum':'upload/curriculum/'+user_id + "/" + urlencode(curriculum.file_name)});
									transcriptFlag = true;
									break;
								}
							}
							if(transcriptFlag == false){
								singleCollege.user_id = user_id;
								singleCollege.collegeName = college.name;
								singleCollege.studentName = user.name + ' ' + user.surname;
								singleCollege.college_id = college.id;
								singleCollege.collegeEmail = college.emailId;
								singleCollege.alternateEmail = college.alternateEmailId;
								singleCollege.user_curriculum.push({'fileName':curriculum.file_name,'curriculum':'upload/curriculum/'+user_id + "/" + urlencode(curriculum.file_name)});
								collegeData.push(singleCollege);
							}
						}
					})
				});
				models.userMarkList.find({
					where : {
						user_id : user_id,source : 'guattestation'
					}
				}).then(function(userMarkListsData){
					models.UserMarklist_Upload.getMarksheetDataSendToCollege(userMarkListsData.user_id).then(function(userMarkLists){
						userMarkLists.forEach(markList=>{
							var singleCollege = {
								user_id : '',
								collegeName : '',
								studentName : '',
								college_id : '',
								collegeEmail : '',
								user_curriculum : [],
								user_markList : []
							}
							models.College.find({
								where:{
									id : markList.collegeId
								}
							}).then(function(college){
								if(collegeData.length < 1){
									singleCollege.user_id = user_id;
									singleCollege.collegeName = college.name;
									singleCollege.collegeEmail = college.emailId;
									singleCollege.studentName = user.name + ' ' + user.surname;
									singleCollege.college_id = college.id;
									singleCollege.alternateEmail = college.alternateEmailId;
									if((markList.file_name !='null' && markList.file_name!=null)&& (markList.usermarklist_file_name==null)){
										singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
										collegeData.push(singleCollege);
									}else if((markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null) && (markList.file_name ==null)){
										singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
										collegeData.push(singleCollege);
									}else if(markList.file_name !='null' && markList.file_name!=null && markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null){
										singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
										collegeData.push(singleCollege);
										singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
										collegeData.push(singleCollege);
									}
								}else{
									var flag = false;
									for(var i = 0; i<collegeData.length; i++){
										if(collegeData[i].college_id == markList.collegeId){
											if((markList.file_name !='null' && markList.file_name!=null)&& (markList.usermarklist_file_name==null)){
												collegeData[i].user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
												flag = true;
												break;
											}else if((markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null) && (markList.file_name ==null)){
												collegeData[i].user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
												flag = true;
												break;
											}else if(markList.file_name !='null' && markList.file_name!=null && markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null){
												collegeData[i].user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
												flag = true;
												collegeData[i].user_markList.push({'fileName':markList.usermarklist_file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name)});
												flag = true;
												break;
											}
										}
									}
									if(flag == false){
										singleCollege.user_id = user_id;
										singleCollege.collegeName = college.name;
										singleCollege.studentName = user.name + ' ' + user.surname;
										singleCollege.college_id = college.id;
										singleCollege.collegeEmail = college.emailId;
										singleCollege.alternateEmail = college.alternateEmailId;
										if((markList.file_name !='null' && markList.file_name!=null)&& (markList.usermarklist_file_name==null)){
											singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
											collegeData.push(singleCollege);
										}else if((markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null) && (markList.file_name ==null)){
											singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name ,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name )});
											collegeData.push(singleCollege);
										}else if(markList.file_name !='null' && markList.file_name!=null && markList.usermarklist_file_name !='null' && markList.usermarklist_file_name !=null){
											singleCollege.user_markList.push({'fileName':markList.file_name,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.file_name)});
											collegeData.push(singleCollege);
											singleCollege.user_markList.push({'fileName':markList.usermarklist_file_name ,'markList':'upload/documents/'+ user_id + "/" + urlencode(markList.usermarklist_file_name )});
											collegeData.push(singleCollege);
										}
									}
								}
							});
						})
						setTimeout(function(){
							request.post(constant.BASE_URL_SENDGRID + 'curriculumVerificationEmail', {
								json: {
									collegeData : collegeData,
									source : 'gu'
								}
							}, function (error, response, body) {
								if(body.notSent.length > 0){
									body.noteSent.forEach(data=>{
										models.User_Curriculum.updateSingleCollegeEmailStatus(user_id,data.college_id,null,'not sent');
									})
								}
								body.data.forEach(msgId=>{
									models.User_Curriculum.updateSingleCollegeEmailStatus(user_id,msgId.college_id,msgId.msg_id,'sent');
								})
							})
						},1000);
					});
				})
			})
		}
		res.json({
			status : 200
		})
	})
});

router.get('/preview',middlewares.getUserInfo, async function(req,res){
	var userDetails = {};
	var bonafied_aadhar =[]
	var sealed_cover = []
	var applicationForMark = '';
	var applicationForTran	= '';
	var applicationForDegree = '';
	var applicationForThesis = '';
	userDetails.studentName = req.User.name + ' ' + req.User.surname;
	userDetails.studentEmail = req.User.email;
	userDetails.mobileNumber = req.User.mobile_country_code + ' ' + req.User.mobile;

	models.Applied_For_Details.findOne({
		where :{
			user_id : req.User.id,
			app_id :{
				[Op.eq] : null
			},
			source : 'guattestation'
		}
	}).then(async function(appliedDetails){
		userDetails.educationalDetails = (appliedDetails.educationalDetails == true) ? true : false;
		userDetails.instructionalMethod = (appliedDetails.instructionalField == true) ? true : false;
		userDetails.curriculum =(appliedDetails.curriculum == true) ? true : false;
		userDetails.gradToPer =(appliedDetails.gradToPer == true) ? true : false;
		userDetails.degree = appliedDetails.applying_for;
		userDetails.affiliation =(appliedDetails.affiliation == true) ? true : false;
		userDetails.CompetencyLetter =(appliedDetails.CompetencyLetter == true) ? true : false;
		userDetails.LetterforNameChange =(appliedDetails.LetterforNameChange == true) ? true : false;
		userDetails.attestedfor =appliedDetails.attestedfor ? appliedDetails.attestedfor : null;

	let documents =  await functions.bonafied_aadhar_studentmanagement(req.User.id,'Aadhar Card','guattestation');	
	var imgarr = documents.file_name.split('.');
	var extension = imgarr[imgarr.length - 1].trim();
	let document =  await functions.bonafied_studentmanagement(req.User.id,'Bonafied','guattestation');
	bonafied_aadhar.push({
		bonafide_aadhar : documents.name,
		filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+documents.file_name,
		extension:extension
	})
	document.forEach(document=>{
		var imgArr = document.file_name.split('.');
		var extension1 = imgArr[imgArr.length - 1].trim();
		bonafied_aadhar.push({
		bonafide_aadhar : document ? document.name :  '',
		filePath :document ? constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+document.file_name :'',
		extension:document ?extension1:'',
		name:document ?document.applied_for_degree:'',
		})
	})
	// apply_for = await functions.application_for_preview(req.User.id);

	// userinstruction = await functions.user_instruction(req.User.id);
	if(appliedDetails.applying_for == 'Bachelors'){
		models.userMarkList.findAll({
			where:{
				user_id : req.User.id,source : 'guattestation'
			}
		}).then(async function(userMarkList){
			
			if(userMarkList[0].previous_data == true){
				var differentCollegeStream = (userMarkList[0].college_stream_type == true) ? 'Yes' : 'No';
				var collegeData = [] ;
				if(differentCollegeStream == 'Yes'){
					userMarkList.forEach(marklist=>{
						models.College.find({
							where:{
								id : marklist.collegeId
							}
						}).then(function(college){
							collegeData.push({
								name : college.name,
								year : marklist.type + " " + marklist.faculty + " " + marklist.name
							})
						})
					})
				}else{
					models.College.find({
						where:{
							id: userMarkList[0].collegeId
						}
					}).then(function(college){
						console.log("college",college);
						collegeData.push({
							name : college.name,
							year : userMarkList[0].type + " " + userMarkList[0].faculty + " " + userMarkList[0].name
						})
					})
				}

				models.UserMarklist_Upload.findAll({
					where :{
						user_id : req.User.id,source : 'guattestation'
					}
				}).then(function(userMarksheets){
					var marksheets = [];
					userMarksheets.forEach(userMarksheet=>{
						var imgArr = userMarksheet.file_name.split('.');
						var extension = imgArr[imgArr.length - 1].trim();
						marksheets.push({
							name : userMarksheet.name,
							degree : userMarksheet.education_type,
							filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
							extension:extension
						})
					})
					var transcripts = [] ;
					var gradToPerLetters = [];
					var curriculum = [];
					var instructionalDetails = [];
					var letterfor_namechange = [];
					var affiliationDetails = [];
					var competency_letter=[];
					if(appliedDetails.educationalDetails == true){
						models.User_Transcript.findAll({
							where :{
								user_id : req.User.id,source : 'guattestation' 
							}
						}).then(function(userTranscripts){
							userTranscripts.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								transcripts.push({
									name : userTranscript.name,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
									extension:extension
								})
							})
						})
					}

					if(appliedDetails.curriculum == true){
						models.User_Curriculum.findAll({
							where :{
								user_id : req.User.id
							}
						}).then(function(userCurriculums){
							userCurriculums.forEach(userCurriculum=>{
								var imgArr = userCurriculum.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								curriculum.push({
									name : userCurriculum.name,
									filePath : constant.BASE_URL+"/upload/curriculum/"+req.User.id+"/"+userCurriculum.file_name,
									extension:extension
								})
							})
						})
					}
					if(appliedDetails.gradToPer == true){
						models.GradeToPercentageLetter.findAll({
							where :{
								user_id : req.User.id
							}
						}).then(function(letters){
							letters.forEach(letter=>{
								var imgArr = letter.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								gradToPerLetters.push({
									name : letter.name,
									filePath : constant.BASE_URL+"/upload/gradeToPercentLetter/"+req.User.id+"/"+letter.file_name,
									extension:extension
								})
							})
						})
					}
					if(appliedDetails.instructionalField == true){
						models.InstructionalDetails.findAll({
							where :{
								userId : req.User.id,
							}
						}).then(function(instruction){
							instructionalDetails = instruction;
						})
					}
					if(appliedDetails.LetterNameChange == true){
						models.Letterfor_NameChange.findAll({
							where :{
								user_id : req.User.id,
							}
						}).then(function(letternamechange){
							letterfor_namechange = letternamechange;
						})
					}
					if(appliedDetails.affiliation == true){
						models.Affiliation_Letter.findAll({
								where :{
									user_id : req.User.id,
								}
							}).then(function( Affiliation){
								affiliationDetails : Affiliation;
							})
					}
					if(appliedDetails.CompetencyLetter == true){
						models.competency_letter.findAll({
							where :{
								user_id : req.User.id
							}
						}).then(function(userTranscripts){
							userTranscripts.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								competency_letter.push({
									name : userTranscript.name,
									filePath : constant.BASE_URL+"/upload/CompetencyLetter/"+req.User.id+"/"+userTranscript.file_name,
									extension:extension
								})
							})
						})
					}
					

					setTimeout(()=>{
						models.Institution_details.findAll({
							where :{
								user_id : req.User.id,
								app_id : {
									[Op.eq]:null
								},source : 'guattestation'
							}

						}).then(function(institutions){
							//console.log("instructionalDetails",instructionalDetails)
							res.json({
								status : 200,
								userDetails : userDetails,
								collegeData : collegeData,
								marksheets : marksheets,
								transcripts : transcripts,
								instructionalDetails : instructionalDetails,
								curriculum : curriculum,
								purpose : institutions,
								CompetencyLetter : competency_letter,
								LetterNameChange : letterfor_namechange,
								Affiliation_Letter :affiliationDetails,
								bonafied_aadhar:bonafied_aadhar,
								applicationForMark:applicationForMark,
								applicationForTran:applicationForTran,
								applicationForDegree:applicationForDegree,
								applicationForThesis:applicationForThesis,
								appliedDetails:appliedDetails,
								userMarkList:userMarkList


							})

						})
					},1000)
					console.log("marksheets")
				})
			}else{
			
				User_Marklist = await functions.User_Marklist_preview(req.User.id,'Bachelors');
				if(User_Marklist){
					User_Marklist_upload = await functions.User_Marklist_Uploadpreview(req.User.id,'Bachelors');
					if(User_Marklist_upload){
						var marksheets = [];
						User_Marklist_upload.forEach(userMarksheet=>{
								var imgArr = userMarksheet.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('marksheet') || appliedDetails.attestedfor.includes('newmark')){
									marksheets.push({
										name : userMarksheet.name,
										degree : userMarksheet.education_type,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
										extension:extension
									})
								}
								
							})
					}
					user_Transcripts_upload = await functions.User_Transcripts_Upload_preview(req.User.id,'Bachelors_','Bachelors_transcripts');
					if(user_Transcripts_upload){
						var transcripts = [];
						user_Transcripts_upload.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
								name : userTranscript.name,
								filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
								extension:extension,
								type : userTranscript.type
					
								})
							}
							})
					}
					user_Transcripts_Degree = await functions.User_Transcripts_Upload_preview(req.User.id,'Bachelors_','Bachelors_degree');
					if(user_Transcripts_Degree){
						var degree = [];
						user_Transcripts_Degree.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Thesis = await functions.User_Transcripts_Upload_preview(req.User.id,'Bachelors_','Bachelors_thesis');
					if(user_Transcripts_Thesis){
						var thesis = [];
						user_Transcripts_Thesis.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Bachelors_transcripts');
					if(user_Transcripts_Extra){
						user_Transcripts_Extra.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_degree = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Bachelors_degree');
					if(user_Transcripts_Extra_degree){
						user_Transcripts_Extra_degree.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_thesis = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Bachelors_thesis');
					if(user_Transcripts_Extra_thesis){
						user_Transcripts_Extra_thesis.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
				}
				instruction = await functions.User_instruction_preview(req.User.id,'Bachelors_');

				institutions = await functions.User_institutions_preview(req.User.id,);
			applicationForMark += marksheets.length;
			applicationForTran += transcripts.length;
			applicationForDegree +=degree.length;
			applicationForThesis += thesis.length;
			console.log("institutions",institutions[0].deliveryType);
			if(institutions[0].deliveryType == 'physcial'){
				sealed_cover =institutions[0].noofcopies
			}
			}
			res.json({
				status : 200,
				userDetails :userDetails,
				collegeData : collegeData,
				marksheets : marksheets,
				transcripts : transcripts,
				thesis:thesis,
				degree : degree,
				sealed_cover:sealed_cover,
				instructionalDetails : instruction,
				purpose : institutions,
				bonafied_aadhar:bonafied_aadhar,
				applicationForMark:applicationForMark,
				applicationForTran:applicationForTran,
				applicationForDegree:applicationForDegree,
				applicationForThesis:applicationForThesis,
				appliedDetails:appliedDetails,
				userMarkList:userMarkList
			})

		})
		
	}
	if(appliedDetails.applying_for == 'Masters'){
			models.userMarkList.findAll({
				where:{
					user_id : req.User.id,source : 'guattestation'
				}
			}).then(async function(userMarkList){
				
				if(userMarkList[0].previous_data == true){
					var differentCollegeStream = (userMarkList[0].college_stream_type == true) ? 'Yes' : 'No';
					var collegeData = [] ;
					if(differentCollegeStream == 'Yes'){
						userMarkList.forEach(marklist=>{
							models.College.find({
								where:{
									id : marklist.collegeId
								}
							}).then(function(college){
								collegeData.push({
									name : college.name,
									year : marklist.type + " " + marklist.faculty + " " + marklist.name
								})
							})
						})
					}else{
						models.College.find({
							where:{
								id: userMarkList[0].collegeId
							}
						}).then(function(college){
							console.log("college",college);
							collegeData.push({
								name : college.name,
								year : userMarkList[0].type + " " + userMarkList[0].faculty + " " + userMarkList[0].name
							})
						})
					}
	
					models.UserMarklist_Upload.findAll({
						where :{
							user_id : req.User.id,source : 'guattestation'
						}
					}).then(function(userMarksheets){
						var marksheets = [];
						userMarksheets.forEach(userMarksheet=>{
							var imgArr = userMarksheet.file_name.split('.');
							var extension = imgArr[imgArr.length - 1].trim();
							marksheets.push({
								name : userMarksheet.name,
								degree : userMarksheet.education_type,
								filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
								extension:extension
							})
						})
						var transcripts = [] ;
						var gradToPerLetters = [];
						var curriculum = [];
						var instructionalDetails = [];
						var letterfor_namechange = [];
						var affiliationDetails = [];
						var competency_letter=[];
						if(appliedDetails.educationalDetails == true){
							models.User_Transcript.findAll({
								where :{
									user_id : req.User.id,source : 'guattestation' 
								}
							}).then(function(userTranscripts){
								userTranscripts.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									transcripts.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension
									})
								})
							})
						}
	
						if(appliedDetails.curriculum == true){
							models.User_Curriculum.findAll({
								where :{
									user_id : req.User.id
								}
							}).then(function(userCurriculums){
								userCurriculums.forEach(userCurriculum=>{
									var imgArr = userCurriculum.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									curriculum.push({
										name : userCurriculum.name,
										filePath : constant.BASE_URL+"/upload/curriculum/"+req.User.id+"/"+userCurriculum.file_name,
										extension:extension
									})
								})
							})
						}
						if(appliedDetails.gradToPer == true){
							models.GradeToPercentageLetter.findAll({
								where :{
									user_id : req.User.id
								}
							}).then(function(letters){
								letters.forEach(letter=>{
									var imgArr = letter.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									gradToPerLetters.push({
										name : letter.name,
										filePath : constant.BASE_URL+"/upload/gradeToPercentLetter/"+req.User.id+"/"+letter.file_name,
										extension:extension
									})
								})
							})
						}
						if(appliedDetails.instructionalField == true){
							models.InstructionalDetails.findAll({
								where :{
									userId : req.User.id,
								}
							}).then(function(instruction){
								instructionalDetails = instruction;
							})
						}
						if(appliedDetails.LetterNameChange == true){
							models.Letterfor_NameChange.findAll({
								where :{
									user_id : req.User.id,
								}
							}).then(function(letternamechange){
								letterfor_namechange = letternamechange;
							})
						}
						if(appliedDetails.affiliation == true){
							models.Affiliation_Letter.findAll({
									where :{
										user_id : req.User.id,
									}
								}).then(function( Affiliation){
									affiliationDetails : Affiliation;
								})
						}
						if(appliedDetails.CompetencyLetter == true){
							models.competency_letter.findAll({
								where :{
									user_id : req.User.id
								}
							}).then(function(userTranscripts){
								userTranscripts.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									competency_letter.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/CompetencyLetter/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension
									})
								})
							})
						}
						
	
						setTimeout(()=>{
							models.Institution_details.findAll({
								where :{
									user_id : req.User.id,
									app_id : {
										[Op.eq]:null
									},source : 'guattestation'
								}
	
							}).then(function(institutions){
								//console.log("instructionalDetails",instructionalDetails)
								res.json({
									status : 200,
									userDetails : userDetails,
									collegeData : collegeData,
									marksheets : marksheets,
									transcripts : transcripts,
									instructionalDetails : instructionalDetails,
									curriculum : curriculum,
									purpose : institutions,
									CompetencyLetter : competency_letter,
									LetterNameChange : letterfor_namechange,
									Affiliation_Letter :affiliationDetails,
									bonafied_aadhar:bonafied_aadhar,
									applicationForMark:applicationForMark,
									applicationForTran:applicationForTran,
									applicationForDegree:applicationForDegree,
									applicationForThesis:applicationForThesis,
									appliedDetails:appliedDetails,
									userMarkList:userMarkList
	
	
								})
	
							})
						},1000)
						console.log("marksheets")
					})
				}else{
				
					User_Marklist = await functions.User_Marklist_preview(req.User.id,'Masters');
					if(User_Marklist){
						User_Marklist_upload = await functions.User_Marklist_Uploadpreview(req.User.id,'Masters');
						if(User_Marklist_upload){
							var marksheets = [];
							User_Marklist_upload.forEach(userMarksheet=>{
									var imgArr = userMarksheet.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									if(appliedDetails.attestedfor.includes('marksheet') || appliedDetails.attestedfor.includes('newmark')){
									marksheets.push({
										name : userMarksheet.name,
										degree : userMarksheet.education_type,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
										extension:extension
									})
								}
								})
						}
						user_Transcripts_upload = await functions.User_Transcripts_Upload_preview(req.User.id,'Masters_','Masters_transcripts');
						if(user_Transcripts_upload){
							var transcripts = [];
							user_Transcripts_upload.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									if(appliedDetails.attestedfor.includes('transcript') ){
									transcripts.push({
									name : userTranscript.name,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
									extension:extension,
									type : userTranscript.type
						
									})
								}
								})
						}
						user_Transcripts_Degree = await functions.User_Transcripts_Upload_preview(req.User.id,'Masters_','Masters_degree');
						if(user_Transcripts_Degree){
							var degree = [];
							user_Transcripts_Degree.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									if(appliedDetails.attestedfor.includes('degree') ){
									degree.push({
											name : userTranscript.name,
											filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
											extension:extension,
										type : userTranscript.type
								})
							}
								})
						}
						user_Transcripts_Thesis = await functions.User_Transcripts_Upload_preview(req.User.id,'Masters_','Masters_thesis');
					if(user_Transcripts_Thesis){
						var thesis = [];
						user_Transcripts_Thesis.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis') ){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
						user_Transcripts_Extra = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Masters_transcripts');
						if(user_Transcripts_Extra){
							user_Transcripts_Extra.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									if(appliedDetails.attestedfor.includes('transcript') ){
									transcripts.push({
											name : userTranscript.name,
											filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
											extension:extension,
										type : userTranscript.type
								})
							}
								})
						}
						user_Transcripts_Extra_degree = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Masters_degree');
					if(user_Transcripts_Extra_degree){
						user_Transcripts_Extra_degree.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree') ){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_thesis = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Masters_thesis');
					if(user_Transcripts_Extra_thesis){
						user_Transcripts_Extra_thesis.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis') ){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					}
					instruction = await functions.User_instruction_preview(req.User.id,'Masters_');

					institutions = await functions.User_institutions_preview(req.User.id,);
					applicationForMark += marksheets.length;
					applicationForTran += transcripts.length;
					applicationForDegree +=degree.length;
					applicationForThesis += thesis.length;
				}
				res.json({
					status : 200,
					userDetails :userDetails,
					collegeData : collegeData,
					marksheets : marksheets,
					transcripts : transcripts,
					thesis:thesis,
					degree : degree,
					instructionalDetails : instruction,
					purpose : institutions,
					bonafied_aadhar:bonafied_aadhar,
					applicationForMark:applicationForMark,
					applicationForTran:applicationForTran,
					applicationForDegree:applicationForDegree,
					applicationForThesis:applicationForThesis,
					appliedDetails:appliedDetails,
					userMarkList:userMarkList
				})
	
			})
			
	}
	if(appliedDetails.applying_for == 'Phd,Masters,Bachelors'){
			models.userMarkList.findAll({
				where:{
					user_id : req.User.id,source : 'guattestation'
				}
			}).then(async function(userMarkList){
				
				if(userMarkList[0].previous_data == true){
					var differentCollegeStream = (userMarkList[0].college_stream_type == true) ? 'Yes' : 'No';
					var collegeData = [] ;
					if(differentCollegeStream == 'Yes'){
						userMarkList.forEach(marklist=>{
							models.College.find({
								where:{
									id : marklist.collegeId
								}
							}).then(function(college){
								collegeData.push({
									name : college.name,
									year : marklist.type + " " + marklist.faculty + " " + marklist.name
								})
							})
						})
					}else{
						models.College.find({
							where:{
								id: userMarkList[0].collegeId
							}
						}).then(function(college){
							console.log("college",college);
							collegeData.push({
								name : college.name,
								year : userMarkList[0].type + " " + userMarkList[0].faculty + " " + userMarkList[0].name
							})
						})
					}
	
					models.UserMarklist_Upload.findAll({
						where :{
							user_id : req.User.id,source : 'guattestation'
						}
					}).then(function(userMarksheets){
						var marksheets = [];
						userMarksheets.forEach(userMarksheet=>{
							var imgArr = userMarksheet.file_name.split('.');
							var extension = imgArr[imgArr.length - 1].trim();
							marksheets.push({
								name : userMarksheet.name,
								degree : userMarksheet.education_type,
								filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
								extension:extension
							})
						})
						var transcripts = [] ;
						var gradToPerLetters = [];
						var curriculum = [];
						var instructionalDetails = [];
						var letterfor_namechange = [];
						var affiliationDetails = [];
						var competency_letter=[];
						if(appliedDetails.educationalDetails == true){
							models.User_Transcript.findAll({
								where :{
									user_id : req.User.id,source : 'guattestation' 
								}
							}).then(function(userTranscripts){
								userTranscripts.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									transcripts.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension
									})
								})
							})
						}
	
						if(appliedDetails.curriculum == true){
							models.User_Curriculum.findAll({
								where :{
									user_id : req.User.id
								}
							}).then(function(userCurriculums){
								userCurriculums.forEach(userCurriculum=>{
									var imgArr = userCurriculum.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									curriculum.push({
										name : userCurriculum.name,
										filePath : constant.BASE_URL+"/upload/curriculum/"+req.User.id+"/"+userCurriculum.file_name,
										extension:extension
									})
								})
							})
						}
						if(appliedDetails.gradToPer == true){
							models.GradeToPercentageLetter.findAll({
								where :{
									user_id : req.User.id
								}
							}).then(function(letters){
								letters.forEach(letter=>{
									var imgArr = letter.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									gradToPerLetters.push({
										name : letter.name,
										filePath : constant.BASE_URL+"/upload/gradeToPercentLetter/"+req.User.id+"/"+letter.file_name,
										extension:extension
									})
								})
							})
						}
						if(appliedDetails.instructionalField == true){
							models.InstructionalDetails.findAll({
								where :{
									userId : req.User.id,
								}
							}).then(function(instruction){
								instructionalDetails = instruction;
							})
						}
						if(appliedDetails.LetterNameChange == true){
							models.Letterfor_NameChange.findAll({
								where :{
									user_id : req.User.id,
								}
							}).then(function(letternamechange){
								letterfor_namechange = letternamechange;
							})
						}
						if(appliedDetails.affiliation == true){
							models.Affiliation_Letter.findAll({
									where :{
										user_id : req.User.id,
									}
								}).then(function( Affiliation){
									affiliationDetails : Affiliation;
								})
						}
						if(appliedDetails.CompetencyLetter == true){
							models.competency_letter.findAll({
								where :{
									user_id : req.User.id
								}
							}).then(function(userTranscripts){
								userTranscripts.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									competency_letter.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/CompetencyLetter/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension
									})
								})
							})
						}
						
	
						setTimeout(()=>{
							models.Institution_details.findAll({
								where :{
									user_id : req.User.id,
									app_id : {
										[Op.eq]:null
									},source : 'guattestation'
								}
	
							}).then(function(institutions){
								//console.log("instructionalDetails",instructionalDetails)
								res.json({
									status : 200,
									userDetails : userDetails,
									collegeData : collegeData,
									marksheets : marksheets,
									transcripts : transcripts,
									instructionalDetails : instructionalDetails,
									curriculum : curriculum,
									purpose : institutions,
									CompetencyLetter : competency_letter,
									LetterNameChange : letterfor_namechange,
									Affiliation_Letter :affiliationDetails,
									bonafied_aadhar:bonafied_aadhar,
									applicationForMark:applicationForMark,
									applicationForTran:applicationForTran,
									applicationForDegree:applicationForDegree,
									applicationForThesis:applicationForThesis,
									appliedDetails:appliedDetails,
									userMarkList:userMarkList
	
	
								})
	
							})
						},1000)
						console.log("marksheets")
					})
				}else{
				
					User_Marklist = await functions.User_Marklist_preview(req.User.id,'Phd');
					if(User_Marklist){
						User_Marklist_upload = await functions.User_Marklist_Uploadpreview(req.User.id,'Phd');
						if(User_Marklist_upload){
							var marksheets = [];
							User_Marklist_upload.forEach(userMarksheet=>{
									var imgArr = userMarksheet.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									if(appliedDetails.attestedfor.includes('marksheet') || appliedDetails.attestedfor.includes('newmark')){
									marksheets.push({
										name : userMarksheet.name,
										degree : userMarksheet.education_type,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
										extension:extension
									})
								}
								})
						}
						user_Transcripts_upload = await functions.User_Transcripts_Upload_preview(req.User.id,'Phd_','Phd_transcripts');
						if(user_Transcripts_upload){
							var transcripts = [];
							user_Transcripts_upload.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									if(appliedDetails.attestedfor.includes('transcript')){
									transcripts.push({
									name : userTranscript.name,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
									extension:extension,
									type : userTranscript.type
						
									})
								}
								})
						}
						user_Transcripts_Degree = await functions.User_Transcripts_Upload_preview(req.User.id,'Phd_','Phd_degree');
						if(user_Transcripts_Degree){
							var degree = [];
							user_Transcripts_Degree.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									if(appliedDetails.attestedfor.includes('degree')){
									degree.push({
											name : userTranscript.name,
											filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
											extension:extension,
										type : userTranscript.type
								})
							}
								})
						}
						user_Transcripts_thesis= await functions.User_Transcripts_Upload_preview(req.User.id,'Phd_','Phd_thesis');
						console.log("user_Transcripts_thesis",user_Transcripts_thesis);
					if(user_Transcripts_thesis){
						var thesis = [];
						user_Transcripts_thesis.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
						user_Transcripts_Extra = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Phd_transcripts');
						if(user_Transcripts_Extra){
							user_Transcripts_Extra.forEach(userTranscript=>{
									var imgArr = userTranscript.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									if(appliedDetails.attestedfor.includes('transcript')){
										transcripts.push({
											name : userTranscript.name,
											filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
											extension:extension,
										type : userTranscript.type
								})
							}
								})
						}
						user_Transcripts_Extra_degree = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Phd_degree');
						console.log("user_Transcripts_Extra_degree",user_Transcripts_Extra_degree);
					if(user_Transcripts_Extra_degree){
						user_Transcripts_Extra_degree.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_thesis = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Phd_thesis');
					if(user_Transcripts_Extra_thesis){
						user_Transcripts_Extra_thesis.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					}
					instruction = await functions.User_instruction_preview(req.User.id,'Phd_');
					institutions = await functions.User_institutions_preview(req.User.id,);
					applicationForMark += marksheets.length;
					applicationForTran += transcripts.length;
					applicationForDegree +=degree.length;
					applicationForThesis += thesis.length;

				}
				res.json({
					status : 200,
					userDetails :userDetails,
					collegeData : collegeData,
					marksheets : marksheets,
					transcripts : transcripts,
					thesis:thesis,
					degree : degree,
					instructionalDetails : instruction,
					purpose : institutions,
					bonafied_aadhar:bonafied_aadhar,
					applicationForMark:applicationForMark,
					applicationForTran:applicationForTran,
					applicationForDegree:applicationForDegree,
					applicationForThesis:applicationForThesis,
					appliedDetails:appliedDetails,
					userMarkList:userMarkList
				})
	
			})
			
	}
	if(appliedDetails.applying_for == 'Masters,Bachelors'){
		models.userMarkList.findAll({
			where:{
				user_id : req.User.id,source : 'guattestation'
			}
		}).then(async function(userMarkList){
			
			if(userMarkList[0].previous_data == true){
				var differentCollegeStream = (userMarkList[0].college_stream_type == true) ? 'Yes' : 'No';
				var collegeData = [] ;
				if(differentCollegeStream == 'Yes'){
					userMarkList.forEach(marklist=>{
						models.College.find({
							where:{
								id : marklist.collegeId
							}
						}).then(function(college){
							collegeData.push({
								name : college.name,
								year : marklist.type + " " + marklist.faculty + " " + marklist.name
							})
						})
					})
				}else{
					models.College.find({
						where:{
							id: userMarkList[0].collegeId
						}
					}).then(function(college){
						console.log("college",college);
						collegeData.push({
							name : college.name,
							year : userMarkList[0].type + " " + userMarkList[0].faculty + " " + userMarkList[0].name
						})
					})
				}

				models.UserMarklist_Upload.findAll({
					where :{
						user_id : req.User.id,source : 'guattestation'
					}
				}).then(function(userMarksheets){
					var marksheets = [];
					userMarksheets.forEach(userMarksheet=>{
						var imgArr = userMarksheet.file_name.split('.');
						var extension = imgArr[imgArr.length - 1].trim();
						marksheets.push({
							name : userMarksheet.name,
							degree : userMarksheet.education_type,
							filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
							extension:extension
						})
					})
					var transcripts = [] ;
					var gradToPerLetters = [];
					var curriculum = [];
					var instructionalDetails = [];
					var letterfor_namechange = [];
					var affiliationDetails = [];
					var competency_letter=[];
					if(appliedDetails.educationalDetails == true){
						models.User_Transcript.findAll({
							where :{
								user_id : req.User.id,source : 'guattestation' 
							}
						}).then(function(userTranscripts){
							userTranscripts.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								transcripts.push({
									name : userTranscript.name,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
									extension:extension
								})
							})
						})
					}

					if(appliedDetails.curriculum == true){
						models.User_Curriculum.findAll({
							where :{
								user_id : req.User.id
							}
						}).then(function(userCurriculums){
							userCurriculums.forEach(userCurriculum=>{
								var imgArr = userCurriculum.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								curriculum.push({
									name : userCurriculum.name,
									filePath : constant.BASE_URL+"/upload/curriculum/"+req.User.id+"/"+userCurriculum.file_name,
									extension:extension
								})
							})
						})
					}
					if(appliedDetails.gradToPer == true){
						models.GradeToPercentageLetter.findAll({
							where :{
								user_id : req.User.id
							}
						}).then(function(letters){
							letters.forEach(letter=>{
								var imgArr = letter.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								gradToPerLetters.push({
									name : letter.name,
									filePath : constant.BASE_URL+"/upload/gradeToPercentLetter/"+req.User.id+"/"+letter.file_name,
									extension:extension
								})
							})
						})
					}
					if(appliedDetails.instructionalField == true){
						models.InstructionalDetails.findAll({
							where :{
								userId : req.User.id,
							}
						}).then(function(instruction){
							instructionalDetails = instruction;
						})
					}
					if(appliedDetails.LetterNameChange == true){
						models.Letterfor_NameChange.findAll({
							where :{
								user_id : req.User.id,
							}
						}).then(function(letternamechange){
							letterfor_namechange = letternamechange;
						})
					}
					if(appliedDetails.affiliation == true){
						models.Affiliation_Letter.findAll({
								where :{
									user_id : req.User.id,
								}
							}).then(function( Affiliation){
								affiliationDetails : Affiliation;
							})
					}
					if(appliedDetails.CompetencyLetter == true){
						models.competency_letter.findAll({
							where :{
								user_id : req.User.id
							}
						}).then(function(userTranscripts){
							userTranscripts.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								competency_letter.push({
									name : userTranscript.name,
									filePath : constant.BASE_URL+"/upload/CompetencyLetter/"+req.User.id+"/"+userTranscript.file_name,
									extension:extension
								})
							})
						})
					}
					

					setTimeout(()=>{
						models.Institution_details.findAll({
							where :{
								user_id : req.User.id,
								app_id : {
									[Op.eq]:null
								},source : 'guattestation'
							}

						}).then(function(institutions){
							//console.log("instructionalDetails",instructionalDetails)
							res.json({
								status : 200,
								userDetails : userDetails,
								collegeData : collegeData,
								marksheets : marksheets,
								transcripts : transcripts,
								instructionalDetails : instructionalDetails,
								curriculum : curriculum,
								purpose : institutions,
								CompetencyLetter : competency_letter,
								LetterNameChange : letterfor_namechange,
								Affiliation_Letter :affiliationDetails,
								bonafied_aadhar:bonafied_aadhar,
								applicationForMark:applicationForMark,
								applicationForTran:applicationForTran,
								applicationForDegree:applicationForDegree,
								applicationForThesis:applicationForThesis,
								appliedDetails:appliedDetails,
								userMarkList:userMarkList


							})

						})
					},1000)
					console.log("marksheets")
				})
			}else{
			
				User_Marklist_mast = await functions.User_Marklist_preview(req.User.id,'Masters');

				if(User_Marklist_mast){
					User_Marklist_upload_mast = await functions.User_Marklist_Uploadpreview(req.User.id,'Masters');
					if(User_Marklist_upload_mast){
						var marksheets = [];
						User_Marklist_upload_mast.forEach(userMarksheet=>{
								var imgArr = userMarksheet.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('marksheet') || appliedDetails.attestedfor.includes('newmark')){
								marksheets.push({
									name : userMarksheet.name,
									degree : userMarksheet.education_type,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
									extension:extension
								})
							}
							})
					}					
					user_Transcripts_upload_mast = await functions.User_Transcripts_Upload_preview(req.User.id,'Masters_','Masters_transcripts');
					if(user_Transcripts_upload_mast){
						var transcripts = [];
						user_Transcripts_upload_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript') ){
								transcripts.push({
								name : userTranscript.name,
								filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
								extension:extension,
								type : userTranscript.type
					
								})
							}
							})
					}
					user_Transcripts_Degree_mast = await functions.User_Transcripts_Upload_preview(req.User.id,'Masters_','Masters_degree');
					if(user_Transcripts_Degree_mast){
						var degree = [];
						user_Transcripts_Degree_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Thesis_mast = await functions.User_Transcripts_Upload_preview(req.User.id,'Masters_','Masters_thesis');
					if(user_Transcripts_Thesis_mast){
						var thesis = [];
						user_Transcripts_Thesis_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_mast = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Masters_transcripts');
					if(user_Transcripts_Extra_mast){
						user_Transcripts_Extra_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_degree_mast = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Masters_degree');
					if(user_Transcripts_Extra_degree_mast){
						user_Transcripts_Extra_degree_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_thesis_mast = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Masters_thesis');
					if(user_Transcripts_Extra_thesis_mast){
						user_Transcripts_Extra_thesis_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
				}
				instruction = await functions.User_instruction_preview(req.User.id,'Masters_');

				User_Marklist_bach = await functions.User_Marklist_preview(req.User.id,'Bachelors');
				if(User_Marklist_bach){
					User_Marklist_upload_bach = await functions.User_Marklist_Uploadpreview(req.User.id,'Bachelors');
					if(User_Marklist_upload_bach){
						User_Marklist_upload_bach.forEach(userMarksheet=>{
								var imgArr = userMarksheet.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('marksheet') || appliedDetails.attestedfor.includes('newmark')){
								marksheets.push({
									name : userMarksheet.name,
									degree : userMarksheet.education_type,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
									extension:extension
								})
							}
							})
					}
					user_Transcripts_upload_bach = await functions.User_Transcripts_Upload_preview(req.User.id,'Bachelors_','Bachelors_transcripts');
					if(user_Transcripts_upload_bach){
						user_Transcripts_upload_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
								name : userTranscript.name,
								filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
								extension:extension,
								type : userTranscript.type
					
								})
								}
							})
					}
					user_Transcripts_Degree_bach = await functions.User_Transcripts_Upload_preview(req.User.id,'Bachelors_','Bachelors_degree');
					if(user_Transcripts_Degree_bach){
						user_Transcripts_Degree_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Thesis_bach = await functions.User_Transcripts_Upload_preview(req.User.id,'Bachelors_','Bachelors_thesis');
					if(user_Transcripts_Thesis_bach){
						user_Transcripts_Thesis_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_bach = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Bachelors_transcripts');
					if(user_Transcripts_Extra_bach){
						user_Transcripts_Extra_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_degree_bach = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Bachelors_degree');
					if(user_Transcripts_Extra_degree_bach){	
						user_Transcripts_Extra_degree_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_thesis_bach = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Bachelors_thesis');
					if(user_Transcripts_Extra_thesis_bach){
						user_Transcripts_Extra_thesis_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
				}
				instruction = await functions.User_instruction_preview(req.User.id,'Bachelors_');
			}
			institutions = await functions.User_institutions_preview(req.User.id,);
			applicationForMark += marksheets.length;
			applicationForTran += transcripts.length;
			applicationForDegree +=degree.length;
			applicationForThesis += thesis.length;
			res.json({
				status : 200,
				userDetails :userDetails,
				collegeData : collegeData,
				marksheets : marksheets,
				transcripts : transcripts,
				thesis:thesis,
				degree : degree,
				instructionalDetails : instruction,
				purpose : institutions,
				bonafied_aadhar:bonafied_aadhar,
				applicationForMark:applicationForMark,
				applicationForTran:applicationForTran,
				applicationForDegree:applicationForDegree,
				applicationForThesis:applicationForThesis,
				appliedDetails:appliedDetails,
				userMarkList:userMarkList
			})
		})
	}
	if(appliedDetails.applying_for == 'Phd'){
		models.userMarkList.findAll({
			where:{
				user_id : req.User.id,source : 'guattestation'
			}
		}).then(async function(userMarkList){
			
			if(userMarkList[0].previous_data == true){
				var differentCollegeStream = (userMarkList[0].college_stream_type == true) ? 'Yes' : 'No';
				var collegeData = [] ;
				if(differentCollegeStream == 'Yes'){
					userMarkList.forEach(marklist=>{
						models.College.find({
							where:{
								id : marklist.collegeId
							}
						}).then(function(college){
							collegeData.push({
								name : college.name,
								year : marklist.type + " " + marklist.faculty + " " + marklist.name
							})
						})
					})
				}else{
					models.College.find({
						where:{
							id: userMarkList[0].collegeId
						}
					}).then(function(college){
						console.log("college",college);
						collegeData.push({
							name : college.name,
							year : userMarkList[0].type + " " + userMarkList[0].faculty + " " + userMarkList[0].name
						})
					})
				}

				models.UserMarklist_Upload.findAll({
					where :{
						user_id : req.User.id,source : 'guattestation'
					}
				}).then(function(userMarksheets){
					var marksheets = [];
					userMarksheets.forEach(userMarksheet=>{
						var imgArr = userMarksheet.file_name.split('.');
						var extension = imgArr[imgArr.length - 1].trim();
						marksheets.push({
							name : userMarksheet.name,
							degree : userMarksheet.education_type,
							filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
							extension:extension
						})
					})
					var transcripts = [] ;
					var gradToPerLetters = [];
					var curriculum = [];
					var instructionalDetails = [];
					var letterfor_namechange = [];
					var affiliationDetails = [];
					var competency_letter=[];
					if(appliedDetails.educationalDetails == true){
						models.User_Transcript.findAll({
							where :{
								user_id : req.User.id,source : 'guattestation' 
							}
						}).then(function(userTranscripts){
							userTranscripts.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								transcripts.push({
									name : userTranscript.name,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
									extension:extension
								})
							})
						})
					}

					if(appliedDetails.curriculum == true){
						models.User_Curriculum.findAll({
							where :{
								user_id : req.User.id
							}
						}).then(function(userCurriculums){
							userCurriculums.forEach(userCurriculum=>{
								var imgArr = userCurriculum.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								curriculum.push({
									name : userCurriculum.name,
									filePath : constant.BASE_URL+"/upload/curriculum/"+req.User.id+"/"+userCurriculum.file_name,
									extension:extension
								})
							})
						})
					}
					if(appliedDetails.gradToPer == true){
						models.GradeToPercentageLetter.findAll({
							where :{
								user_id : req.User.id
							}
						}).then(function(letters){
							letters.forEach(letter=>{
								var imgArr = letter.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								gradToPerLetters.push({
									name : letter.name,
									filePath : constant.BASE_URL+"/upload/gradeToPercentLetter/"+req.User.id+"/"+letter.file_name,
									extension:extension
								})
							})
						})
					}
					if(appliedDetails.instructionalField == true){
						models.InstructionalDetails.findAll({
							where :{
								userId : req.User.id,
							}
						}).then(function(instruction){
							instructionalDetails = instruction;
						})
					}
					if(appliedDetails.LetterNameChange == true){
						models.Letterfor_NameChange.findAll({
							where :{
								user_id : req.User.id,
							}
						}).then(function(letternamechange){
							letterfor_namechange = letternamechange;
						})
					}
					if(appliedDetails.affiliation == true){
						models.Affiliation_Letter.findAll({
								where :{
									user_id : req.User.id,
								}
							}).then(function( Affiliation){
								affiliationDetails : Affiliation;
							})
					}
					if(appliedDetails.CompetencyLetter == true){
						models.competency_letter.findAll({
							where :{
								user_id : req.User.id
							}
						}).then(function(userTranscripts){
							userTranscripts.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								competency_letter.push({
									name : userTranscript.name,
									filePath : constant.BASE_URL+"/upload/CompetencyLetter/"+req.User.id+"/"+userTranscript.file_name,
									extension:extension
								})
							})
						})
					}
					

					setTimeout(()=>{
						models.Institution_details.findAll({
							where :{
								user_id : req.User.id,
								app_id : {
									[Op.eq]:null
								},source : 'guattestation'
							}

						}).then(function(institutions){
							//console.log("instructionalDetails",instructionalDetails)
							res.json({
								status : 200,
								userDetails : userDetails,
								collegeData : collegeData,
								marksheets : marksheets,
								transcripts : transcripts,
								instructionalDetails : instructionalDetails,
								curriculum : curriculum,
								purpose : institutions,
								CompetencyLetter : competency_letter,
								LetterNameChange : letterfor_namechange,
								Affiliation_Letter :affiliationDetails,
								bonafied_aadhar:bonafied_aadhar,
								applicationForMark:applicationForMark,
								applicationForTran:applicationForTran,
								applicationForDegree:applicationForDegree,
								applicationForThesis:applicationForThesis,
								appliedDetails:appliedDetails,
								userMarkList:userMarkList


							})

						})
					},1000)
					console.log("marksheets")
				})
			}else{
			
				User_Marklist_mast = await functions.User_Marklist_preview(req.User.id,'Masters');

				if(User_Marklist_mast){
					User_Marklist_upload_mast = await functions.User_Marklist_Uploadpreview(req.User.id,'Masters');
					if(User_Marklist_upload_mast){
						var marksheets = [];
						User_Marklist_upload_mast.forEach(userMarksheet=>{
								var imgArr = userMarksheet.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('marksheet') || appliedDetails.attestedfor.includes('newmark')){
								marksheets.push({
									name : userMarksheet.name,
									degree : userMarksheet.education_type,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
									extension:extension
								})
							}
							})
					}					
					user_Transcripts_upload_mast = await functions.User_Transcripts_Upload_preview(req.User.id,'Masters_','Masters_transcripts');
					if(user_Transcripts_upload_mast){
						var transcripts = [];
						user_Transcripts_upload_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript') ){
								transcripts.push({
								name : userTranscript.name,
								filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
								extension:extension,
								type : userTranscript.type
					
								})
							}
							})
					}
					user_Transcripts_Degree_mast = await functions.User_Transcripts_Upload_preview(req.User.id,'Masters_','Masters_degree');
					if(user_Transcripts_Degree_mast){
						var degree = [];
						user_Transcripts_Degree_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Thesis_mast = await functions.User_Transcripts_Upload_preview(req.User.id,'Masters_','Masters_thesis');
					if(user_Transcripts_Thesis_mast){
						var thesis = [];
						user_Transcripts_Thesis_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_mast = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Masters_transcripts');
					if(user_Transcripts_Extra_mast){
						user_Transcripts_Extra_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_degree_mast = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Masters_degree');
					if(user_Transcripts_Extra_degree_mast){
						user_Transcripts_Extra_degree_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_thesis_mast = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Masters_thesis');
					if(user_Transcripts_Extra_thesis_mast){
						user_Transcripts_Extra_thesis_mast.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
				}
				instruction = await functions.User_instruction_preview(req.User.id,'Masters_');

				User_Marklist_bach = await functions.User_Marklist_preview(req.User.id,'Bachelors');
				if(User_Marklist_bach){
					User_Marklist_upload_bach = await functions.User_Marklist_Uploadpreview(req.User.id,'Bachelors');
					if(User_Marklist_upload_bach){
						User_Marklist_upload_bach.forEach(userMarksheet=>{
								var imgArr = userMarksheet.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('marksheet') || appliedDetails.attestedfor.includes('newmark')){
								marksheets.push({
									name : userMarksheet.name,
									degree : userMarksheet.education_type,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
									extension:extension
								})
							}
							})
					}
					user_Transcripts_upload_bach = await functions.User_Transcripts_Upload_preview(req.User.id,'Bachelors_','Bachelors_transcripts');
					if(user_Transcripts_upload_bach){
						user_Transcripts_upload_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
								name : userTranscript.name,
								filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
								extension:extension,
								type : userTranscript.type
					
								})
								}
							})
					}
					user_Transcripts_Degree_bach = await functions.User_Transcripts_Upload_preview(req.User.id,'Bachelors_','Bachelors_degree');
					if(user_Transcripts_Degree_bach){
						user_Transcripts_Degree_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Thesis_bach = await functions.User_Transcripts_Upload_preview(req.User.id,'Bachelors_','Bachelors_thesis');
					if(user_Transcripts_Thesis_bach){
						user_Transcripts_Thesis_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_bach = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Bachelors_transcripts');
					if(user_Transcripts_Extra_bach){
						user_Transcripts_Extra_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_degree_bach = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Bachelors_degree');
					if(user_Transcripts_Extra_degree_bach){	
						user_Transcripts_Extra_degree_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_thesis_bach = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Bachelors_thesis');
					if(user_Transcripts_Extra_thesis_bach){
						user_Transcripts_Extra_thesis_bach.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
				}
				instruction = await functions.User_instruction_preview(req.User.id,'Bachelors_');

				User_Marklist_phd = await functions.User_Marklist_preview(req.User.id,'Phd');
				if(User_Marklist_phd){
					User_Marklist_upload_phd = await functions.User_Marklist_Uploadpreview(req.User.id,'Phd');
					if(User_Marklist_upload_phd){
						User_Marklist_upload_phd.forEach(userMarksheet=>{
								var imgArr = userMarksheet.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('marksheet') || appliedDetails.attestedfor.includes('newmark')){
								marksheets.push({
									name : userMarksheet.name,
									degree : userMarksheet.education_type,
									filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userMarksheet.file_name,
									extension:extension
								})
							}
							})
					}
					user_Transcripts_upload_phd = await functions.User_Transcripts_Upload_preview(req.User.id,'Phd_','Phd_transcripts');
					if(user_Transcripts_upload_phd){
						user_Transcripts_upload_phd.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
									if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
								name : userTranscript.name,
								filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
								extension:extension,
								type : userTranscript.type
					
								})
							}
							})
					}
					user_Transcripts_Degree_phd = await functions.User_Transcripts_Upload_preview(req.User.id,'Phd_','Phd_degree');
					if(user_Transcripts_Degree_phd){
						user_Transcripts_Degree_phd.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_thesis_phd = await functions.User_Transcripts_Upload_preview(req.User.id,'Phd_','Phd_thesis');
					if(user_Transcripts_thesis_phd){
						user_Transcripts_thesis_phd.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_phd = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Phd_transcripts');
					if(user_Transcripts_Extra_phd){
						user_Transcripts_Extra_phd.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('transcript')){
								transcripts.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_degree_phd = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Phd_degree');
					if(user_Transcripts_Extra_degree_phd){
						user_Transcripts_Extra_degree_phd.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('degree')){
								degree.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
					user_Transcripts_Extra_thesis_phd = await functions.User_Transcripts_Upload_Extra_preview(req.User.id,'extra_Phd_thesis');
					if(user_Transcripts_Extra_thesis_phd){
						user_Transcripts_Extra_thesis_phd.forEach(userTranscript=>{
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								if(appliedDetails.attestedfor.includes('thesis')){
								thesis.push({
										name : userTranscript.name,
										filePath : constant.BASE_URL+"/upload/documents/"+req.User.id+"/"+userTranscript.file_name,
										extension:extension,
									type : userTranscript.type
							})
						}
							})
					}
				
				instruction = await functions.User_instruction_preview(req.User.id,'Phd_');
			}
			institutions = await functions.User_institutions_preview(req.User.id,);

			applicationForMark += marksheets.length;
			applicationForTran += transcripts.length;
			applicationForDegree +=degree.length;
			applicationForThesis += thesis.length;
			if(institutions.deliveryType == 'physcial'){
				sealed_cover =institutions.noofcopies
			}




			res.json({
				status : 200,
				userDetails :userDetails,
				collegeData : collegeData,
				marksheets : marksheets,
				transcripts : transcripts,
				thesis:thesis,
				degree : degree,
				sealed_cover:sealed_cover,
				instructionalDetails : instruction,
				purpose : institutions,
				bonafied_aadhar:bonafied_aadhar,
				applicationForMark:applicationForMark,
				applicationForTran:applicationForTran,
				applicationForDegree:applicationForDegree,
				applicationForThesis:applicationForThesis,
				appliedDetails:appliedDetails,
				userMarkList:userMarkList
			})
			}
	})
}
	})
});

router.post('/addUsergradToPerDetails',middlewares.getUserInfo,(req,res)=>{
	models.User.update({
		gradToPer:req.body.gradToPer
	},
	{
		where:{
			id:req.User.id
		}
	}).then(updated=>{
		const valueUpdated = updated;
		res.status(200).json({
			message : valueUpdated
		})
	})
})

router.post('/deleteErrataLetter',middlewares.getUserInfo,function(req,res){
	var userData = req.body.data
	models.GradeToPercentageLetter.find({
		where:{
			user_id:userData.user_id
		}

	}).then(function(users){
		if(users){
			models.GradeToPercentageLetter.find({
				where:{
					id:userData.id,
					user_id:userData.user_id
				}
			}).then(function(file){
				if(file){
					//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + userData.user_id + '/' + file.file_name, function (err) {
						file.destroy().then(function(letterDelete){

							if(letterDelete){
								models.Activitytracker.create({
									user_id : userData.user_id,
									activity : letterDelete.name+ 'Deleted',
									data : letterDelete.file_name + ' deleted by ' + req.User.email,
									applicaiton_id : userData.app_id
								})
								res.json({
								status:200,
								message:'Grade to Percentage Letter deleted successfully!!...'
							})
						}
						});
					//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}

			})
		}
	})
});

// router.get('/getGradeToPercentageLetterDetails',middlewares.getUserInfo,function(req,res){
// 	console.log('/getGradeToPercentageLetterDetails');
// 	var data = {
// 		bachelor : [],
// 		master : [],

// 	};
// 	var bachelorsData = [];
// 	var masterData = [];
// 	var facultyData = [];
// 	if(req.query.editFlag == 'true'){

// 	}else{
// 		models.userMarkList.find({
// 			where : {
// 				user_id : req.User.id
// 			}
// 		}).then(userMarkList_data=>{
// 			if(userMarkList_data.previous_data == true){

// 			}else{
// 				models.userMarkList.findAll({
// 					where :{
// 						user_id : req.User.id,
// 						type : 'Bachelors'
// 					}
// 				}).then(function(userMarkList){
// 					if(userMarkList.length > 0){
// 						if(userMarkList[0].college_stream_type == true){
// 							userMarkList.forEach(marklist=>{
// 								if(facultyData.length > 0){
// 									var flag = false;
// 									facultyData.forEach(faculty=>{
// 										if(faculty == marklist.faculty){
// 											flag = true
// 										}
// 									})
// 									if(flag == false){
// 										facultyData.push(marklist.faculty)
// 									}
// 								}else{
// 									facultyData.push(marklist.faculty)

// 								}

// 							})
// 							facultyData.forEach(faculty =>{
// 								models.Program_List.find({
// 									where:{
// 										degree : 'Bachelors',
// 										faculty : faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.find({
// 										where:{
// 											user_id : req.User.id,
// 											type : 'Bachelors',
// 											faculty : faculty,
// 										}
// 									}).then(function(markListDetails){
// 										if(markListDetails.patteren == 'Annual'){
// 											var year = converter.toWordsOrdinal(facultyMaster.year);
// 											models.userMarkList.find({
// 												where :{
// 													type : 'Bachelors',
// 													user_id : req.User.id,
// 													name : year +' Year',
// 													faculty : faculty
// 												}
// 											}).then(function(markListDetails){
// 												models.GradeToPercentageLetter.find({
// 													where : {
// 														name : markListDetails.type+'_'+markListDetails.faculty,
// 														user_id  :req.User.id
// 													}
// 												}).then(function(letterData){
// 													var name;
// 													var collegeId;
// 													if(letterData){
// 														name = letterData.name;
// 														collegeId = letterData.collegeId;
// 													}else{
// 														name = markListDetails.type+'_'+markListDetails.faculty;
// 														collegeId = markListDetails.collegeId;
// 													}
// 													models.College.find({
// 														where:{
// 															id : collegeId
// 														}
// 													}).then(function(college){
// 														bachelorsData.push({
// 															doc_id : (letterData) ? (letterData.id) : null,
// 															name : name,
// 															filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 															filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 															lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 															upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 															app_id : (letterData) ? (letterData.app_id) : null,
// 															collegeId : college.id,
// 															collegeName : college.name,
// 														})
// 													})
// 												})
// 											})
// 										}else if(markListDetails.patteren == 'Semester'){
// 											var year = parseInt(facultyMaster.year) * 2;
// 											models.userMarkList.find({
// 												where:{
// 													type : 'Bachelors',
// 													user_id : req.User.id,
// 													name : 'Semester ' + year,
// 													faculty : faculty
// 												}
// 											}).then(function(markListDetails){
// 												models.GradeToPercentageLetter.find({
// 													where : {
// 														name : markListDetails.type+'_'+markListDetails.faculty,
// 														user_id  :req.User.id
// 													}
// 												}).then(function(letterData){
// 													var name;
// 													var collegeId;
// 													if(letterData){
// 														name = letterData.name;
// 														collegeId = letterData.collegeId;
// 													}else{
// 														name = markListDetails.type+'_'+markListDetails.faculty;
// 														collegeId = markListDetails.collegeId;
// 													}
// 													models.College.find({
// 														where:{
// 															id : collegeId
// 														}
// 													}).then(function(college){
// 														bachelorsData.push({
// 															doc_id:(letterData) ? (letterData.id) :null,
// 															name : name,
// 															filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 															filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 															lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 															upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 															app_id : (letterData) ? (letterData.app_id) : null,
// 															collegeId : college.id,
// 															collegeName : college.name,
// 														})
// 													})
// 												})
// 											})
// 										}
// 									})
// 								})
// 							})

// 						}else if(userMarkList[0].college_stream_type == false){
// 							models.GradeToPercentageLetter.find({
// 								where : {
// 									name : userMarkList[0].type+'_'+userMarkList[0].faculty,
// 									user_id  :req.User.id
// 								}
// 							}).then(function(letterData){
// 								var name;
// 								var collegeId;
// 								if(letterData){
// 									name = letterData.name;
// 									collegeId = letterData.collegeId;
// 								}else{
// 									name = userMarkList[0].type+'_'+userMarkList[0].faculty;
// 									collegeId =userMarkList[0].collegeId;
// 								}
// 								models.College.find({
// 									where:{
// 										id : collegeId
// 									}
// 								}).then(function(college){
// 									bachelorsData.push({
// 										doc_id:(letterData) ? (letterData.id) :null,
// 										name : name,
// 										filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 										filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 										lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 										upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 										app_id : (letterData) ? (letterData.app_id) : null,
// 										collegeId : college.id,
// 										collegeName : college.name,
// 									})
// 								})
// 							})
// 						}
// 						data.bachelor = bachelorsData
// 					}
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : 'Masters'
// 						}
// 					}).then(function(userMarkList){
// 						if(userMarkList.length > 0){
// 							if(userMarkList[0].college_stream_type == true){
// 								userMarkList.forEach(marklist=>{
// 									if(facultyData.length > 0){
// 										var flag = false;
// 										facultyData.forEach(faculty=>{
// 											if(faculty == marklist.faculty){
// 												flag = true
// 											}
// 										})
// 										if(flag == false){
// 											facultyData.push(marklist.faculty)
// 										}
// 									}else{
// 										facultyData.push(marklist.faculty)

// 									}

// 								})

// 								facultyData.forEach(faculty =>{
// 									models.Program_List.find({
// 										where:{
// 											degree : 'Masters',
// 											faculty : faculty
// 										}
// 									}).then(function(facultyMaster){
// 										models.userMarkList.find({
// 											where:{
// 												user_id : req.User.id,
// 												type : 'Masters',
// 												faculty : faculty,
// 											}
// 										}).then(function(markListDetails){
// 											if(markListDetails.patteren == 'Annual'){
// 												var year = converter.toWordsOrdinal(facultyMaster.year);
// 												models.userMarkList.find({
// 													where:{
// 														type : 'Masters',
// 														user_id : req.User.id,
// 														name : year +' Year',
// 														faculty : faculty
// 													}
// 												}).then(function(markListDetails){
// 													models.GradeToPercentageLetter.find({
// 														where : {
// 															name : markListDetails.type+'_'+markListDetails.faculty,
// 															user_id  :req.User.id
// 														}
// 													}).then(function(letterData){
// 														var name;
// 														var collegeId;
// 														if(letterData){
// 															name = letterData.name;
// 															collegeId = letterData.collegeId;
// 														}else{
// 															name = markListDetails.type+'_'+markListDetails.faculty;
// 															collegeId = markListDetails.collegeId;
// 														}
// 														models.College.find({
// 															where:{
// 																id : collegeId
// 															}
// 														}).then(function(college){
// 															masterData.push({
// 																doc_id:(letterData) ? (letterData.id) :null,
// 																name : name,
// 																filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 																filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 																lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 																upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 																app_id : (letterData) ? (letterData.app_id) : null,
// 																collegeId : college.id,
// 																collegeName : college.name,
// 															})
// 														})
// 													})
// 												})
// 											}else if(markListDetails.patteren == 'Semester'){
// 												var year = parseInt(facultyMaster.year) * 2;
// 												models.userMarkList.find({
// 													where:{
// 														type : 'Masters',
// 														user_id : req.User.id,
// 														name : 'Semester ' + year,
// 														faculty : faculty
// 													}
// 												}).then(function(markListDetails){
// 													models.GradeToPercentageLetter.find({
// 														where : {
// 															name : markListDetails.type+'_'+markListDetails.faculty,
// 															user_id  :req.User.id
// 														}
// 													}).then(function(letterData){
// 														var name;
// 														var collegeId;
// 														if(letterData){
// 															name = letterData.name;
// 															collegeId = letterData.collegeId;
// 														}else{
// 															name = markListDetails.type+'_'+markListDetails.faculty;
// 															collegeId = markListDetails.collegeId;
// 														}
// 														models.College.find({
// 															where:{
// 																id : collegeId
// 															}
// 														}).then(function(college){
// 															masterData.push({
// 																doc_id:(letterData) ? (letterData.id) :null,
// 																name : name,
// 																filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 																filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 																lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 																upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 																app_id : (letterData) ? (letterData.app_id) : null,
// 																collegeId : college.id,
// 																collegeName : college.name,
// 															})
// 														})
// 													})
// 												})
// 											}
// 										})
// 									})
// 								})

// 							}else if(userMarkList[0].college_stream_type == false){
// 								models.GradeToPercentageLetter.find({
// 									where : {
// 										name : userMarkList[0].type+'_'+userMarkList[0].faculty,
// 										user_id  :req.User.id
// 									}
// 								}).then(function(letterData){
// 									var name;
// 									var collegeId;
// 									if(letterData){
// 										name = letterData.name;
// 										collegeId = letterData.collegeId;
// 									}else{
// 										name = userMarkList[0].type+'_'+userMarkList[0].faculty;
// 										collegeId = userMarkList[0].collegeId;
// 									}
// 									models.College.find({
// 										where:{
// 											id : collegeId
// 										}
// 									}).then(function(college){
// 										masterData.push({
// 											doc_id:(letterData) ? (letterData.id) :null,
// 											name : name,
// 											filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 											filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 											lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 											upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 											app_id : (letterData) ? (letterData.app_id) : null,
// 											collegeId : college.id,
// 											collegeName : college.name,
// 										})
// 									})
// 								})
// 							}
// 							setTimeout(()=>{
// 								data.master = masterData
// 							},2000)
// 						}
// 						setTimeout(()=>{
// 							res.json({
// 								status : 200,
// 								data : data
// 							})
// 						},2500)
// 					})
// 				})
// 			}
// 		})
// 	}

// });

router.get('/getGradeToPercentageLetterDetails',middlewares.getUserInfo,function(req,res){
	console.log('/getGradeToPercentageLetterDetails');
	var data = {
		bachelor : [],
		master : [],
		phd : [],

	};
	var bachelorsData = [];
	var masterData = [];
	var phdData = [];
	var facultyData = [];
	if(req.query.editFlag == 'true'){

	}else{
		models.Applied_For_Details.findAll({
			where :{
				user_id :req.User.id,
				 app_id : null,
				 source : 'guattestation'
			}
		}).then(function(applied_for){
		models.userMarkList.find({
			where : {
				user_id : req.User.id,source : 'guattestation'
			}
		}).then(userMarkList_data=>{
			if(userMarkList_data.previous_data == true){

			}else{
				if(applied_for){
					if(applied_for[0].applying_for == 'Bachelors'){
						models.userMarkList.findAll({
							where :{
								user_id : req.User.id,
								type : 'Bachelors',source : 'guattestation'
							}
						}).then(function(userMarkList){
							if(userMarkList.length > 0){
								if(userMarkList[0].college_stream_type == true){
									userMarkList.forEach(marklist=>{
										if(facultyData.length > 0){
											var flag = false;
											facultyData.forEach(faculty=>{
												if(faculty == marklist.faculty){
													flag = true
												}
											})
											if(flag == false){
												facultyData.push(marklist.faculty)
											}
										}else{
											facultyData.push(marklist.faculty)

										}

									})
									facultyData.forEach(faculty =>{
										models.Program_List.find({
											where:{
												degree : 'Bachelors',
												faculty : faculty
											}
										}).then(function(facultyMaster){
											models.userMarkList.find({
												where:{
													user_id : req.User.id,
													type : 'Bachelors',
													faculty : faculty,source : 'guattestation'
												}
											}).then(function(markListDetails){
												if(markListDetails.patteren == 'Annual'){
													var year = converter.toWordsOrdinal(facultyMaster.year);
													models.userMarkList.find({
														where :{
															type : 'Bachelors',
															user_id : req.User.id,
															name : year +' Year',
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																bachelorsData.push({
																	doc_id : (letterData) ? (letterData.id) : null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}else if(markListDetails.patteren == 'Semester'){
													var year = parseInt(facultyMaster.year) * 2;
													models.userMarkList.find({
														where:{
															type : 'Bachelors',
															user_id : req.User.id,
															name : 'Semester ' + year,
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																bachelorsData.push({
																	doc_id:(letterData) ? (letterData.id) :null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}
											})
										})
									})

								}else if(userMarkList[0].college_stream_type == false){
									models.GradeToPercentageLetter.find({
										where : {
											name : userMarkList[0].type+'_'+userMarkList[0].faculty,
											user_id  :req.User.id
										}
									}).then(function(letterData){
										var name;
										var collegeId;
										if(letterData){
											name = letterData.name;
											collegeId = letterData.collegeId;
										}else{
											name = userMarkList[0].type+'_'+userMarkList[0].faculty;
											collegeId =userMarkList[0].collegeId;
										}
										models.College.find({
											where:{
												id : collegeId
											}
										}).then(function(college){
											bachelorsData.push({
												doc_id:(letterData) ? (letterData.id) :null,
												name : name,
												type : (letterData) ? letterData.file_name.split('.').pop() : null,
												filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
												filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
												lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
												upload_step : (letterData) ? (letterData.upload_step) : 'default',
												app_id : (letterData) ? (letterData.app_id) : null,
												collegeId : college.id,
												collegeName : college.name,
											})
										})
									})
								}
								data.bachelor = bachelorsData
							}
						})
					}
					else if(applied_for[0].applying_for == 'Masters'){
						models.userMarkList.findAll({
							where :{
								user_id : req.User.id,
								type : 'Masters',source : 'guattestation'
							}
						}).then(function(userMarkList){
							if(userMarkList.length > 0){
								if(userMarkList[0].college_stream_type == true){
									userMarkList.forEach(marklist=>{
										if(facultyData.length > 0){
											var flag = false;
											facultyData.forEach(faculty=>{
												if(faculty == marklist.faculty){
													flag = true
												}
											})
											if(flag == false){
												facultyData.push(marklist.faculty)
											}
										}else{
											facultyData.push(marklist.faculty)

										}

									})
									facultyData.forEach(faculty =>{
										models.Program_List.find({
											where:{
												degree : 'Masters',
												faculty : faculty
											}
										}).then(function(facultyMaster){
											models.userMarkList.find({
												where:{
													user_id : req.User.id,
													type : 'Masters',
													faculty : faculty,source : 'guattestation'
												}
											}).then(function(markListDetails){
												if(markListDetails.patteren == 'Annual'){
													var year = converter.toWordsOrdinal(facultyMaster.year);
													models.userMarkList.find({
														where :{
															type : 'Masters',
															user_id : req.User.id,
															name : year +' Year',
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																masterData.push({
																	doc_id : (letterData) ? (letterData.id) : null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}else if(markListDetails.patteren == 'Semester'){
													var year = parseInt(facultyMaster.year) * 2;
													models.userMarkList.find({
														where:{
															type : 'Masters',
															user_id : req.User.id,
															name : 'Semester ' + year,
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																masterData.push({
																	doc_id:(letterData) ? (letterData.id) :null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}
											})
										})
									})

								}else if(userMarkList[0].college_stream_type == false){
									models.GradeToPercentageLetter.find({
										where : {
											name : userMarkList[0].type+'_'+userMarkList[0].faculty,
											user_id  :req.User.id
										}
									}).then(function(letterData){
										var name;
										var collegeId;
										if(letterData){
											name = letterData.name;
											collegeId = letterData.collegeId;
										}else{
											name = userMarkList[0].type+'_'+userMarkList[0].faculty;
											collegeId =userMarkList[0].collegeId;
										}
										models.College.find({
											where:{
												id : collegeId
											}
										}).then(function(college){
											masterData.push({
												doc_id:(letterData) ? (letterData.id) :null,
												name : name,
												type : (letterData) ? letterData.file_name.split('.').pop() : null,
												filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
												filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
												lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
												upload_step : (letterData) ? (letterData.upload_step) : 'default',
												app_id : (letterData) ? (letterData.app_id) : null,
												collegeId : college.id,
												collegeName : college.name,
											})
										})
									})
								}
								data.master = masterData
							}
						})
					}
					else if(applied_for[0].applying_for == 'Masters,Bachelors'){
							models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : 'Bachelors',source : 'guattestation'
								}
							}).then(function(userMarkList){
								if(userMarkList.length > 0){
									if(userMarkList[0].college_stream_type == true){
										userMarkList.forEach(marklist=>{
											if(facultyData.length > 0){
												var flag = false;
												facultyData.forEach(faculty=>{
													if(faculty == marklist.faculty){
														flag = true
													}
												})
												if(flag == false){
													facultyData.push(marklist.faculty)
												}
											}else{
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty =>{
											models.Program_List.find({
												where:{
													degree : 'Bachelors',
													faculty : faculty
												}
											}).then(function(facultyMaster){
												models.userMarkList.find({
													where:{
														user_id : req.User.id,
														type : 'Bachelors',
														faculty : faculty,source : 'guattestation'
													}
												}).then(function(markListDetails){
													if(markListDetails.patteren == 'Annual'){
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where :{
																type : 'Bachelors',
																user_id : req.User.id,
																name : year +' Year',
																faculty : faculty,source : 'guattestation'
															}
														}).then(function(markListDetails){
															models.GradeToPercentageLetter.find({
																where : {
																	name : markListDetails.type+'_'+markListDetails.faculty,
																	user_id  :req.User.id
																}
															}).then(function(letterData){
																var name;
																var collegeId;
																if(letterData){
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																}else{
																	name = markListDetails.type+'_'+markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where:{
																		id : collegeId
																	}
																}).then(function(college){
																	bachelorsData.push({
																		doc_id : (letterData) ? (letterData.id) : null,
																		name : name,
																		type : (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																		filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																		upload_step : (letterData) ? (letterData.upload_step) : 'default',
																		app_id : (letterData) ? (letterData.app_id) : null,
																		collegeId : college.id,
																		collegeName : college.name,
																	})
																})
															})
														})
													}else if(markListDetails.patteren == 'Semester'){
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where:{
																type : 'Bachelors',
																user_id : req.User.id,
																name : 'Semester ' + year,
																faculty : faculty,source : 'guattestation'
															}
														}).then(function(markListDetails){
															models.GradeToPercentageLetter.find({
																where : {
																	name : markListDetails.type+'_'+markListDetails.faculty,
																	user_id  :req.User.id
																}
															}).then(function(letterData){
																var name;
																var collegeId;
																if(letterData){
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																}else{
																	name = markListDetails.type+'_'+markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where:{
																		id : collegeId
																	}
																}).then(function(college){
																	bachelorsData.push({
																		doc_id:(letterData) ? (letterData.id) :null,
																		name : name,
																		type : (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																		filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																		upload_step : (letterData) ? (letterData.upload_step) : 'default',
																		app_id : (letterData) ? (letterData.app_id) : null,
																		collegeId : college.id,
																		collegeName : college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									}else if(userMarkList[0].college_stream_type == false){
										models.GradeToPercentageLetter.find({
											where : {
												name : userMarkList[0].type+'_'+userMarkList[0].faculty,
												user_id  :req.User.id
											}
										}).then(function(letterData){
											var name;
											var collegeId;
											if(letterData){
												name = letterData.name;
												collegeId = letterData.collegeId;
											}else{
												name = userMarkList[0].type+'_'+userMarkList[0].faculty;
												collegeId =userMarkList[0].collegeId;
											}
											models.College.find({
												where:{
													id : collegeId
												}
											}).then(function(college){
												bachelorsData.push({
													doc_id:(letterData) ? (letterData.id) :null,
													name : name,
													type : (letterData) ? letterData.file_name.split('.').pop() : null,
													filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
													filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
													upload_step : (letterData) ? (letterData.upload_step) : 'default',
													app_id : (letterData) ? (letterData.app_id) : null,
													collegeId : college.id,
													collegeName : college.name,
												})
											})
										})
									}
									data.bachelor = bachelorsData
								}
								models.userMarkList.findAll({
									where :{
										user_id : req.User.id,
										type : 'Masters',source : 'guattestation'
									}
								}).then(function(userMarkList){
									if(userMarkList.length > 0){
										if(userMarkList[0].college_stream_type == true){
											userMarkList.forEach(marklist=>{
												if(facultyData.length > 0){
													var flag = false;
													facultyData.forEach(faculty=>{
														if(faculty == marklist.faculty){
															flag = true
														}
													})
													if(flag == false){
														facultyData.push(marklist.faculty)
													}
												}else{
													facultyData.push(marklist.faculty)

												}

											})

											facultyData.forEach(faculty =>{
												models.Program_List.find({
													where:{
														degree : 'Masters',
														faculty : faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.find({
														where:{
															user_id : req.User.id,
															type : 'Masters',
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														if(markListDetails.patteren == 'Annual'){
															var year = converter.toWordsOrdinal(facultyMaster.year);
															models.userMarkList.find({
																where:{
																	type : 'Masters',
																	user_id : req.User.id,
																	name : year +' Year',
																	faculty : faculty,source : 'guattestation'
																}
															}).then(function(markListDetails){
																models.GradeToPercentageLetter.find({
																	where : {
																		name : markListDetails.type+'_'+markListDetails.faculty,
																		user_id  :req.User.id
																	}
																}).then(function(letterData){
																	var name;
																	var collegeId;
																	if(letterData){
																		name = letterData.name;
																		collegeId = letterData.collegeId;
																	}else{
																		name = markListDetails.type+'_'+markListDetails.faculty;
																		collegeId = markListDetails.collegeId;
																	}
																	models.College.find({
																		where:{
																			id : collegeId
																		}
																	}).then(function(college){
																		masterData.push({
																			doc_id:(letterData) ? (letterData.id) :null,
																			name : name,
																			type : (letterData) ? letterData.file_name.split('.').pop() : null,
																			filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																			filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																			lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																			upload_step : (letterData) ? (letterData.upload_step) : 'default',
																			app_id : (letterData) ? (letterData.app_id) : null,
																			collegeId : college.id,
																			collegeName : college.name,
																		})
																	})
																})
															})
														}else if(markListDetails.patteren == 'Semester'){
															var year = parseInt(facultyMaster.year) * 2;
															models.userMarkList.find({
																where:{
																	type : 'Masters',
																	user_id : req.User.id,
																	name : 'Semester ' + year,
																	faculty : faculty,source : 'guattestation'
																}
															}).then(function(markListDetails){
																models.GradeToPercentageLetter.find({
																	where : {
																		name : markListDetails.type+'_'+markListDetails.faculty,
																		user_id  :req.User.id
																	}
																}).then(function(letterData){
																	var name;
																	var collegeId;
																	if(letterData){
																		name = letterData.name;
																		collegeId = letterData.collegeId;
																	}else{
																		name = markListDetails.type+'_'+markListDetails.faculty;
																		collegeId = markListDetails.collegeId;
																	}
																	models.College.find({
																		where:{
																			id : collegeId
																		}
																	}).then(function(college){
																		masterData.push({
																			doc_id:(letterData) ? (letterData.id) :null,
																			name : name,
																			type : (letterData) ? letterData.file_name.split('.').pop() : null,
																			filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																			filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																			lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																			upload_step : (letterData) ? (letterData.upload_step) : 'default',
																			app_id : (letterData) ? (letterData.app_id) : null,
																			collegeId : college.id,
																			collegeName : college.name,
																		})
																	})
																})
															})
														}
													})
												})
											})

										}else if(userMarkList[0].college_stream_type == false){
											models.GradeToPercentageLetter.find({
												where : {
													name : userMarkList[0].type+'_'+userMarkList[0].faculty,
													user_id  :req.User.id
												}
											}).then(function(letterData){
												var name;
												var collegeId;
												if(letterData){
													name = letterData.name;
													collegeId = letterData.collegeId;
												}else{
													name = userMarkList[0].type+'_'+userMarkList[0].faculty;
													collegeId = userMarkList[0].collegeId;
												}
												models.College.find({
													where:{
														id : collegeId
													}
												}).then(function(college){
													masterData.push({
														doc_id:(letterData) ? (letterData.id) :null,
														name : name,
														type : (letterData) ? letterData.file_name.split('.').pop() : null,
														filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
														filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
														lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
														upload_step : (letterData) ? (letterData.upload_step) : 'default',
														app_id : (letterData) ? (letterData.app_id) : null,
														collegeId : college.id,
														collegeName : college.name,
													})
												})
											})
										}
										setTimeout(()=>{
											data.master = masterData
										},2000)
									}
									// setTimeout(()=>{
									// 	res.json({
									// 		status : 200,
									// 		data : data
									// 	})
									// },2500)
								})
							})
					}else if(applied_for[0].applying_for == 'Phd,Masters,Bachelors'){
						models.userMarkList.findAll({
							where :{
								user_id : req.User.id,
								type : 'Phd',source : 'guattestation'
							}
						}).then(function(userMarkList){
							if(userMarkList.length > 0){
								if(userMarkList[0].college_stream_type == true){
									userMarkList.forEach(marklist=>{
										if(facultyData.length > 0){
											var flag = false;
											facultyData.forEach(faculty=>{
												if(faculty == marklist.faculty){
													flag = true
												}
											})
											if(flag == false){
												facultyData.push(marklist.faculty)
											}
										}else{
											facultyData.push(marklist.faculty)

										}

									})
									facultyData.forEach(faculty =>{
										models.Program_List.find({
											where:{
												degree : 'Phd',
												faculty : faculty
											}
										}).then(function(facultyMaster){
											models.userMarkList.find({
												where:{
													user_id : req.User.id,
													type : 'Phd',
													faculty : faculty,source : 'guattestation'
												}
											}).then(function(markListDetails){
												if(markListDetails.patteren == 'Annual'){
													var year = converter.toWordsOrdinal(facultyMaster.year);
													models.userMarkList.find({
														where :{
															type : 'Phd',
															user_id : req.User.id,
															name : year +' Year',
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																phdData.push({
																	doc_id : (letterData) ? (letterData.id) : null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}else if(markListDetails.patteren == 'Semester'){
													var year = parseInt(facultyMaster.year) * 2;
													models.userMarkList.find({
														where:{
															type : 'Bachelors',
															user_id : req.User.id,
															name : 'Semester ' + year,
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																phdData.push({
																	doc_id:(letterData) ? (letterData.id) :null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}
											})
										})
									})

								}else if(userMarkList[0].college_stream_type == false){
									models.GradeToPercentageLetter.find({
										where : {
											name : userMarkList[0].type+'_'+userMarkList[0].faculty,
											user_id  :req.User.id
										}
									}).then(function(letterData){
										var name;
										var collegeId;
										if(letterData){
											name = letterData.name;
											collegeId = letterData.collegeId;
										}else{
											name = userMarkList[0].type+'_'+userMarkList[0].faculty;
											collegeId =userMarkList[0].collegeId;
										}
										models.College.find({
											where:{
												id : collegeId
											}
										}).then(function(college){
											phdData.push({
												doc_id:(letterData) ? (letterData.id) :null,
												name : name,
												type : (letterData) ? letterData.file_name.split('.').pop() : null,
												filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
												filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
												lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
												upload_step : (letterData) ? (letterData.upload_step) : 'default',
												app_id : (letterData) ? (letterData.app_id) : null,
												collegeId : college.id,
												collegeName : college.name,
											})
										})
									})
								}
								data.phd = phdData
							}
						})
					}
					setTimeout(()=>{
						res.json({
							status : 200,
							data : data
						})
					},2500)
				}else{
					if(applied_for[0].applying_for == 'Bachelors'){
						models.userMarkList.findAll({
							where :{
								user_id : req.User.id,
								type : 'Bachelors',source : 'guattestation'
							}
						}).then(function(userMarkList){
							if(userMarkList.length > 0){
								if(userMarkList[0].college_stream_type == true){
									userMarkList.forEach(marklist=>{
										if(facultyData.length > 0){
											var flag = false;
											facultyData.forEach(faculty=>{
												if(faculty == marklist.faculty){
													flag = true
												}
											})
											if(flag == false){
												facultyData.push(marklist.faculty)
											}
										}else{
											facultyData.push(marklist.faculty)

										}

									})
									facultyData.forEach(faculty =>{
										models.Program_List.find({
											where:{
												degree : 'Bachelors',
												faculty : faculty
											}
										}).then(function(facultyMaster){
											models.userMarkList.find({
												where:{
													user_id : req.User.id,
													type : 'Bachelors',
													faculty : faculty,source : 'guattestation'
												}
											}).then(function(markListDetails){
												if(markListDetails.patteren == 'Annual'){
													var year = converter.toWordsOrdinal(facultyMaster.year);
													models.userMarkList.find({
														where :{
															type : 'Bachelors',
															user_id : req.User.id,
															name : year +' Year',
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																bachelorsData.push({
																	doc_id : (letterData) ? (letterData.id) : null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}else if(markListDetails.patteren == 'Semester'){
													var year = parseInt(facultyMaster.year) * 2;
													models.userMarkList.find({
														where:{
															type : 'Bachelors',
															user_id : req.User.id,
															name : 'Semester ' + year,
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																bachelorsData.push({
																	doc_id:(letterData) ? (letterData.id) :null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}
											})
										})
									})

								}else if(userMarkList[0].college_stream_type == false){
									models.GradeToPercentageLetter.find({
										where : {
											name : userMarkList[0].type+'_'+userMarkList[0].faculty,
											user_id  :req.User.id
										}
									}).then(function(letterData){
										var name;
										var collegeId;
										if(letterData){
											name = letterData.name;
											collegeId = letterData.collegeId;
										}else{
											name = userMarkList[0].type+'_'+userMarkList[0].faculty;
											collegeId =userMarkList[0].collegeId;
										}
										models.College.find({
											where:{
												id : collegeId
											}
										}).then(function(college){
											bachelorsData.push({
												doc_id:(letterData) ? (letterData.id) :null,
												name : name,
												type : (letterData) ? letterData.file_name.split('.').pop() : null,
												filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
												filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
												lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
												upload_step : (letterData) ? (letterData.upload_step) : 'default',
												app_id : (letterData) ? (letterData.app_id) : null,
												collegeId : college.id,
												collegeName : college.name,
											})
										})
									})
								}
								data.bachelor = bachelorsData
							}
						})
					}
					else if(applied_for[0].applying_for == 'Masters'){
						models.userMarkList.findAll({
							where :{
								user_id : req.User.id,
								type : 'Masters',source : 'guattestation'
							}
						}).then(function(userMarkList){
							if(userMarkList.length > 0){
								if(userMarkList[0].college_stream_type == true){
									userMarkList.forEach(marklist=>{
										if(facultyData.length > 0){
											var flag = false;
											facultyData.forEach(faculty=>{
												if(faculty == marklist.faculty){
													flag = true
												}
											})
											if(flag == false){
												facultyData.push(marklist.faculty)
											}
										}else{
											facultyData.push(marklist.faculty)

										}

									})
									facultyData.forEach(faculty =>{
										models.Program_List.find({
											where:{
												degree : 'Masters',
												faculty : faculty
											}
										}).then(function(facultyMaster){
											models.userMarkList.find({
												where:{
													user_id : req.User.id,
													type : 'Masters',
													faculty : faculty,source : 'guattestation'
												}
											}).then(function(markListDetails){
												if(markListDetails.patteren == 'Annual'){
													var year = converter.toWordsOrdinal(facultyMaster.year);
													models.userMarkList.find({
														where :{
															type : 'Masters',
															user_id : req.User.id,
															name : year +' Year',
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																masterData.push({
																	doc_id : (letterData) ? (letterData.id) : null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}else if(markListDetails.patteren == 'Semester'){
													var year = parseInt(facultyMaster.year) * 2;
													models.userMarkList.find({
														where:{
															type : 'Masters',
															user_id : req.User.id,
															name : 'Semester ' + year,
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																masterData.push({
																	doc_id:(letterData) ? (letterData.id) :null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}
											})
										})
									})

								}else if(userMarkList[0].college_stream_type == false){
									models.GradeToPercentageLetter.find({
										where : {
											name : userMarkList[0].type+'_'+userMarkList[0].faculty,
											user_id  :req.User.id
										}
									}).then(function(letterData){
										var name;
										var collegeId;
										if(letterData){
											name = letterData.name;
											collegeId = letterData.collegeId;
										}else{
											name = userMarkList[0].type+'_'+userMarkList[0].faculty;
											collegeId =userMarkList[0].collegeId;
										}
										models.College.find({
											where:{
												id : collegeId
											}
										}).then(function(college){
											masterData.push({
												doc_id:(letterData) ? (letterData.id) :null,
												name : name,
												type : (letterData) ? letterData.file_name.split('.').pop() : null,
												filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
												filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
												lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
												upload_step : (letterData) ? (letterData.upload_step) : 'default',
												app_id : (letterData) ? (letterData.app_id) : null,
												collegeId : college.id,
												collegeName : college.name,
											})
										})
									})
								}
								data.master = masterData
							}
						})
					}
					else if(applied_for[0].applying_for == 'Masters,Bachelors'){
							models.userMarkList.findAll({
								where :{
									user_id : req.User.id,
									type : 'Bachelors',source : 'guattestation'
								}
							}).then(function(userMarkList){
								if(userMarkList.length > 0){
									if(userMarkList[0].college_stream_type == true){
										userMarkList.forEach(marklist=>{
											if(facultyData.length > 0){
												var flag = false;
												facultyData.forEach(faculty=>{
													if(faculty == marklist.faculty){
														flag = true
													}
												})
												if(flag == false){
													facultyData.push(marklist.faculty)
												}
											}else{
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty =>{
											models.Program_List.find({
												where:{
													degree : 'Bachelors',
													faculty : faculty,source : 'guattestation'
												}
											}).then(function(facultyMaster){
												models.userMarkList.find({
													where:{
														user_id : req.User.id,
														type : 'Bachelors',
														faculty : faculty,source : 'guattestation'
													}
												}).then(function(markListDetails){
													if(markListDetails.patteren == 'Annual'){
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where :{
																type : 'Bachelors',
																user_id : req.User.id,
																name : year +' Year',
																faculty : faculty,source : 'guattestation'
															}
														}).then(function(markListDetails){
															models.GradeToPercentageLetter.find({
																where : {
																	name : markListDetails.type+'_'+markListDetails.faculty,
																	user_id  :req.User.id
																}
															}).then(function(letterData){
																var name;
																var collegeId;
																if(letterData){
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																}else{
																	name = markListDetails.type+'_'+markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where:{
																		id : collegeId
																	}
																}).then(function(college){
																	bachelorsData.push({
																		doc_id : (letterData) ? (letterData.id) : null,
																		name : name,
																		filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																		filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																		upload_step : (letterData) ? (letterData.upload_step) : 'default',
																		app_id : (letterData) ? (letterData.app_id) : null,
																		collegeId : college.id,
																		collegeName : college.name,
																	})
																})
															})
														})
													}else if(markListDetails.patteren == 'Semester'){
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where:{
																type : 'Bachelors',
																user_id : req.User.id,
																name : 'Semester ' + year,
																faculty : faculty,source : 'guattestation'
															}
														}).then(function(markListDetails){
															models.GradeToPercentageLetter.find({
																where : {
																	name : markListDetails.type+'_'+markListDetails.faculty,
																	user_id  :req.User.id
																}
															}).then(function(letterData){
																var name;
																var collegeId;
																if(letterData){
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																}else{
																	name = markListDetails.type+'_'+markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where:{
																		id : collegeId
																	}
																}).then(function(college){
																	bachelorsData.push({
																		doc_id:(letterData) ? (letterData.id) :null,
																		name : name,
																		filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																		filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																		upload_step : (letterData) ? (letterData.upload_step) : 'default',
																		app_id : (letterData) ? (letterData.app_id) : null,
																		collegeId : college.id,
																		collegeName : college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									}else if(userMarkList[0].college_stream_type == false){
										models.GradeToPercentageLetter.find({
											where : {
												name : userMarkList[0].type+'_'+userMarkList[0].faculty,
												user_id  :req.User.id
											}
										}).then(function(letterData){
											var name;
											var collegeId;
											if(letterData){
												name = letterData.name;
												collegeId = letterData.collegeId;
											}else{
												name = userMarkList[0].type+'_'+userMarkList[0].faculty;
												collegeId =userMarkList[0].collegeId;
											}
											models.College.find({
												where:{
													id : collegeId
												}
											}).then(function(college){
												bachelorsData.push({
													doc_id:(letterData) ? (letterData.id) :null,
													name : name,
													type : (letterData) ? letterData.file_name.split('.').pop() : null,
													filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
													filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
													upload_step : (letterData) ? (letterData.upload_step) : 'default',
													app_id : (letterData) ? (letterData.app_id) : null,
													collegeId : college.id,
													collegeName : college.name,
												})
											})
										})
									}
									data.bachelor = bachelorsData
								}
								models.userMarkList.findAll({
									where :{
										user_id : req.User.id,
										type : 'Masters',source : 'guattestation'
									}
								}).then(function(userMarkList){
									if(userMarkList.length > 0){
										if(userMarkList[0].college_stream_type == true){
											userMarkList.forEach(marklist=>{
												if(facultyData.length > 0){
													var flag = false;
													facultyData.forEach(faculty=>{
														if(faculty == marklist.faculty){
															flag = true
														}
													})
													if(flag == false){
														facultyData.push(marklist.faculty)
													}
												}else{
													facultyData.push(marklist.faculty)

												}

											})

											facultyData.forEach(faculty =>{
												models.Program_List.find({
													where:{
														degree : 'Masters',
														faculty : faculty
													}
												}).then(function(facultyMaster){
													models.userMarkList.find({
														where:{
															user_id : req.User.id,
															type : 'Masters',
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														if(markListDetails.patteren == 'Annual'){
															var year = converter.toWordsOrdinal(facultyMaster.year);
															models.userMarkList.find({
																where:{
																	type : 'Masters',
																	user_id : req.User.id,
																	name : year +' Year',
																	faculty : faculty,source : 'guattestation'
																}
															}).then(function(markListDetails){
																models.GradeToPercentageLetter.find({
																	where : {
																		name : markListDetails.type+'_'+markListDetails.faculty,
																		user_id  :req.User.id
																	}
																}).then(function(letterData){
																	var name;
																	var collegeId;
																	if(letterData){
																		name = letterData.name;
																		collegeId = letterData.collegeId;
																	}else{
																		name = markListDetails.type+'_'+markListDetails.faculty;
																		collegeId = markListDetails.collegeId;
																	}
																	models.College.find({
																		where:{
																			id : collegeId
																		}
																	}).then(function(college){
																		masterData.push({
																			doc_id:(letterData) ? (letterData.id) :null,
																			name : name,
																			type : (letterData) ? letterData.file_name.split('.').pop() : null,
																			filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																			filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																			lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																			upload_step : (letterData) ? (letterData.upload_step) : 'default',
																			app_id : (letterData) ? (letterData.app_id) : null,
																			collegeId : college.id,
																			collegeName : college.name,
																		})
																	})
																})
															})
														}else if(markListDetails.patteren == 'Semester'){
															var year = parseInt(facultyMaster.year) * 2;
															models.userMarkList.find({
																where:{
																	type : 'Masters',
																	user_id : req.User.id,
																	name : 'Semester ' + year,
																	faculty : faculty,source : 'guattestation'
																}
															}).then(function(markListDetails){
																models.GradeToPercentageLetter.find({
																	where : {
																		name : markListDetails.type+'_'+markListDetails.faculty,
																		user_id  :req.User.id
																	}
																}).then(function(letterData){
																	var name;
																	var collegeId;
																	if(letterData){
																		name = letterData.name;
																		collegeId = letterData.collegeId;
																	}else{
																		name = markListDetails.type+'_'+markListDetails.faculty;
																		collegeId = markListDetails.collegeId;
																	}
																	models.College.find({
																		where:{
																			id : collegeId
																		}
																	}).then(function(college){
																		masterData.push({
																			doc_id:(letterData) ? (letterData.id) :null,
																			name : name,
																			type : (letterData) ? letterData.file_name.split('.').pop() : null,
																			filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																			filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																			lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																			upload_step : (letterData) ? (letterData.upload_step) : 'default',
																			app_id : (letterData) ? (letterData.app_id) : null,
																			collegeId : college.id,
																			collegeName : college.name,
																		})
																	})
																})
															})
														}
													})
												})
											})

										}else if(userMarkList[0].college_stream_type == false){
											models.GradeToPercentageLetter.find({
												where : {
													name : userMarkList[0].type+'_'+userMarkList[0].faculty,
													user_id  :req.User.id
												}
											}).then(function(letterData){
												var name;
												var collegeId;
												if(letterData){
													name = letterData.name;
													collegeId = letterData.collegeId;
												}else{
													name = userMarkList[0].type+'_'+userMarkList[0].faculty;
													collegeId = userMarkList[0].collegeId;
												}
												models.College.find({
													where:{
														id : collegeId
													}
												}).then(function(college){
													masterData.push({
														doc_id:(letterData) ? (letterData.id) :null,
														name : name,
														type : (letterData) ? letterData.file_name.split('.').pop() : null,
														filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
														filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
														lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
														upload_step : (letterData) ? (letterData.upload_step) : 'default',
														app_id : (letterData) ? (letterData.app_id) : null,
														collegeId : college.id,
														collegeName : college.name,
													})
												})
											})
										}
										setTimeout(()=>{
											data.master = masterData
										},2000)
									}
									// setTimeout(()=>{
									// 	res.json({
									// 		status : 200,
									// 		data : data
									// 	})
									// },2500)
								})
							})
					}else if(applied_for[0].applying_for == 'Phd,Masters,Bachelors'){
						models.userMarkList.findAll({
							where :{
								user_id : req.User.id,
								type : 'Phd',source : 'guattestation'
							}
						}).then(function(userMarkList){
							if(userMarkList.length > 0){
								if(userMarkList[0].college_stream_type == true){
									userMarkList.forEach(marklist=>{
										if(facultyData.length > 0){
											var flag = false;
											facultyData.forEach(faculty=>{
												if(faculty == marklist.faculty){
													flag = true
												}
											})
											if(flag == false){
												facultyData.push(marklist.faculty)
											}
										}else{
											facultyData.push(marklist.faculty)

										}

									})
									facultyData.forEach(faculty =>{
										models.Program_List.find({
											where:{
												degree : 'Phd',
												faculty : faculty
											}
										}).then(function(facultyMaster){
											models.userMarkList.find({
												where:{
													user_id : req.User.id,
													type : 'Phd',
													faculty : faculty,source : 'guattestation'
												}
											}).then(function(markListDetails){
												if(markListDetails.patteren == 'Annual'){
													var year = converter.toWordsOrdinal(facultyMaster.year);
													models.userMarkList.find({
														where :{
															type : 'Phd',
															user_id : req.User.id,
															name : year +' Year',
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																phdData.push({
																	doc_id : (letterData) ? (letterData.id) : null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}else if(markListDetails.patteren == 'Semester'){
													var year = parseInt(facultyMaster.year) * 2;
													models.userMarkList.find({
														where:{
															type : 'Bachelors',
															user_id : req.User.id,
															name : 'Semester ' + year,
															faculty : faculty,source : 'guattestation'
														}
													}).then(function(markListDetails){
														models.GradeToPercentageLetter.find({
															where : {
																name : markListDetails.type+'_'+markListDetails.faculty,
																user_id  :req.User.id
															}
														}).then(function(letterData){
															var name;
															var collegeId;
															if(letterData){
																name = letterData.name;
																collegeId = letterData.collegeId;
															}else{
																name = markListDetails.type+'_'+markListDetails.faculty;
																collegeId = markListDetails.collegeId;
															}
															models.College.find({
																where:{
																	id : collegeId
																}
															}).then(function(college){
																phdData.push({
																	doc_id:(letterData) ? (letterData.id) :null,
																	name : name,
																	type : (letterData) ? letterData.file_name.split('.').pop() : null,
																	filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
																	filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																	lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
																	upload_step : (letterData) ? (letterData.upload_step) : 'default',
																	app_id : (letterData) ? (letterData.app_id) : null,
																	collegeId : college.id,
																	collegeName : college.name,
																})
															})
														})
													})
												}
											})
										})
									})

								}else if(userMarkList[0].college_stream_type == false){
									models.GradeToPercentageLetter.find({
										where : {
											name : userMarkList[0].type+'_'+userMarkList[0].faculty,
											user_id  :req.User.id
										}
									}).then(function(letterData){
										var name;
										var collegeId;
										if(letterData){
											name = letterData.name;
											collegeId = letterData.collegeId;
										}else{
											name = userMarkList[0].type+'_'+userMarkList[0].faculty;
											collegeId =userMarkList[0].collegeId;
										}
										models.College.find({
											where:{
												id : collegeId
											}
										}).then(function(college){
											phdData.push({
												doc_id:(letterData) ? (letterData.id) :null,
												name : name,
												type : (letterData) ? letterData.file_name.split('.').pop() : null,
												filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
												filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
												lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
												upload_step : (letterData) ? (letterData.upload_step) : 'default',
												app_id : (letterData) ? (letterData.app_id) : null,
												collegeId : college.id,
												collegeName : college.name,
											})
										})
									})
								}
								data.phd = phdData
							}
						})
					}
					setTimeout(()=>{
						res.json({
							status : 200,
							data : data
						})
					},2500)
				}


			}
		})
	})
	}

});
router.post('/upload_gradeToPercentLetter',function(req,res){
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id;
	var filename;
	var dir = constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + userId;
	//var dir = constant.FILE_LOCATION + "public\\upload\\gradeToPercentLetter\\" + userId;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
  	var storage = multer.diskStorage({
		destination: function(req, file, callback) {
			callback(null, constant.FILE_LOCATION+'public/upload/gradeToPercentLetter/'+userId);
			//callback(null, constant.FILE_LOCATION+'public\\upload\\gradeToPercentLetter\\'+userId);
		},
		filename: function(req, file, callback) {
			//to generate the filename in a random string
			var extension = file.originalname.split('.');
			filename = (require('shortid').generate())+'.'+extension[1];
			callback(null, file.originalname);
			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
			var flag = false;
			for(var i = 0; i < format.length;i++){
				if(file.originalname.indexOf(format[i]) > -1){
					flag = true;
					image = file.originalname.split(format[i]).join('_');
				}
			}
			if(flag == false){
				image = file.originalname
			}
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
			var flag = false;
			for(var i = 0; i < format.length;i++){
				if(file.originalname.indexOf(format[i]) > -1){
					flag = true;
					file.originalname = file.originalname.split(format[i]).join('_');
				}
			}
			if(flag == false){
				file.originalname = file.originalname
			}

			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = filename;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION +'public/upload/gradeToPercentLetter/' + userId + '/' + image, (err, pdfBuffer) => {
				//fs.readFile(constant.FILE_LOCATION +'public\\upload\\gradeToPercentLetter\\' + userId + '\\' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if(item.text){}
				});
			});
		} else {

			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				// models.User_Transcript.find({
				// 	where:
				// 	{
				// 		user_id: userId,
				// 		type: transcript_doc,
				// 		collegeId : req.query.clgId
				// 	}
				// }).then(function(user_exists){
				// 	if(user_exists){
				// 		user_exists.update({
				// 			name: transcript_name,
				// 			user_id: userId,
				// 			type: transcript_doc,
				// 			file_name: imageLocationToCallClient,
				// 			lock_transcript : false,
				// 			collegeId : req.query.clgId
				// 		}).then(function(transcript_updated){
				// 			if(transcript_updated){
				// 				return res.json({
				// 					status: 200,
				// 					message: `Upload Completed.`,
				// 					data : transcript_doc
				// 				});
				// 			}else{
				// 				return res.json({
				// 					status: 400,
				// 					message: `Error occured in uploading document.`
				// 				});
				// 			}
				// 		})
				// 	}else{


					var fileStatus = false;
					models.GradeToPercentageLetter.findAll({
						where :{
							user_id: userId,
						}
					}).then((datam)=>{
						if(datam.length > 0){
							datam.forEach(function(marklistData){
								if(marklistData){
									if(marklistData.file_name == imageLocationToCallClient){
										fileStatus=true;
									}
								}
							})
						}
						if(fileStatus==true){
							res.json({
								status: 200,
								message: `File already exist. please upload another file!!!..`,
							})
						}else{
							if(doc_id != null && doc_id != undefined && doc_id != ''){
								models.GradeToPercentageLetter.find({
									where:{
										id : doc_id,

									}
								}).then(function(GradeToPercentageLetter){
									GradeToPercentageLetter.update({
										file_name : imageLocationToCallClient,
										lock_transcript : false,
										upload_step : 'changed'
									}).then(function(updatedLetter){
										if(updatedLetter){
											return res.json({
												status: 200,
												message: `Upload Completed.`,
												data : updatedLetter
											});
										} else {
											return res.json({
												status: 400,
												message: `Error occured in uploading document.`
											});
										}
									})
								})
							}else{
								if(app_id == null){
									models.GradeToPercentageLetter.create({
										name: transcript_name,
										user_id: userId,
										type: transcript_doc,
										file_name: imageLocationToCallClient,
										lock_transcript : false,
										collegeId : req.query.clgId
									}).then(function (userTranscript) {
										if (userTranscript) {
											return res.json({
												status: 200,
												message: `Upload Completed.`,
												data : transcript_doc
											});
										} else {
											return res.json({
												status: 400,
												message: `Error occured in uploading document.`
											});
										}

									});
								}else{
									models.GradeToPercentageLetter.create({
										name: transcript_name,
										user_id: userId,
										type: transcript_doc,
										file_name: imageLocationToCallClient,
										lock_transcript : false,
										collegeId : req.query.clgId,
										upload_step : "changed",
										app_id :app_id
									}).then(function (userTranscript) {
										if (userTranscript) {
											return res.json({
												status: 200,
												message: `Upload Completed.`,
												data : transcript_doc
											});
										} else {
											return res.json({
												status: 400,
												message: `Error occured in uploading document.`
											});
										}

									});
								}
							}
						}
					})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/gradeToPercentLetter/' + userId + '/' + image, function (err) {
					//fs.unlink(constant.FILE_LOCATION + 'public\\upload\\gradeToPercentLetter\\' + userId + '\\' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});
router.post('/downloadForm',async function(req,res){
	var userId = req.body.user_id;
	var application_id = req.body.application_id;
	let collegeId ;
    file=[]
	docfile=[]
	doctrance=[]
	applyDetails=[]
	let showdetails 
	applyDetail=[]
	marksheet = []
	purpose= []
	let showdetail
	var applicationFor = '';

	let applicant = await functions.application(req.body.user_id,'guattestation');

	
	let userdetails = await functions.getuserdetail(req.body.user_id);
	

	let documents =  await functions.getdocdetailpdc(req.body.user_id,application_id,'guattestation');
	
	
	let documenttrantranscript =  await functions.getdocdetailtrantranscript(req.body.user_id,application_id);


	let payment = await functions.getorderDetails(req.body.user_id,application_id, 'guattestation');

	let usermarklist = await functions.usermarklist_form(req.body.user_id,application_id);

	let apply_for = await functions.application_for(req.body.user_id,application_id);

	noofMarksheet = await functions.getCountofMark(req.body.user_id,application_id);

	nooftranscript = await functions.getCountoftranscript(req.body.user_id,application_id);

	noofdegree = await functions.getCountofdegree(req.body.user_id,application_id);

	noofthesis = await functions.getCountofthesis(req.body.user_id,application_id);

	let instructional = await functions.instructional_details(req.body.user_id,application_id);
	instructional.forEach(document=>{
	
		marksheet.push(
			[{ text:'Instructional Details For',bold: true ,alignment:'right'}, {text:document.courseName,bold: true,alignment:'left'}],
			[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
			[{ text: 'Name ' ,bold: true,}, { text: ':' + document.studentName }],
			[{ text: 'Course Name ' ,bold: true,}, { text: ':' + document.courseName }],
			[{ text: 'College Name ',bold: true,}, { text: ':' + document.collegeName }],
			[{ text: 'Specialization ',bold: true,}, { text: ':' + document.specialization }],
			[{ text: 'Duration ',bold: true,}, { text: ':' + document.duration }],
			[{ text: 'Division/Class ',bold: true,}, { text: ':' + document.division }],
			[{ text: 'Year of Passing ',bold: true,}, { text: ':' + document.yearofpassing }],
			[{ text: 'Year of Enrollment ',bold: true,}, { text: ':' + document.yearofenrollment }],
			[{ text: 'Instruction Medium ',bold: true,}, { text: ':' + document.instruction_medium }],
			[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
			[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
		)   
	})
	if(instructional.length > 0){
		applicationFor += 'Marksheet('+noofMarksheet.length+')';
	}else{
		if (apply_for[0].attestedfor.includes("marksheet")){
			applicationFor += 'Marksheet('+noofMarksheet.length+')';
	
		}
		if (apply_for[0].attestedfor.includes("transcript")){
			applicationFor += '+Transcript('+nooftranscript.length+')';
	
		}
		if (apply_for[0].attestedfor.includes("degree")){
			applicationFor += '+Degree('+noofdegree.length+')';
	
		}
		if (apply_for[0].attestedfor.includes("thesis")){
			applicationFor += '+Thesis('+noofthesis.length+')';
	
		}
	}
	

	var fileu=0;
    let usermarklistupload = await functions.usermarlistupload(req.body.user_id,application_id);
	
	usermarklistupload.forEach(document=>{
		console.log("documentdocument",document.name);
		fileu++;
		file.push(
			[{ text: fileu+'                   :' + document.name}],
		)
	})
	documents.forEach(doc=>{
		console.log("documentdocument",doc);
		fileu++;
		docfile.push(
			[{ text: fileu+'                   :' + doc.name}],
		)
	})
	documenttrantranscript.forEach(doctran=>{
		console.log("documentdocument",doctran);
		fileu++;
		doctrance.push(
			[{ text: fileu+'                   :' + doctran.name}],
		)
	})
	
	apply_for.forEach(apply=>{
		if(apply.educationalDetails != null && apply.educationalDetails != false ){
			showdetails = 'educational'
                        
			applyDetails.push(
				{ text:': Educational '+ '('+apply.attestedfor+')' }
				
				 
			)
		}if(apply.instructionalField != null && apply.instructionalField != false  ){
			showdetail = 'instructional'    
			applyDetail.push(
				{ text:': Instructional '}
				
				 
			)
		}
	})

	for(let data of usermarklist){
		let college = await functions.college_form(data.collegeId);
		collegeId  = collegeId ? collegeId : '' + ' ' + college.name
	}
	models.Institution_details.getInstituteData(userId).then(function(institution){
		institution.forEach(institution=>{
			if(institution.type == 'study'){
				
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text: institution.studyrefno }],
					[{ text: 'DeliveryType ',bold: true,}, { text: institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text: institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text: ':' + institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],

				) 
			}
			if(institution.type == 'employment'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text:  institution.emprefno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text:  institution.address ? institution.address : 'N.A' }],
					[{ text: 'email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],

					) 
			}
			if(institution.type == 'IQAS'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text: institution.iqasno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text: institution.address ? institution.address : 'N.A' }],
					[{ text: 'email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'CES'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text: institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text:  institution.cesno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text:  institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'ICAS'){
		
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text: institution.icasno }],
					[{ text: 'DeliveryType ',bold: true,}, { text: institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text: institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'visa'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text: institution.visarefno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text:  institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'MYIEE'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text: institution.myieeno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text:  institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'ICES'){
			
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text: institution.icesno }],
					[{ text: 'DeliveryType ',bold: true,}, { text: institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text: institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'NASBA'){
				
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text:  institution.nasbano }],
					[{ text: 'DeliveryType ',bold: true,}, { text: institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text:  institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'Educational Perspective'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text:  institution.eduperno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text:  institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'NCEES'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text: institution.nceesno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text:  institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text: institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'NARIC'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text:  institution.naricno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text: institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
	
			if(institution.type == 'National Committee on Accreditation'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text:  institution.ncano }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text: institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text: institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'Educational credential evaluators WES'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text: institution.wesno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text:  institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
			if(institution.type == 'HRD'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text: institution.hrdno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text:  institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text: institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				) 
			}
				
			if(institution.type == 'others'){
				purpose.push(
					[{ text: 'Type ' ,bold: true,}, { text:  institution.type }],
					[{ text: 'ReferenceNo ' ,bold: true,}, { text:  institution.otheraccno }],
					[{ text: 'DeliveryType ',bold: true,}, { text:  institution.deliveryType ? institution.deliveryType :  'N.A' }],
					[{ text: 'DeliveryAddress ',bold: true,}, { text: institution.address ? institution.address : 'N.A' }],
					[{ text: 'Email ',bold: true,}, { text:  institution.email ? institution.email :  'N.A' }],
					[{ text: '',border: [false, false, false, false], bold: true, colSpan: 2 },{}],
					[{ text: '',border: [false, false, false, false],	 bold: true, colSpan: 2 },{}],
				)
			}
			 
		})
		
	
	
	self_PDF.generateApplication_Form(userdetails,documents,payment,application_id,collegeId,file,docfile,applyDetails,applyDetail,showdetails,showdetail,applicant[0].created_at,doctrance,applicationFor,marksheet,purpose,function(err){
		if(err) {
			res.send({ status: 400,data :err})
		}else{
			res.send({
				status  : 200,
				path  : constants.FILE_LOCATION+'public/upload/documents/'+req.body.user_id + '/' + application_id + '_Application_Form.pdf',
				fileName : application_id + '_Application_Form.pdf',

			})
			
			// setTimeout(function(){
				
			// 	res.download(constants.FILE_LOCATION+'public/upload/documents/'+req.body.user_id + '/' + application_id + '_Attestation_Payment_Challan.pdf');
			// },3000);
		}
	})
})
});


// router.get('/getExtraDocuments',middlewares.getUserInfo,function(req,res){
// 	console.log("/getExtraDocuments");

// 	var extra_documents= [];
// 	var filePath;
// 	var filename;
// 		const s3 = new AWS.S3({
// 		endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 		accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 		secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 		s3BucketEndpoint: true,
// 	});
// 		s3.listObjectsV2({
// 		Bucket: "muattestation",
// 		}, function (err, data) {
// 		if (err) {
// 			res.json({status :500})
// 		} else {
// 			// Return the list ("Contents") as JSON
// 			extra_documents = data.Contents
// 			var data = [];
// 			// res.json({status :200,
// 			//     data : data.Contents})
// 		models.User_Transcript.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "extraDocument"
// 				}
// 			}).then(function(userTranscripts){
// 				if(userTranscripts.length > 0){
// 					userTranscripts.forEach(userTranscript=>{
// 						extra_documents.forEach(function (data){
// 							if(data.ETag.includes(userTranscript.file_name)){
// 									filename = JSON.parse(data.ETag);
// 									filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
// 									// console.log("filePath of filePath"+ filePath);
// 							}else if(userTranscript.file_name.includes('.')){
// 								filePath = (userTranscript) ? (constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ userTranscript.file_name) : null,
// 								filename = (userTranscript) ? constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + userTranscript.file_name : null
// 						 }
// 						})
// 						data.push({
// 							doc_id : (userTranscript) ? (userTranscript.id) : null,
// 							name : (userTranscript) ? (userTranscript.name) : null,
// 							filename : filename,
// 							filePath : filePath,
// 							lock_transcript : (userTranscript) ? (userTranscript.lock_transcript) : false,
// 							upload_step : (userTranscript) ? (userTranscript.upload_step) : 'default',
// 							app_id : (userTranscript) ? (userTranscript.app_id) : null,
// 						})
// 					})

// 					res.json({
// 						status : 200,
// 						data : data
// 					})
// 				}else{
// 					res.json({
// 						status : 200,
// 						data : null
// 					})
// 				}
// 			})
// }
// })
// });

router.get('/getExtraDocuments',middlewares.getUserInfo,async function(req,res){
    console.log("/getExtraDocuments");
    var data = [];
	var Bonafied = [];
	var Bonafied_master = [];
	var Bonafied_phd = [];
	var Bonafied_bachelors = [];
    var aadhar =[];
	let aadharCard = await functions.getAadhar('guattestation','Aadhar Card',req.User.id);
		
		if(aadharCard){
			aadhar.push({
				doc_id : (aadharCard) ? (aadharCard.id) : null,
				name : (aadharCard) ? (aadharCard.name) : null,
				type : (aadharCard) ? (aadharCard.file_name).split('.').pop() : null,
				filename : (aadharCard) ? (constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ aadharCard.file_name) : null,
				filePath : (aadharCard) ? constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + aadharCard.file_name : null,
				lock_transcript : (aadharCard) ? (aadharCard.lock_transcript) : false,
				upload_step : (aadharCard) ? (aadharCard.upload_step) : 'default',
				app_id : (aadharCard) ? (aadharCard.app_id) : null,
			})
		}else{
			let checkaadhar = await functions.getAadhar_fromall('Aadhar Card',req.User.id);
			if(checkaadhar){
				let insertAadharDetails = await functions.insertAadhar(checkaadhar,req.User.id);
				let aadharCard = await functions.getAadhar('guattestation','Aadhar Card',req.User.id);
		
		if(aadharCard){
			aadhar.push({
				doc_id : (aadharCard) ? (aadharCard.id) : null,
				name : (aadharCard) ? (aadharCard.name) : null,
				type : (aadharCard) ? (aadharCard.file_name).split('.').pop() : null,
				filename : (aadharCard) ? (constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ aadharCard.file_name) : null,
				filePath : (aadharCard) ? constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + aadharCard.file_name : null,
				lock_transcript : (aadharCard) ? (aadharCard.lock_transcript) : false,
				upload_step : (aadharCard) ? (aadharCard.upload_step) : 'default',
				app_id : (aadharCard) ? (aadharCard.app_id) : null,
			})
		}
			}


		}
		//  bonafiedcertificate = await functions.getBonafied('guattestation','Bonafied',req.User.id);
		//  if(bonafiedcertificate.applied_for_degree == null){
		// 	if(bonafiedcertificate){
		// 		Bonafied.push({
		// 			doc_id : (bonafiedcertificate) ? (bonafiedcertificate.id) : null,
		// 			name : (bonafiedcertificate) ? (bonafiedcertificate.name) : null,
		// 			type : (bonafiedcertificate) ? (bonafiedcertificate.file_name).split('.').pop() : null,
		// 			filename : (bonafiedcertificate) ? (constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ bonafiedcertificate.file_name) : null,
		// 			filePath : (bonafiedcertificate) ? constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + bonafiedcertificate.file_name : null,
		// 			lock_transcript : (bonafiedcertificate) ? (bonafiedcertificate.lock_transcript) : false,
		// 			upload_step : (bonafiedcertificate) ? (bonafiedcertificate.upload_step) : 'default',
		// 			app_id : (bonafiedcertificate) ? (bonafiedcertificate.app_id) : null,
		// 			applied_for_degree : (bonafiedcertificate) ? (bonafiedcertificate.applied_for_degree) : null,
		// 		})
		// 	}
		//  }
	
		bonafiedcertificate = await functions.getBonafied_degree('guattestation','Bonafied',req.User.id);
		bonafiedcertificate.forEach(function (bonafied){
			console.log(JSON.stringify(bonafied));
			if(bonafied.applied_for_degree == 'Masters'){
				Bonafied_master.push({
								doc_id : (bonafied.id) ? (bonafied.id) : null,
								name : (bonafied) ? (bonafied.name) : null,
								type : (bonafied) ? (bonafied.file_name).split('.').pop() : null,
								filename : (bonafied) ? (constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ bonafied.file_name) : null,
								filePath : (bonafied) ? constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + bonafied.file_name : null,
								lock_transcript : (bonafied) ? (bonafied.lock_transcript) : false,
								upload_step : (bonafied) ? (bonafied.upload_step) : 'default',
								app_id : (bonafied) ? (bonafied.app_id) : null,
								applied_for_degree : (bonafied) ? (bonafied.applied_for_degree) : null,
							})
			}else if(bonafied.applied_for_degree == 'Bachelors'){
				Bonafied_bachelors.push({
								doc_id : (bonafied.id) ? (bonafied.id) : null,
								name : (bonafied) ? (bonafied.name) : null,
								type : (bonafied) ? (bonafied.file_name).split('.').pop() : null,
								filename : (bonafied) ? (constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ bonafied.file_name) : null,
								filePath : (bonafied) ? constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + bonafied.file_name : null,
								lock_transcript : (bonafied) ? (bonafied.lock_transcript) : false,
								upload_step : (bonafied) ? (bonafied.upload_step) : 'default',
								app_id : (bonafied) ? (bonafied.app_id) : null,
								applied_for_degree : (bonafied) ? (bonafied.applied_for_degree) : null,
							})
			}else if(bonafied.applied_for_degree == 'Phd'){
				Bonafied_phd.push({
								doc_id : (bonafied.id) ? (bonafied.id) : null,
								name : (bonafied) ? (bonafied.name) : null,
								type : (bonafied) ? (bonafied.file_name).split('.').pop() : null,
								filename : (bonafied) ? (constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ bonafied.file_name) : null,
								filePath : (bonafied) ? constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + bonafied.file_name : null,
								lock_transcript : (bonafied) ? (bonafied.lock_transcript) : false,
								upload_step : (bonafied) ? (bonafied.upload_step) : 'default',
								app_id : (bonafied) ? (bonafied.app_id) : null,
								applied_for_degree : (bonafied) ? (bonafied.applied_for_degree) : null,
							})
			}else  if(bonafied.applied_for_degree == null){
				if(bonafied){
					Bonafied.push({
						doc_id : (bonafied) ? (bonafied.id) : null,
						name : (bonafied) ? (bonafied.name) : null,
						type : (bonafied) ? (bonafied.file_name).split('.').pop() : null,
						filename : (bonafied) ? (constant.BASE_URL+"/upload/documents/"+ req.User.id+"/"+ bonafied.file_name) : null,
						filePath : (bonafied) ? constant.FILE_LOCATION + "public/upload/documents/" + req.User.id + "/" + bonafied.file_name : null,
						lock_transcript : (bonafied) ? (bonafied.lock_transcript) : false,
						upload_step : (bonafied) ? (bonafied.upload_step) : 'default',
						app_id : (bonafied) ? (bonafied.app_id) : null,
						applied_for_degree : (bonafied) ? (bonafied.applied_for_degree) : null,
					})
				}
			 }
			console.log(JSON.stringify(Bonafied_bachelors));
		})
		if(aadhar || Bonafied){
			res.json({
				status : 200,
				data_aadhar : aadhar,
				data_bonafied : Bonafied,
				data_bonafied_Bachelors : Bonafied_bachelors,
				data_bonafied_Matsers : Bonafied_master,
				data_bonafied_Phd : Bonafied_phd
			})
		}else{
			res.json({
				status : 400
			})
		}
	

    
});

router.get('/getUserDetails',middlewares.getUserInfo,async function(req,res){
	console.log("getUserDetails");

	user = await functions.getuserdetail(req.User.id);

	if(user){
		console.log("useruser@@@@@@@"+ JSON.stringify(user));
		res.json({
			status : 200,
			data :  user.enrollmentNo,
			fullName :  user.marksheetName,
			email :  user.email,
			name :  user.name,

		})
	}else{
		res.json({
			status : 400
		})
	}

});
router.delete('/deleteDocument',middlewares.getUserInfo,async function(req,res){
	console.log('/deleteDocument' + req.query.type);
	var userId = req.User.id;
	var app_id ;
	var appliedfor_notpaid = await functions.FetchPreviousData_applied_notPaid(userId);
	if(appliedfor_notpaid.previous_data == null){
		app_id = appliedfor_notpaid.previous_data.app_id
	}
	else{
		app_id = null
	}
	if(req.query.type == 'gradToPer'){
		models.GradeToPercentageLetter.find({
			where:{
				id:req.query.id
			}
		}).then(function(letter){
			if(letter){
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
				letter.destroy().then(function(letterDelete){
					res.json({
						status:200,
						data:letterDelete
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}else if(req.query.type == 'extraDocument'){
		models.User_Transcript.find({
			where:{
				id:req.query.id,source : 'guattestation' 
			}
		}).then(async function(file){
			if(file){
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(async function(userTranscriptDelete){
					updatedapplied_details = await functions.applied_details(userId,app_id,'DifferentType');

					var desc = "Student has deleted the document named "+ file.name;
					var activity = "Deleted Document";
					  functions.activitylog(req.User.id, activity, desc, '');
					res.json({
						status:200,
						data:userTranscriptDelete
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}else if(req.query.type == 'marklist'){
		models.UserMarklist_Upload.find({
			where:{
				id:req.query.id,source : 'guattestation'
			}
		}).then(async function(file){
			if(file){
				var desc = "Student has deleted the document named "+ file.name;
				var activity = "Deleted Document";
				  functions.activitylog(req.User.id, activity, desc, '');
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
					updatedapplied_details = await functions.updataed_previous_appid(userId,appliedfor_notpaid.previous_data.app_id,'DifferentType');
				file.destroy().then(async function(userTranscriptDelete){
					res.json({
						status:200,
						data:userTranscriptDelete
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}else if(req.query.type == 'transcript'){
		models.User_Transcript.find({
			where:{
				id:req.query.id,
				type  :{
					[Op.like] : '%transcript%'
				},source : 'guattestation' 
			}
		}).then(async function(file){
			if(file){
				var desc = "Student has deleted the transcript document named "+ file.name;
				var activity = "Deleted Document";
				  functions.activitylog(req.User.id, activity, desc, '');
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(async function(userTranscriptDelete){
					updatedapplied_details = await functions.updataed_previous_appid(userId,appliedfor_notpaid.previous_data.app_id,'DifferentType');
					res.json({
						status:200,
						data:userTranscriptDelete
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}else if(req.query.type == 'curriculum'){

		models.User_Curriculum.find({
			where:{
				id:req.query.id
			}
		}).then(function(file){
			if(file){
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(function(userTranscriptDelete){
					res.json({
						status:200,
						data:userTranscriptDelete
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}else if(req.query.type =='compentencyLetter'){

		models.competency_letter.find({
			where:{
				id:req.query.id
			}
		}).then(function(file){
			if(file){
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(function(compentencyLetter){
					res.json({
						status:200,
						data:compentencyLetter
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}else if(req.query.type == 'NameChangeletter'){
		models.Letterfor_NameChange.find({
			where :{
				user_id : req.User.id
			}
		}).then(function (user){
			console.log("user",user)
			user.destroy().then(function (ussr){
				res.json({
					status : 200,
				})
			})
		})
	}else if(req.query.type == 'PaymentIsuue'){
		models.paymenterror_details.find({
			where :{
				user_id : req.User.id
			}
		}).then(function (paymentError){
            fs.unlink(constant.FILE_LOCATION + 'public/upload/Payment_Acknowledgement/' + paymentError.user_id + '/' + paymentError.file_name, function (err) {
                paymentError.destroy().then(function(pe){
                    res.json({
                        status : 200,
                        message: "File deleted successfully."
                    });
                });
            });
		})
	}else if(req.query.type == 'Aadhar Card'){
		models.Applicant_Marksheet.findOne({
			where:{
				id:req.query.id
			}
		}).then(function(file){
			if(file){
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(function(userTranscriptDelete){
					var desc = "Student has deleted the document named "+ file.name;
					var activity = "Deleted Document";
					functions.activitylog(req.User.id, activity, desc, '');
					res.json({
						status:200,
						data:userTranscriptDelete
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}else if(req.query.type == 'Bonafied'){
		models.Applicant_Marksheet.findOne({
			where:{
				id:req.query.id
			}
		}).then(function(file){
			if(file){
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(function(userTranscriptDelete){
					var desc = "Student has deleted the document named "+ file.name;
					var activity = "Deleted Document";
					functions.activitylog(req.User.id, activity, desc, '');
					res.json({
						status:200,
						data:userTranscriptDelete
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}else if(req.query.type == 'degree'){
		models.User_Transcript.find({
			where:{
				id:req.query.id,
				type  :{
					[Op.like] : '%degree%'
				},source : 'guattestation' 
			}
		}).then(async function(file){
			if(file){
				var desc = "Student has deleted the degree certificate document named "+ file.name;
				var activity = "Deleted Document";
				  functions.activitylog(req.User.id, activity, desc, '');
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(async function(userTranscriptDelete){
					updatedapplied_details = await functions.updataed_previous_appid(userId,appliedfor_notpaid.previous_data.app_id,'DifferentType');

					res.json({
						status:200,
						data:userTranscriptDelete
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}else if(req.query.type == 'Thesis'){
		models.User_Transcript.find({
			where:{
				id:req.query.id,
				type  :{
					[Op.like] : '%Thesis%'
				},source : 'guattestation' 
			}
		}).then(async function(file){
			if(file){
				var desc = "Student has deleted the Thesis document named "+ file.name;
				var activity = "Deleted Document";
				  functions.activitylog(req.User.id, activity, desc, '');
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/documents/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(async function(userTranscriptDelete){
					updatedapplied_details = await functions.updataed_previous_appid(userId,appliedfor_notpaid.previous_data.app_id,'DifferentType');

					res.json({
						status:200,
						data:userTranscriptDelete
					})
				});
				//});
			}else{
				res.json({
					status:400,
					message:'File Not Deleted!!..'
				});
			}
		})
	}
    });
router.get('/getApplied_for',middlewares.getUserInfo,(req,res)=>{
	console.log("getApplied_for ===>");
	models.Applied_For_Details.findAll({
		where : {
			user_id :  req.User.id,
			app_id : {
				[Op.eq] : null
			},
			source : 'guattestation'
		}
	}).then(function (applied_for){
			if( applied_for.length >0){
				console.log("dsbkcbj,zms");
				res.json({
						status :  200,
						applying_for :  applied_for[0].applying_for
				})
			}else{
				res.json({
					status :  400
			})
			}

	})
})

router.get('/getWes_FormData', middlewares.getUserInfo, function(req,res){
	console.log('/getWes_FormData');
	models.Wes_Form.findAll({
		where : {
			user_id :  req.User.id
		}
	}).then(function (wesformdata){
		if(wesformdata){
			res.json({
				status:200,
				data : wesformdata
			})
        }else{
            res.json({
                status:400,
                message:"data is not inserted"
            })
        }
	})

})
router.post('/saveWes_FormDetails', middlewares.getUserInfo,  function(req,res){
	console.log('/saveWes_FormDetails');
	var data = req.body.formdata;
	console.log("dataa" + JSON.stringify(data));

    models.Wes_Form.update({
		currentaddress: data.addressCtrl,
		state: data.stateCtrl,
		city: data.cityCtrl,
		postal_code: data.postalCtrl,
		dob:data.dobCtrl,
		institute_name: data.institutionnameCtrl,
		datefrom: data.fromdateCtrl,
		dateto: data.todateCtrl,
		degree: data.degreeCtrl,
		yearaward: data.yearawardCtrl,
		major: data.majorCtrl,
		sturolno: data.rollnoCtrl,
    }, {
		where: {
			user_id : req.User.id
		}
	}).then(function(data){
        if(data){
			res.json({
				status:200,
				message:"data is inserted",
				data :  data
			})
        }else{
            res.json({
                status:400,
                message:"data is not inserted"
            })
        }
    })
});
router.delete('/deleteInfo',middlewares.getUserInfo,function(req,res){
	console.log('/deleteInfo');

	if(req.query.type == 'Instructional'){
		models.InstructionalDetails.find({
			where : {
				userId : req.User.id,
				education : req.query.education
			}
		}).then(function (user){
			console.log("user",user)
			user.destroy().then(function (ussr){
				res.json({
					status : 200,
				})
			})
		})

	}else if(req.query.type == 'Affiliation'){
		models.Affiliation_Letter.find({
			where :{
				user_id : req.User.id
			}
		}).then(function (user){
			console.log("user",user)
			user.destroy().then(function (ussr){
				res.json({
					status : 200,
				})
			})
		})
	}else if(req.query.type == 'NameChangeletter'){
		models.Letterfor_NameChange.find({
			where :{
				user_id : req.User.id
			}
		}).then(function (user){
			console.log("user",user)
			user.destroy().then(function (ussr){
				res.json({
					status : 200,
				})
			})
		})
	}




});

// router.get('/getUploadedMarksheetDetails',middlewares.getUserInfo,function(req,res){
// 	var data ={
// 		diplomaHolder : false,
// 		current_year : false,
// 		appliedDiploma : false,
// 		appliedCurrent : false
// 	};
// 	var facultyData = [];
// 	models.userMarkList.find({
// 		where :{
// 			user_id : req.User.id
// 		}
// 	}).then(function(marklistDetails){
// 		if(marklistDetails.previous_data == true){
// 			models.Applied_For_Details.find({
// 				attributes: [
// 					sequelize.fn('MAX', sequelize.col('id'))
// 				],
// 				where :{
// 					user_id : req.User.id,
// 					app_id :{
// 						[Op.ne] : null
// 					}
// 				}
// 			}).then(function(appliedDetails){
// 				data.diplomaHolder = false;
// 				data.current_year = false;
// 				data.appliedDiploma = appliedDetails.diplomaHolder;
// 				data.appliedCurrent = appliedDetails.current_year;
// 				res.json({
// 					status : 200,
// 					data : data
// 				})
// 			})
// 		}else if(marklistDetails.previous_data == false){
// 			if(req.query.eduDetails == "Bachelors" ){

// 				models.userMarkList.findAll({
// 					where : {
// 						user_id : req.User.id,
// 						type : "Bachelors",
// 						app_id : null
// 					}
// 				}).then(function(userMarkList){
// 					if(userMarkList.length > 0){
// 						if(userMarkList[0].college_stream_type == true){
// 							userMarkList.forEach(marklist=>{
// 								if(facultyData.length > 0){
// 									var flag = false;
// 									facultyData.forEach(faculty=>{
// 										if(faculty.faculty == marklist.faculty){
// 											flag = true
// 										}
// 									})
// 									if(flag == false){
// 										facultyData.push({
// 											type : marklist.type,
// 											faculty : marklist.faculty,
// 											pattern : marklist.patteren
// 										})
// 									}
// 								}else{
// 									facultyData.push({
// 										type : marklist.type,
// 										faculty : marklist.faculty,
// 										pattern : marklist.patteren
// 									})
// 								}
// 							})

// 							facultyData.forEach(faculty=>{
// 								var name = "Bachelors_" + faculty.faculty + "_%"
// 								models.UserMarklist_Upload.findAll({
// 									where : {
// 										user_id : req.User.id,
// 										name : {
// 											[Op.like] : name
// 										},
// 										app_id : null
// 									}
// 								}).then(function(uploadedMarksheet){
// 									if(uploadedMarksheet.length > 0){
// 										var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";

// 										var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
// 										var firstYear = "Bachelors_" + faculty.faculty + "_First Year";
// 										var lastSem, secondLastSem, lastYear;
// 										models.Program_List.find({
// 											where : {
// 												degree : faculty.type,
// 												faculty : faculty.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											if(faculty.pattern == "Semester"){
// 												var lastsemster = parseInt(facultyMaster.year) * 2;
// 												var secondLast = parseInt(facultyMaster.year) * - 1;
// 												lastSem = "Bachelors_" + faculty.faculty + "_Semester " + lastsemster;
// 												secondLastSem = "Bachelors_" + faculty.faculty + "_Semester " + secondLast;
// 											}else if(faculty.pattern == "Annual"){
// 												var wordYear = converter.toWordsOrdinal(facultyMaster.year);
// 												lastYear = "Bachelors_" + faculty.faculty + "_" + wordYear + " Year";
// 											}
// 											var diplomaHolder = true;
// 											var current_year = true;
// 											uploadedMarksheet.forEach(marksheet=>{
// 												if(faculty.pattern == "Semester"){
// 													if(marksheet.name == sem1 || marksheet.name == sem2){
// 														diplomaHolder = false;
// 													}
// 													if(marksheet.name == lastSem || marksheet.name == secondLastSem){
// 														current_year = false;
// 													}
// 												}else if(faculty.pattern == 'Annual'){
// 													if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 														diplomaHolder = false;
// 													}
// 													if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
// 														current_year = false;
// 													}
// 												}
// 											})
// 											data.diplomaHolder = diplomaHolder;
// 											data.current_year = current_year;
// 										})
// 									}
// 								})
// 							})
// 							setTimeout(()=>{
// 								res.json({
// 									status : 200,
// 									data : data
// 								})
// 							},500);
// 						}else if(userMarkList[0].college_stream_type == false){
// 							var name = "Bachelors_" + userMarkList[0].faculty + "_%"
// 							models.UserMarklist_Upload.findAll({
// 								where : {
// 									user_id : req.User.id,
// 									name : {
// 										[Op.like] : name
// 									},
// 									app_id : null
// 								}
// 							}).then(function(uploadedMarksheet){
// 								if(uploadedMarksheet.length > 0){
// 									var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
// 									var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
// 									var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
// 									var lastSem, secondLastSem, lastYear;
// 									models.Program_List.find({
// 										where : {
// 											degree : userMarkList[0].type,
// 											faculty : userMarkList[0].faculty
// 										}
// 									}).then(function(facultyMaster){
// 										if(userMarkList[0].patteren == "Semester"){
// 											var lastsemster = parseInt(facultyMaster.year) * 2;
// 											var secondLast = parseInt(facultyMaster.year) * - 1;
// 											lastSem = "Bachelors_" + userMarkList[0].faculty + "_Semester " + lastsemster;
// 											secondLastSem = "Bachelors_" + userMarkList[0].faculty + "_Semester " + secondLast;

// 										}else if(userMarkList[0].patteren == "Annual"){
// 											var wordYear = converter.toWordsOrdinal(facultyMaster.year);
// 											lastYear = "Bachelors_" + userMarkList[0].faculty + "_" + wordYear + " Year";
// 										}

// 										var diplomaHolder = true;
// 										var current_year = true;
// 										uploadedMarksheet.forEach(marksheet=>{
// 											if(userMarkList[0].patteren == "Semester"){
// 												if(marksheet.name == sem1 || marksheet.name == sem2){
// 													diplomaHolder = false;
// 												}
// 												if(marksheet.name == lastSem || marksheet.name == secondLastSem){
// 													current_year = false;

// 												}
// 											}else if(userMarkList[0].patteren == 'Annual'){
// 												if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 													diplomaHolder = false;
// 												}
// 												if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
// 													current_year = false;
// 												}
// 											}
// 										})

// 										data.diplomaHolder = diplomaHolder;
// 										data.current_year = current_year;
// 										res.json({
// 											status : 200,
// 											data : data
// 										})
// 									})
// 								}else{
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 								}
// 							})
// 						}
// 					}else{
// 						res.json({
// 							status : 200,
// 							data : data
// 						})
// 					}
// 				})
// 			}else if(req.query.eduDetails == "Masters,Bachelors" ){
// 				models.userMarkList.findAll({
// 					where : {
// 						user_id : req.User.id,
// 						type : "Masters",
// 						app_id : null
// 					}
// 				}).then(function(userMarkListMaster){
// 					if(userMarkListMaster.length > 0){
// 						if(userMarkListMaster[0].college_stream_type == true){
// 							userMarkListMaster.forEach(marklist=>{
// 								if(facultyData.length > 0){
// 									var flag = false;
// 									facultyData.forEach(faculty=>{
// 										if(faculty.faculty == marklist.faculty){
// 											flag = true
// 										}
// 									})
// 									if(flag == false){
// 										facultyData.push({
// 											type : marklist.type,
// 											faculty : marklist.faculty,
// 											pattern : marklist.patteren
// 										})
// 									}
// 								}else{
// 									facultyData.push({
// 										type : marklist.type,
// 										faculty : marklist.faculty,
// 										pattern : marklist.patteren
// 									})
// 								}
// 							})
// 							facultyData.forEach(faculty=>{
// 								var name = "Masters_" + faculty.faculty + "_%"
// 								models.UserMarklist_Upload.findAll({
// 									where : {
// 										user_id : req.User.id,
// 										name : {
// 											[Op.like] : name
// 										},
// 										app_id : null
// 									}
// 								}).then(function(uploadedMarksheet){
// 									if(uploadedMarksheet.length > 0){

// 										var lastSem, secondLastSem, lastYear;
// 										models.Program_List.find({
// 											where : {
// 												degree : faculty.type,
// 												faculty : faculty.faculty
// 											}
// 										}).then(function(facultyMaster){

// 											if(faculty.pattern == "Semester"){
// 												var lastsemster = parseInt(facultyMaster.year) * 2;
// 												var secondLast = parseInt(facultyMaster.year) * - 1;
// 												lastSem = "Masters_" + faculty.faculty + "_Semester " + lastsemster;
// 												secondLastSem = "Masters_" + faculty.faculty + "_Semester " + secondLast;
// 											}else if(faculty.pattern == "Annual"){
// 												var wordYear = converter.toWordsOrdinal(facultyMaster.year);
// 												lastYear = "Masters_" + faculty.faculty + "_" + wordYear + " Year";
// 											}
// 											var current_year = true;
// 											uploadedMarksheet.forEach(marksheet=>{
// 												if(faculty.pattern == "Semester"){
// 													if(marksheet.name == lastSem || marksheet.name == secondLastSem || 	marksheet.name == lastSem){
// 														current_year = false;
// 													}
// 												}else if(faculty.pattern == 'Annual'){
// 													if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
// 														current_year = false;
// 													}
// 												}
// 											})
// 											data.current_year = current_year;
// 										})
// 									}
// 								})
// 							})

// 							models.userMarkList.findAll({
// 								where : {
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 									app_id : null
// 								}
// 							}).then(function(userMarkList){
// 								if(userMarkList.length > 0){
// 									if(userMarkList[0].college_stream_type == true){
// 										userMarkList.forEach(marklist=>{
// 											if(facultyData.length > 0){
// 												var flag = false;
// 												facultyData.forEach(faculty=>{
// 													if(faculty.faculty == marklist.faculty){
// 														flag = true
// 													}
// 												})
// 												if(flag == false){
// 													facultyData.push({
// 														type : marklist.type,
// 														faculty : marklist.faculty,
// 														pattern : marklist.patteren
// 													})
// 												}
// 											}else{
// 												facultyData.push({
// 													type : marklist.type,
// 													faculty : marklist.faculty,
// 													pattern : marklist.patteren
// 												})
// 											}
// 										})

// 										facultyData.forEach(faculty=>{
// 											var name = "Bachelors_" + faculty.faculty + "_%"
// 											models.UserMarklist_Upload.findAll({
// 												where : {
// 													user_id : req.User.id,
// 													name : {
// 														[Op.like] : name
// 													},
// 													app_id : null
// 												}
// 											}).then(function(uploadedMarksheet){
// 												if(uploadedMarksheet.length > 0){
// 													var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";
// 													var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
// 													var firstYear = "Bachelors_" + faculty.faculty + "_First Year";

// 													var diplomaHolder = true;
// 													uploadedMarksheet.forEach(marksheet=>{

// 														if(faculty.pattern == "Semester"){
// 															if(marksheet.name == sem1 || marksheet.name == sem2){
// 																diplomaHolder = false;
// 															}
// 														}else if(faculty.pattern == 'Annual'){
// 															if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 																diplomaHolder = false;
// 															}
// 														}
// 													})
// 													data.diplomaHolder = diplomaHolder;
// 												}
// 											})
// 										})
// 										setTimeout(()=>{
// 											res.json({
// 											status : 200,
// 											data : data
// 											})
// 										},500)
// 									}else if(userMarkList[0].college_stream_type == false){
// 										var name = "Bachelors_" + userMarkList[0].faculty + "_%"
// 										models.UserMarklist_Upload.findAll({
// 											where : {
// 												user_id : req.User.id,
// 												name : {
// 													[Op.like] : name
// 												},
// 												app_id : null
// 											}
// 										}).then(function(uploadedMarksheet){
// 											if(uploadedMarksheet.length > 0){
// 												var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
// 												var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
// 												var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
// 												var diplomaHolder = true;
// 												uploadedMarksheet.forEach(marksheet=>{
// 													if(userMarkList[0].patteren == "Semester"){
// 														if(marksheet.name == sem1 || marksheet.name == sem2){
// 															diplomaHolder = false;
// 														}
// 													}else if(userMarkList[0].patteren == 'Annual'){
// 														if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 															diplomaHolder = false;
// 														}
// 													}
// 												})
// 												data.diplomaHolder = diplomaHolder;
// 												res.json({
// 													status : 200,
// 													data : data
// 												})

// 											}else{
// 												res.json({
// 													status : 200,
// 													data : data
// 												})
// 											}
// 										})
// 									}
// 								}else{
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 								}
// 							})

// 						}else if(userMarkListMaster[0].college_stream_type == false){
// 							var name = "Masters_" + userMarkListMaster[0].faculty + "_%"
// 							models.UserMarklist_Upload.findAll({
// 								where : {
// 									user_id : req.User.id,
// 									name : {
// 										[Op.like] : name
// 									},
// 									app_id : null
// 								}
// 							}).then(function(uploadedMarksheet){
// 								if(uploadedMarksheet.length > 0){
// 									var lastSem, secondLastSem, lastYear;
// 									models.Program_List.find({
// 										where : {
// 											degree : userMarkListMaster[0].type,
// 											faculty : userMarkListMaster[0].faculty
// 										}
// 									}).then(function(facultyMaster){

// 										if(userMarkListMaster[0].patteren == "Semester"){
// 											var lastsemster = parseInt(facultyMaster.year) * 2;
// 											var secondLast = parseInt(facultyMaster.year) * - 1;
// 											lastSem = "Masters_" + userMarkListMaster[0].faculty + "_Semester " + lastsemster;
// 											secondLastSem = "Masters_" + userMarkListMaster[0].faculty + "_Semester " + secondLast;
// 										}else if(userMarkListMaster[0].patteren == "Annual"){
// 											var wordYear = converter.toWordsOrdinal(facultyMaster.year);
// 											lastYear = "Masters_" + userMarkListMaster[0].faculty + "_" + wordYear + " Year";
// 										}
// 										var current_year = true;
// 										uploadedMarksheet.forEach(marksheet=>{
// 											if(userMarkListMaster[0].patteren == "Semester"){
// 												if((marksheet.name == lastSem || marksheet.name == secondLastSem) || marksheet.name == lastSem){
// 													current_year = false;
// 												}
// 											}else if(userMarkListMaster[0].patteren == 'Annual'){
// 												if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
// 													current_year = false;
// 												}
// 											}
// 										})
// 										data.current_year = current_year
// 										models.userMarkList.findAll({
// 											where : {
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 												app_id : null
// 											}
// 										}).then(function(userMarkList){
// 											if(userMarkList.length > 0){
// 												if(userMarkList[0].college_stream_type == true){
// 													userMarkList.forEach(marklist=>{
// 														if(facultyData.length > 0){
// 															var flag = false;
// 															facultyData.forEach(faculty=>{
// 																if(faculty.faculty == marklist.faculty){
// 																	flag = true
// 																}
// 															})
// 															if(flag == false){
// 																facultyData.push({
// 																	type : marklist.type,
// 																	faculty : marklist.faculty,
// 																	pattern : marklist.patteren
// 																})
// 															}
// 														}else{
// 															facultyData.push({
// 																type : marklist.type,
// 																faculty : marklist.faculty,
// 																pattern : marklist.patteren
// 															})
// 														}
// 													})

// 													facultyData.forEach(faculty=>{
// 														var name = "Bachelors_" + faculty.faculty + "_%"
// 														models.UserMarklist_Upload.findAll({
// 															where : {
// 																user_id : req.User.id,
// 																name : {
// 																	[Op.like] : name
// 																},
// 																app_id : null
// 															}
// 														}).then(function(uploadedMarksheet){
// 															if(uploadedMarksheet.length > 0){
// 																var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";
// 																var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
// 																var firstYear = "Bachelors_" + faculty.faculty + "_First Year";
// 																var diplomaHolder = true;
// 																uploadedMarksheet.forEach(marksheet=>{
// 																	if(faculty.pattern == "Semester"){
// 																		if(marksheet.name == sem1 || marksheet.name == sem2){
// 																			diplomaHolder = false;
// 																		}
// 																	}else if(faculty.pattern == 'Annual'){
// 																		if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 																			diplomaHolder = true;
// 																		}
// 																	}
// 																})
// 																data.diplomaHolder = diplomaHolder
// 															}
// 														})
// 													})

// 													res.json({
// 														status : 200,
// 														data : data
// 													})
// 												}else if(userMarkList[0].college_stream_type == false){
// 													var name = "Bachelors_" + userMarkList[0].faculty + "_%"
// 													models.UserMarklist_Upload.findAll({
// 														where : {
// 															user_id : req.User.id,
// 															name : {
// 																[Op.like] : name
// 															},
// 															app_id : null
// 														}
// 													}).then(function(uploadedMarksheet){
// 														if(uploadedMarksheet.length > 0){
// 															var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
// 															var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
// 															var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
// 															var diplomaHolder = true;
// 															uploadedMarksheet.forEach(marksheet=>{
// 																if(userMarkList[0].patteren == "Semester"){
// 																	if(marksheet.name == sem1 || marksheet.name == sem2){
// 																		diplomaHolder = false;
// 																	}
// 																}else if(userMarkList[0].patteren == 'Annual'){
// 																	if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 																		diplomaHolder = false;
// 																	}
// 																}
// 															})
// 															data.diplomaHolder = diplomaHolder;
// 															res.json({
// 																status : 200,
// 																data : data
// 															})

// 														}else{
// 															res.json({
// 																status : 200,
// 																data : data
// 															})
// 														}
// 													})
// 												}
// 											}else{
// 												res.json({
// 													status : 200,
// 													data : data
// 												})
// 											}
// 										})
// 									})
// 								}else{
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 								}
// 							})
// 						}
// 					}else{
// 						res.json({
// 							status : 200,
// 							data : data
// 						})
// 					}
// 				})
// 			}
// 		}
// 	})


// });


router.get('/getUploadedMarksheetDetails',middlewares.getUserInfo,function(req,res){
	var data ={
		diplomaHolder : false,
		current_year : false,
		appliedDiploma : false,
		appliedCurrent : false
	};
	var facultyData = [];
	models.userMarkList.find({
		where :{
			user_id : req.User.id,source : 'guattestation'
		}
	}).then(function(marklistDetails){
		if(marklistDetails.previous_data == true){
			models.Applied_For_Details.find({
				attributes: [
					sequelize.fn('MAX', sequelize.col('id'))
				],
				where :{
					user_id : req.User.id,
					app_id :{
						[Op.ne] : null
					},
					source : 'guattestation'
				}
			}).then(function(appliedDetails){
				data.diplomaHolder = false;
				data.current_year = false;
				data.appliedDiploma = appliedDetails.diplomaHolder;
				data.appliedCurrent = appliedDetails.current_year;
				res.json({
					status : 200,
					data : data
				})
			})
		}else if(marklistDetails.previous_data == false){
			if(req.query.eduDetails == "Bachelors" ){

				models.userMarkList.findAll({
					where : {
						user_id : req.User.id,
						type : "Bachelors",
						app_id : null,source : 'guattestation'
					}
				}).then(function(userMarkList){
					if(userMarkList.length > 0){
						console.log('userMarkList[0]' + JSON.stringify(userMarkList[0]));
						if(userMarkList[0].college_stream_type == true){
							userMarkList.forEach(marklist=>{
								if(facultyData.length > 0){
									var flag = false;
									facultyData.forEach(faculty=>{
										if(faculty.faculty == marklist.course_faculty){
											flag = true
										}
									})
									if(flag == false){
										facultyData.push({
											type : marklist.type,
											faculty : marklist.faculty,
											course_name :  marklist.faculty,
											pattern : marklist.patteren
										})
									}
								}else{
									facultyData.push({
										type : marklist.type,
										faculty : marklist.faculty,
										course_name :  marklist.faculty,
										pattern : marklist.patteren
									})
								}
							})

							facultyData.forEach(faculty=>{
								var name = "Bachelors_" + faculty.faculty + "_%"
								models.UserMarklist_Upload.findAll({
									where : {
										user_id : req.User.id,
										name : {
											[Op.like] : name
										},
										app_id : null,source : 'guattestation'
									}
								}).then(function(uploadedMarksheet){
									if(uploadedMarksheet.length > 0){
										var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";

										var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
										var firstYear = "Bachelors_" + faculty.faculty + "_First Year";
										var lastSem, secondLastSem, lastYear;
										models.Program_List.find({
											where : {
												// degree : faculty.type,
												course_name : faculty.faculty
											}
										}).then(function(facultyMaster){
											if(faculty.pattern == "Semester"){
												var lastsemster = parseInt(facultyMaster.duration) * 2;
												var secondLast = parseInt(facultyMaster.duration) * - 1;
												lastSem = "Bachelors_" + faculty.faculty + "_Semester " + lastsemster;
												secondLastSem = "Bachelors_" + faculty.faculty + "_Semester " + secondLast;
											}else if(faculty.pattern == "Annual"){
												var wordYear = converter.toWordsOrdinal(facultyMaster.duration);
												lastYear = "Bachelors_" + faculty.faculty + "_" + wordYear + " Year";
											}
											var diplomaHolder = true;
											var current_year = true;
											uploadedMarksheet.forEach(marksheet=>{
												if(faculty.pattern == "Semester"){
													if(marksheet.name == sem1 || marksheet.name == sem2){
														diplomaHolder = false;
													}
													if(marksheet.name == lastSem || marksheet.name == secondLastSem){
														current_year = false;
													}
												}else if(faculty.pattern == 'Annual'){
													if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
														diplomaHolder = false;
													}
													if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
														current_year = false;
													}
												}
											})
											data.diplomaHolder = diplomaHolder;
											data.current_year = current_year;
										})
									}
								})
							})
							setTimeout(()=>{
								res.json({
									status : 200,
									data : data
								})
							},500);
						}else if(userMarkList[0].college_stream_type == false){
							var name = "Bachelors_" + userMarkList[0].course_faculty + "_%"
							models.UserMarklist_Upload.findAll({
								where : {
									user_id : req.User.id,
									name : {
										[Op.like] : name
									},
									app_id : null,source : 'guattestation'
								}
							}).then(function(uploadedMarksheet){
								if(uploadedMarksheet.length > 0){
									var sem1 = "Bachelors_" + userMarkList[0].course_faculty + "_Semester 1";
									var sem2 = "Bachelors_" + userMarkList[0].course_faculty + "_Semester 2";
									var firstYear = "Bachelors_" + userMarkList[0].course_faculty + "_First Year";
									var lastSem, secondLastSem, lastYear;
									models.Program_List.find({
										where : {
											// degree : userMarkList[0].type,
											course_name : userMarkList[0].faculty
										}
									}).then(function(facultyMaster){
										if(userMarkList[0].patteren == "Semester"){
											var lastsemster = parseInt(facultyMaster.duration) * 2;
											var secondLast = parseInt(facultyMaster.duration) * - 1;
											lastSem = "Bachelors_" + userMarkList[0].course_faculty + "_Semester " + lastsemster;
											secondLastSem = "Bachelors_" + userMarkList[0].course_faculty + "_Semester " + secondLast;

										}else if(userMarkList[0].patteren == "Annual"){
											var wordYear = converter.toWordsOrdinal(facultyMaster.duration);
											lastYear = "Bachelors_" + userMarkList[0].course_faculty + "_" + wordYear + " Year";
										}

										var diplomaHolder = true;
										var current_year = true;
										uploadedMarksheet.forEach(marksheet=>{
											if(userMarkList[0].patteren == "Semester"){
												if(marksheet.name == sem1 || marksheet.name == sem2){
													diplomaHolder = false;
												}
												if(marksheet.name == lastSem || marksheet.name == secondLastSem){
													current_year = false;

												}
											}else if(userMarkList[0].patteren == 'Annual'){
												if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
													diplomaHolder = false;
												}
												if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
													current_year = false;
												}
											}
										})

										data.diplomaHolder = diplomaHolder;
										data.current_year = current_year;
										res.json({
											status : 200,
											data : data
										})
									})
								}else{
									res.json({
										status : 200,
										data : data
									})
								}
							})
						}
					}else{
						res.json({
							status : 200,
							data : data
						})
					}
				})
			}else if(req.query.eduDetails == "Masters,Bachelors" ){
				models.userMarkList.findAll({
					where : {
						user_id : req.User.id,
						type : "Masters",
						app_id : null,source : 'guattestation'
					}
				}).then(function(userMarkListMaster){
					if(userMarkListMaster.length > 0){
						if(userMarkListMaster[0].college_stream_type == true){
							userMarkListMaster.forEach(marklist=>{
								if(facultyData.length > 0){
									var flag = false;
									facultyData.forEach(faculty=>{
										if(faculty.faculty == marklist.course_faculty){
											flag = true
										}
									})
									if(flag == false){
										facultyData.push({
											type : marklist.type,
											faculty : marklist.course_faculty,
											course_name :  marklist.faculty,
											pattern : marklist.patteren
										})
									}
								}else{
									facultyData.push({
										type : marklist.type,
										faculty : marklist.course_faculty,
										course_name :  marklist.faculty,
										pattern : marklist.patteren
									})
								}
							})
							facultyData.forEach(faculty=>{
								var name = "Masters_" + faculty.faculty + "_%"
								models.UserMarklist_Upload.findAll({
									where : {
										user_id : req.User.id,
										name : {
											[Op.like] : name
										},
										app_id : null,source : 'guattestation'
									}
								}).then(function(uploadedMarksheet){
									if(uploadedMarksheet.length > 0){

										var lastSem, secondLastSem, lastYear;
										models.Program_List.find({
											where : {
												// degree : faculty.type,
												course_name : faculty.course_name
											}
										}).then(function(facultyMaster){

											if(faculty.pattern == "Semester"){
												var lastsemster = parseInt(facultyMaster.duration) * 2;
												var secondLast = parseInt(facultyMaster.duration) * - 1;
												lastSem = "Masters_" + faculty.faculty + "_Semester " + lastsemster;
												secondLastSem = "Masters_" + faculty.faculty + "_Semester " + secondLast;
											}else if(faculty.pattern == "Annual"){
												var wordYear = converter.toWordsOrdinal(facultyMaster.duration);
												lastYear = "Masters_" + faculty.faculty + "_" + wordYear + " Year";
											}
											var current_year = true;
											uploadedMarksheet.forEach(marksheet=>{
												if(faculty.pattern == "Semester"){
													if(marksheet.name == lastSem || marksheet.name == secondLastSem || 	marksheet.name == lastSem){
														current_year = false;
													}
												}else if(faculty.pattern == 'Annual'){
													if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
														current_year = false;
													}
												}
											})
											data.current_year = current_year;
										})
									}
								})
							})

							models.userMarkList.findAll({
								where : {
									user_id : req.User.id,
									type : "Bachelors",
									app_id : null,source : 'guattestation'
								}
							}).then(function(userMarkList){
								if(userMarkList.length > 0){
									if(userMarkList[0].college_stream_type == true){
										userMarkList.forEach(marklist=>{
											if(facultyData.length > 0){
												var flag = false;
												facultyData.forEach(faculty=>{
													if(faculty.faculty == marklist.course_faculty){
														flag = true
													}
												})
												if(flag == false){
													facultyData.push({
														type : marklist.type,
														faculty : marklist.faculty,
														course_name :  marklist.faculty,
														pattern : marklist.patteren
													})
												}
											}else{
												facultyData.push({
													type : marklist.type,
													faculty : marklist.faculty,
													course_name :  marklist.faculty,
													pattern : marklist.patteren
												})
											}
										})

										facultyData.forEach(faculty=>{
											var name = "Bachelors_" + faculty.faculty + "_%"
											models.UserMarklist_Upload.findAll({
												where : {
													user_id : req.User.id,
													name : {
														[Op.like] : name
													},
													app_id : null,source : 'guattestation'
												}
											}).then(function(uploadedMarksheet){
												if(uploadedMarksheet.length > 0){
													var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";
													var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
													var firstYear = "Bachelors_" + faculty.faculty + "_First Year";

													var diplomaHolder = true;
													uploadedMarksheet.forEach(marksheet=>{

														if(faculty.pattern == "Semester"){
															if(marksheet.name == sem1 || marksheet.name == sem2){
																diplomaHolder = false;
															}
														}else if(faculty.pattern == 'Annual'){
															if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
																diplomaHolder = false;
															}
														}
													})
													data.diplomaHolder = diplomaHolder;
												}
											})
										})
										setTimeout(()=>{
											res.json({
											status : 200,
											data : data
											})
										},500)
									}else if(userMarkList[0].college_stream_type == false){
										var name = "Bachelors_" + userMarkList[0].faculty + "_%"
										models.UserMarklist_Upload.findAll({
											where : {
												user_id : req.User.id,
												name : {
													[Op.like] : name
												},
												app_id : null,source : 'guattestation'
											}
										}).then(function(uploadedMarksheet){
											if(uploadedMarksheet.length > 0){
												var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
												var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
												var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
												var diplomaHolder = true;
												uploadedMarksheet.forEach(marksheet=>{
													if(userMarkList[0].patteren == "Semester"){
														if(marksheet.name == sem1 || marksheet.name == sem2){
															diplomaHolder = false;
														}
													}else if(userMarkList[0].patteren == 'Annual'){
														if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
															diplomaHolder = false;
														}
													}
												})
												data.diplomaHolder = diplomaHolder;
												res.json({
													status : 200,
													data : data
												})

											}else{
												res.json({
													status : 200,
													data : data
												})
											}
										})
									}
								}else{
									res.json({
										status : 200,
										data : data
									})
								}
							})

						}else if(userMarkListMaster[0].college_stream_type == false){
							var name = "Masters_" + userMarkListMaster[0].course_faculty + "_%"
							models.UserMarklist_Upload.findAll({
								where : {
									user_id : req.User.id,
									name : {
										[Op.like] : name
									},
									app_id : null,source : 'guattestation'
								}
							}).then(function(uploadedMarksheet){
								if(uploadedMarksheet.length > 0){
									var lastSem, secondLastSem, lastYear;
									models.Program_List.find({
										where : {
											// degree : userMarkListMaster[0].type,
											course_name : userMarkListMaster[0].faculty
										}
									}).then(function(facultyMaster){

										if(userMarkListMaster[0].patteren == "Semester"){
											var lastsemster = parseInt(facultyMaster.duration) * 2;
											var secondLast = parseInt(facultyMaster.duration) * - 1;
											lastSem = "Masters_" + userMarkListMaster[0].course_faculty + "_Semester " + lastsemster;
											secondLastSem = "Masters_" + userMarkListMaster[0].course_faculty + "_Semester " + secondLast;
										}else if(userMarkListMaster[0].patteren == "Annual"){
											var wordYear = converter.toWordsOrdinal(facultyMaster.duration);
											lastYear = "Masters_" + userMarkListMaster[0].course_faculty + "_" + wordYear + " Year";
										}
										var current_year = true;
										uploadedMarksheet.forEach(marksheet=>{
											if(userMarkListMaster[0].patteren == "Semester"){
												if((marksheet.name == lastSem || marksheet.name == secondLastSem) || marksheet.name == lastSem){
													current_year = false;
												}
											}else if(userMarkListMaster[0].patteren == 'Annual'){
												if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
													current_year = false;
												}
											}
										})
										data.current_year = current_year
										models.userMarkList.findAll({
											where : {
												user_id : req.User.id,
												type : "Bachelors",
												app_id : null,source : 'guattestation'
											}
										}).then(function(userMarkList){
											if(userMarkList.length > 0){
												if(userMarkList[0].college_stream_type == true){
													userMarkList.forEach(marklist=>{
														if(facultyData.length > 0){
															var flag = false;
															facultyData.forEach(faculty=>{
																if(faculty.faculty == marklist.course_faculty){
																	flag = true
																}
															})
															if(flag == false){
																facultyData.push({
																	type : marklist.type,
																	faculty : marklist.course_faculty,
																	course_name :  marklist.faculty,
																	pattern : marklist.patteren
																})
															}
														}else{
															facultyData.push({
																type : marklist.type,
																faculty : marklist.course_faculty,
																course_name :  marklist.faculty,
																pattern : marklist.patteren
															})
														}
													})

													facultyData.forEach(faculty=>{
														var name = "Bachelors_" + faculty.faculty + "_%"
														models.UserMarklist_Upload.findAll({
															where : {
																user_id : req.User.id,
																name : {
																	[Op.like] : name
																},
																app_id : null,source : 'guattestation'
															}
														}).then(function(uploadedMarksheet){
															if(uploadedMarksheet.length > 0){
																var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";
																var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
																var firstYear = "Bachelors_" + faculty.faculty + "_First Year";
																var diplomaHolder = true;
																uploadedMarksheet.forEach(marksheet=>{
																	if(faculty.pattern == "Semester"){
																		if(marksheet.name == sem1 || marksheet.name == sem2){
																			diplomaHolder = false;
																		}
																	}else if(faculty.pattern == 'Annual'){
																		if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
																			diplomaHolder = true;
																		}
																	}
																})
																data.diplomaHolder = diplomaHolder
															}
														})
													})

													res.json({
														status : 200,
														data : data
													})
												}else if(userMarkList[0].college_stream_type == false){
													var name = "Bachelors_" + userMarkList[0].course_faculty + "_%"
													models.UserMarklist_Upload.findAll({
														where : {
															user_id : req.User.id,
															name : {
																[Op.like] : name
															},
															app_id : null,source : 'guattestation'
														}
													}).then(function(uploadedMarksheet){
														if(uploadedMarksheet.length > 0){
															var sem1 = "Bachelors_" + userMarkList[0].course_faculty + "_Semester 1";
															var sem2 = "Bachelors_" + userMarkList[0].course_faculty + "_Semester 2";
															var firstYear = "Bachelors_" + userMarkList[0].course_faculty + "_First Year";
															var diplomaHolder = true;
															uploadedMarksheet.forEach(marksheet=>{
																if(userMarkList[0].patteren == "Semester"){
																	if(marksheet.name == sem1 || marksheet.name == sem2){
																		diplomaHolder = false;
																	}
																}else if(userMarkList[0].patteren == 'Annual'){
																	if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
																		diplomaHolder = false;
																	}
																}
															})
															data.diplomaHolder = diplomaHolder;
															res.json({
																status : 200,
																data : data
															})

														}else{
															res.json({
																status : 200,
																data : data
															})
														}
													})
												}
											}else{
												res.json({
													status : 200,
													data : data
												})
											}
										})
									})
								}else{
									res.json({
										status : 200,
										data : data
									})
								}
							})
						}
					}else{
						res.json({
							status : 200,
							data : data
						})
					}
				})
			}else if(req.query.eduDetails == "Masters" ){

				models.userMarkList.findAll({
					where : {
						user_id : req.User.id,
						type : "Masters",
						app_id : null,source : 'guattestation'
					}
				}).then(function(userMarkList){
					if(userMarkList.length > 0){
						if(userMarkList[0].college_stream_type == true){
							userMarkList.forEach(marklist=>{
								if(facultyData.length > 0){
									var flag = false;
									facultyData.forEach(faculty=>{
										if(faculty.faculty == marklist.course_name){
											flag = true
										}
									})
									if(flag == false){
										facultyData.push({
											type : marklist.type,
											faculty : marklist.course_faculty,
											course_name :  marklist.faculty,
											pattern : marklist.patteren
										})
									}
								}else{
									facultyData.push({
										type : marklist.type,
										faculty : marklist.course_faculty,
										course_name :  marklist.faculty,
										pattern : marklist.patteren
									})
								}
							})

							facultyData.forEach(faculty=>{
								var name = "Masters_" + faculty.faculty + "_%"
								models.UserMarklist_Upload.findAll({
									where : {
										user_id : req.User.id,
										name : {
											[Op.like] : name
										},
										app_id : null,source : 'guattestation'
									}
								}).then(function(uploadedMarksheet){
									if(uploadedMarksheet.length > 0){
										var sem1 = "Masters_" + faculty.faculty + "_Semester 1";

										var sem2 = "Masters_" + faculty.faculty + "_Semester 2";
										var firstYear = "Masters_" + faculty.faculty + "_First Year";
										var lastSem, secondLastSem, lastYear;
										models.Program_List.find({
											where : {
												// degree : faculty.type,
												course_name : faculty.course_name
											}
										}).then(function(facultyMaster){
											if(faculty.pattern == "Semester"){
												var lastsemster = parseInt(facultyMaster.duration) * 2;
												var secondLast = parseInt(facultyMaster.duration) * - 1;
												lastSem = "Masters_" + faculty.faculty + "_Semester " + lastsemster;
												secondLastSem = "Masters_" + faculty.faculty + "_Semester " + secondLast;
											}else if(faculty.pattern == "Annual"){
												var wordYear = converter.toWordsOrdinal(facultyMaster.duration);
												lastYear = "Masters_" + faculty.faculty + "_" + wordYear + " Year";
											}
											var diplomaHolder = true;
											var current_year = true;
											uploadedMarksheet.forEach(marksheet=>{
												if(faculty.pattern == "Semester"){
													if(marksheet.name == sem1 || marksheet.name == sem2){
														diplomaHolder = false;
													}
													if(marksheet.name == lastSem || marksheet.name == secondLastSem){
														current_year = false;
													}
												}else if(faculty.pattern == 'Annual'){
													if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
														diplomaHolder = false;
													}
													if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
														current_year = false;
													}
												}
											})
											data.diplomaHolder = diplomaHolder;
											data.current_year = current_year;
										})
									}
								})
							})
							setTimeout(()=>{
								res.json({
									status : 200,
									data : data
								})
							},500);
						}else if(userMarkList[0].college_stream_type == false){
							var name = "Masters_" + userMarkList[0].course_faculty + "_%"
							models.UserMarklist_Upload.findAll({
								where : {
									user_id : req.User.id,
									name : {
										[Op.like] : name
									},
									app_id : null,source : 'guattestation'
								}
							}).then(function(uploadedMarksheet){
								if(uploadedMarksheet.length > 0){
									var sem1 = "Masters_" + userMarkList[0].course_faculty + "_Semester 1";
									var sem2 = "Masters_" + userMarkList[0].course_faculty + "_Semester 2";
									var firstYear = "Masters_" + userMarkList[0].course_faculty + "_First Year";
									var lastSem, secondLastSem, lastYear;
									models.Program_List.find({
										where : {
											// degree : userMarkList[0].type,
											course_name : userMarkList[0].faculty
										}
									}).then(function(facultyMaster){
										if(userMarkList[0].patteren == "Semester"){
											var lastsemster = parseInt(facultyMaster.duration) * 2;
											var secondLast = parseInt(facultyMaster.duration) * - 1;
											lastSem = "Masters_" + userMarkList[0].course_faculty + "_Semester " + lastsemster;
											secondLastSem = "Masters_" + userMarkList[0].course_faculty + "_Semester " + secondLast;

										}else if(userMarkList[0].patteren == "Annual"){
											var wordYear = converter.toWordsOrdinal(facultyMaster.duration);
											lastYear = "Masters_" + userMarkList[0].course_faculty + "_" + wordYear + " Year";
										}

										var diplomaHolder = true;
										var current_year = true;
										uploadedMarksheet.forEach(marksheet=>{
											if(userMarkList[0].patteren == "Semester"){
												if(marksheet.name == sem1 || marksheet.name == sem2){
													diplomaHolder = false;
												}
												if(marksheet.name == lastSem || marksheet.name == secondLastSem){
													current_year = false;

												}
											}else if(userMarkList[0].patteren == 'Annual'){
												if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
													diplomaHolder = false;
												}
												if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
													current_year = false;
												}
											}
										})

										data.diplomaHolder = diplomaHolder;
										data.current_year = current_year;
										res.json({
											status : 200,
											data : data
										})
									})
								}else{
									res.json({
										status : 200,
										data : data
									})
								}
							})
						}
					}else{
						res.json({
							status : 200,
							data : data
						})
					}
				})
			}
		}
	})


});
router.post('/setDiplomaOrCurrent',middlewares.getUserInfo,function(req,res){
	console.log('/setDiplomaOrCurrent');
	models.Applied_For_Details.find({
		where :{
			user_id : req.User.id,
			app_id : null,
			source : 'guattestation'
		}
	}).then(function(appliedDetails){
		if(req.body.type == "diplomaHolder"){
			appliedDetails.update({
				diplomaHolder : req.body.value
			}).then(function(updatedDetails){
				res.json({
					status : 200
				})
			})
		}

		if(req.body.type == "current_year"){
			appliedDetails.update({
				current_year : req.body.value
			}).then(function(updatedDetails){
				res.json({
					status : 200
				})
			})
		}

		if(req.body.type == "diplomaHolder_and_current_year"){
			appliedDetails.update({
				diplomaHolder : req.body.value,
				current_year : req.body.value
			}).then(function(updatedDetails){
				res.json({
					status :200
				})
			})
		}
	})
});

router.post('/setAddresInstitute',middlewares.getUserInfo,function(req,res){
	console.log('/setAddresInstitute'+  req.data);
	console.log('/setAddresInstitute'+  req.query);
	models.Institution_details.update({
				inst_address  : req.body.address,
				deliveryType :  req.body.deliveryform
			}, {
					where: {
						user_id: req.User.id,
						app_id :{
							[Op.eq] : null
						},source : 'guattestation'
				}
			}).then(function (data) {
						if(data){
							res.json({
								status :  200,
								data : data
							})
						}
			})

});

router.post('/editinstructionalUserDetails',middlewares.getUserInfo,async (req,res)=>{
	var editFlag = req.query.editFlag;
	var app_id  = req.query.app_id;
	if(editFlag ==  'true'){
		models.InstructionalDetails.update(
			{
				studentName:req.body.nameCtrl,
					courseName:req.body.courseCtrl,
					collegeName:req.body.collegeCtrl,
					specialization:req.body.specializationCtrl,
					duration:req.body.durationCtrl,
					yearofpassing:req.body.passingCtrl,
					yearofenrollment:req.body.enrollCtrl,
					division:req.body.divisionCtrl,
					academicYear : req.body.acadYearCtrl,
					lock_transcript : false,
					instruction_medium: req.body.mediumCtrl
			},
			{where:
				{
					userId : req.User.id,
				education :req.body.education
				
				}
			}).then((err,updated)=>{
				if(err){
					console.error(err);
				}
				models.Application.update(
					{status  : 'changed'},
					{where:
						{id  : app_id}
					}).then((err,updated)=>{
						if(err){
							console.error(err);
						}
						res.status(200).json({
							message:'data saved successfully!!!'
						})
					})
			})
		
	}else{
		models.InstructionalDetails.find({
			where:{
				userId : req.User.id,
				education :req.body.education
	
			}
		}).then(user =>{
				user.update({
					studentName:req.body.nameCtrl,
					courseName:req.body.courseCtrl,
					collegeName:req.body.collegeCtrl,
					specialization:req.body.specializationCtrl,
					duration:req.body.durationCtrl,
					yearofpassing:req.body.passingCtrl,
					yearofenrollment:req.body.enrollCtrl,
					division:req.body.divisionCtrl,
					academicYear : req.body.acadYearCtrl,
					instruction_medium: req.body.mediumCtrl
				}).then(userUpdated =>{
	
					res.status(200).json({
						message:'data saved successfully!!!'
					})
				})
		})
	}
	
})

router.post('/editaffiliationLetterFormValue',middlewares.getUserInfo,async (req,res)=>{
	models.Affiliation_Letter.find({
		where:{
			user_id : req.User.id,
			education :req.body.education

		}

	}).then(user =>{

			user.update({
				studentName:req.body.nameCtrl,
				courseName:req.body.courseCtrl,
				collegeName:req.body.collegeCtrl,
				specialization:req.body.specializationCtrl,
				duration:req.body.durationCtrl,
				yearofpassing:req.body.passingCtrl,
				division:req.body.divisionCtrl,
				academicYear : req.body.acadYearCtrl
			}).then(userUpdated =>{
				res.status(200).json({
					message:'data saved successfully!!!'
				})
			})



	})
})


router.get('/post_applicationdata',middlewares.getUserInfo,async(req,res)=>{
	console.log('post_applicationdata');
	var email = req.query.email;
	var applicationData = [];
	models.Application.getAllApplicationsDetails(email).then(function(applications){
		applications.forEach(application=>{
			var status ;
			if(application.transcriptRequiredMail == true){
				status = 'On Hold'
			}else{
				status = application.status
			}
			applicationData.push({
				app_id : application.id,
				tracker : application.tracker,
				status : status,
				notes : application.notes
			})
		})
		res.json({
			status : 200,
			data : applicationData
		})
	})
})


router.get('/post_applicationdata_byApp_id',middlewares.getUserInfo,async(req,res)=>{
	console.log('post_applicationdata_byApp_id');
	var email = req.query.app_id;
	var applicationData = [];
	models.Application.find({
		where :{
			id  : email,
			[Op.or]:[{
				source_from:'guattestation',
			 },
			 {
				source_from:'gumoi',
			 }]
		}
	}).then(function(applications){
			var status ;
			if(applications.transcriptRequiredMail == true){
				status = 'On Hold'
			}else{
				status = applications.status
			}
			applicationData.push({
				app_id : applications.id,
				tracker : applications.tracker,
				status : status,
				notes : applications.notes
			})

		res.json({
			status : 200,
			data : applicationData
		})
	})
})
router.get('/Pre_applicationdata',middlewares.getUserInfo,async(req,res)=>{
	console.log('Pre_applicationdata');
	// var userId= '51033';
	var Predata = [];

	models.User.find({
		where  :{
			email  : req.query.email
		}
	}).then(function(user) {
		userId =  user.id

	models.Applied_For_Details.find({
		where  :{
			user_id : userId,
			source : 'guattestation'
		}
	}).then(function(applied_fordetails) {
			if(applied_fordetails){

				if(applied_fordetails.applying_for == 'Bachelors'){
					models.userMarkList.find({
						where  : {
							user_id  : userId,
							type : 'Bachelors',
							app_id : null,source : 'guattestation'
						}
					}).then(function (userdetails) {
							if(userdetails){
									models.UserMarklist_Upload.findAll({
										where  : {
											user_id :  userId,
											education_type :  'Bachelors',
											app_id : null,source : 'guattestation'
										}
									}).then(function (usermarklistupload_details) {

										if(usermarklistupload_details.length > 0){
											if(applied_fordetails.instructionalField == true){
												console.log('trueeee');
												models.InstructionalDetails.findAll({
													where  :{
														userId :  userId
													}
												}).then(function (instructionaldetails){
													if(instructionaldetails.length > 0){
														console.log('length <o ');
														Predata.push({
															message : 'You Have Filled your Instructional Details - 4th Step',
															data : instructionaldetails
														})
													}else{
														console.log('length 00 ');

														Predata.push({
															message : 'You Have Not Filled your Instructional Details - 4th Step'
														})
													}
												})

											}
											if(applied_fordetails.educationalDetails == true){
												console.log('educational');
												models.User_Transcript.findAll({
													where  :{
														user_id :  userId,source : 'guattestation' 
													}
												}).then(function (educationaldetails){
													if(educationaldetails.length > 0){
														Predata.push({
															message : 'You have Filled your Transcript Details - 4th Step',
															data : educationaldetails
														})
													}else{
														console.log('seerere');
														Predata.push({
															message : 'You have Not Filled your Transcript Details - 4th Step'
														})
													}

												})


											}
											 if(applied_fordetails.curriculum == true){
												models.User_Curriculum.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (curriculumdetails){
													if(curriculumdetails.length > 0){
														Predata.push({
															message : 'You have Filled your Curriculum Details - 4th Step',
															data : curriculumdetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your Curriculum Details - 4th Step'
														})
													}
												})

											}
											 if(applied_fordetails.gradToPer == true){
												models.GradeToPercentageLetter.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (gardetoperdetails){
													if(gardetoperdetails.length > 0){
														Predata.push({
															message : 'You have Filled your GradeToPercentage Details - 4th Step',
															data : gardetoperdetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your GradeToPercentage Details - 4th Step'
														})
													}
												})

												}
											 if(applied_fordetails.affiliation == true){
												models.Affiliation_Letter.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (affiliationdetails){
													if(affiliationdetails.length > 0){
														Predata.push({
															message : 'You have Filled your Affiliation Details - 4th Step',
															data : affiliationdetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your Affiliation Details - 4th Step'
														})
													}
												})

												}
											 if(applied_fordetails. CompetencyLetter == true){
												models.competency_letter.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (competencydetails){
													if(competencydetails.length > 0){
														Predata.push({
															message : 'You have Filled your CompetencyLetter Details - 4th Step',
															data : competencydetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your CompetencyLetter Details - 4th Step'
														})
													}
												})

												}
											 if(applied_fordetails.LetterforNameChange == true){
												models.Letterfor_NameChange.findAll({
													where :{
														user_id : userId
													}
												}).then(function (letterfornamechange) {
														if(letterfornamechange.length > 0){
															Predata.push({
																message : 'You have Filled your LetterForNameChange Details - 4th Step',
																data : letterfornamechange
															})
														}else{
															Predata.push({
																message : 'You have Not Filled your LetterForNameChange Details - 4th Step',
															})
														}

												})

												}

											models.Institution_details.findAll({
												where : {
													user_id :  userId,
													app_id : null,source : 'guattestation'
												}
											}).then(function(purposedetails) {
													if(purposedetails.length > 0){
														Predata.push({
															message : 'You have Filled Your Purpose',
															data : purposedetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled Your Purpose',
															// data : letterfornamechange
														})
													}
											})

											setTimeout(()=>{
											res.json({
												data : Predata
											})
										},3000)


										}else{
										Predata.push({
											message : 'You have Not Filled Your Marksheets-3rd step'
										})
										}




								})

							}else{
								Predata.push({
									message : 'You Have Not Filled your College Information-2nd step'
								})
							}


						})

				}if(applied_fordetails.applying_for == 'Masters,Bachelors'){
					models.userMarkList.find({
						where  : {
							user_id  : userId,
							type : 'Masters',
							app_id : null,source : 'guattestation'
						}
					}).then(function (userdetails) {
							if(userdetails){
									models.UserMarklist_Upload.findAll({
										where  : {
											user_id :  userId,
											education_type :  'Masters',
											app_id : null,source : 'guattestation'
										}
									}).then(function (usermarklistupload_details) {

										if(usermarklistupload_details.length > 0){
											if(applied_fordetails.instructionalField == true){
												models.InstructionalDetails.findAll({
													where  :{
														userId :  userId
													}
												}).then(function (instructionaldetails){
													if(instructionaldetails.length > 0){
														Predata.push({
															message : 'You Have Filled your Instructional Details - 4th Step',
															data : instructionaldetails
														})
													}else{

														Predata.push({
															message : 'You Have Not Filled your Instructional Details - 4th Step'
														})
													}
												})

											}
											if(applied_fordetails.educationalDetails == true){
												models.User_Transcript.findAll({
													where  :{
														user_id :  userId,source : 'guattestation' 
													}
												}).then(function (educationaldetails){
													if(educationaldetails.length > 0){
														Predata.push({
															message : 'You have Filled your Transcript Details - 4th Step',
															data : educationaldetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your Transcript Details - 4th Step'
														})
													}

												})


											}
											 if(applied_fordetails.curriculum == true){
												models.User_Curriculum.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (curriculumdetails){
													if(curriculumdetails.length > 0){
														Predata.push({
															message : 'You have Filled your Curriculum Details - 4th Step',
															data : curriculumdetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your Curriculum Details - 4th Step'
														})
													}
												})

											}
											 if(applied_fordetails.gradToPer == true){
												models.GradeToPercentageLetter.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (gardetoperdetails){
													if(gardetoperdetails.length > 0){
														Predata.push({
															message : 'You have Filled your GradeToPercentage Details - 4th Step',
															data : gardetoperdetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your GradeToPercentage Details - 4th Step'
														})
													}
												})

												}
											 if(applied_fordetails.affiliation == true){
												models.Affiliation_Letter.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (affiliationdetails){
													if(affiliationdetails.length > 0){
														Predata.push({
															message : 'You have Filled your Affiliation Details - 4th Step',
															data : affiliationdetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your Affiliation Details - 4th Step'
														})
													}
												})

												}
											 if(applied_fordetails. CompetencyLetter == true){
												models.competency_letter.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (competencydetails){
													if(competencydetails.length > 0){
														Predata.push({
															message : 'You have Filled your CompetencyLetter Details - 4th Step',
															data : competencydetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your CompetencyLetter Details - 4th Step'
														})
													}
												})

												}
											 if(applied_fordetails.LetterforNameChange == true){
												models.Letterfor_NameChange.findAll({
													where :{
														user_id : userId
													}
												}).then(function (letterfornamechange) {
														if(letterfornamechange.length > 0){
															Predata.push({
																message : 'You have Filled your LetterForNameChange Details - 4th Step',
																data : letterfornamechange
															})
														}else{
															Predata.push({
																message : 'You have Not Filled your LetterForNameChange Details - 4th Step',
															})
														}

												})

												}

											models.Institution_details.findAll({
												where : {
													user_id :  userId,
													app_id : null,source : 'guattestation'
												}
											}).then(function(purposedetails) {
													if(purposedetails.length > 0){
														Predata.push({
															message : 'You have Filled Your Purpose',
															data : purposedetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled Your Purpose',
															// data : letterfornamechange
														})
													}
											})

											setTimeout(()=>{
											res.json({
												data : Predata
											})
										},3000)


										}else{
										Predata.push({
											message : 'You have Not Filled Your Marksheets-3rd step'
										})
										}




								})

							}else{
								Predata.push({
									message : 'You Have Not Filled your College Information-2nd step'
								})
							}


						})

				}if(applied_fordetails.applying_for == 'Phd,MastersBachelors'){
					models.userMarkList.find({
						where  : {
							user_id  : userId,
							type : 'Phd',
							app_id : null,source : 'guattestation'
						}
					}).then(function (userdetails) {
							if(userdetails){
									models.UserMarklist_Upload.findAll({
										where  : {
											user_id :  userId,
											education_type :  'Phd',
											app_id : null,source : 'guattestation'
										}
									}).then(function (usermarklistupload_details) {

										if(usermarklistupload_details.length > 0){
											if(applied_fordetails.instructionalField == true){
												models.InstructionalDetails.findAll({
													where  :{
														userId :  userId
													}
												}).then(function (instructionaldetails){
													if(instructionaldetails.length > 0){
														Predata.push({
															message : 'You Have Filled your Instructional Details - 4th Step',
															data : instructionaldetails
														})
													}else{

														Predata.push({
															message : 'You Have Not Filled your Instructional Details - 4th Step'
														})
													}
												})

											}
											if(applied_fordetails.educationalDetails == true){
												models.User_Transcript.findAll({
													where  :{
														user_id :  userId,source : 'guattestation' 
													}
												}).then(function (educationaldetails){
													if(educationaldetails.length > 0){
														Predata.push({
															message : 'You have Filled your Transcript Details - 4th Step',
															data : educationaldetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your Transcript Details - 4th Step'
														})
													}

												})


											}
											 if(applied_fordetails.curriculum == true){
												models.User_Curriculum.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (curriculumdetails){
													if(curriculumdetails.length > 0){
														Predata.push({
															message : 'You have Filled your Curriculum Details - 4th Step',
															data : curriculumdetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your Curriculum Details - 4th Step'
														})
													}
												})

											}
											 if(applied_fordetails.gradToPer == true){
												models.GradeToPercentageLetter.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (gardetoperdetails){
													if(gardetoperdetails.length > 0){
														Predata.push({
															message : 'You have Filled your GradeToPercentage Details - 4th Step',
															data : gardetoperdetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your GradeToPercentage Details - 4th Step'
														})
													}
												})

												}
											 if(applied_fordetails.affiliation == true){
												models.Affiliation_Letter.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (affiliationdetails){
													if(affiliationdetails.length > 0){
														Predata.push({
															message : 'You have Filled your Affiliation Details - 4th Step',
															data : affiliationdetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your Affiliation Details - 4th Step'
														})
													}
												})

												}
											 if(applied_fordetails. CompetencyLetter == true){
												models.competency_letter.findAll({
													where  :{
														user_id :  userId
													}
												}).then(function (competencydetails){
													if(competencydetails.length > 0){
														Predata.push({
															message : 'You have Filled your CompetencyLetter Details - 4th Step',
															data : competencydetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled your CompetencyLetter Details - 4th Step'
														})
													}
												})

												}
											 if(applied_fordetails.LetterforNameChange == true){
												models.Letterfor_NameChange.findAll({
													where :{
														user_id : userId
													}
												}).then(function (letterfornamechange) {
														if(letterfornamechange.length > 0){
															Predata.push({
																message : 'You have Filled your LetterForNameChange Details - 4th Step',
																data : letterfornamechange
															})
														}else{
															Predata.push({
																message : 'You have Not Filled your LetterForNameChange Details - 4th Step',
															})
														}

												})

												}

											models.Institution_details.findAll({
												where : {
													user_id :  userId,
													app_id : null,source : 'guattestation'
												}
											}).then(function(purposedetails) {
													if(purposedetails.length > 0){
														Predata.push({
															message : 'You have Filled Your Purpose',
															data : purposedetails
														})
													}else{
														Predata.push({
															message : 'You have Not Filled Your Purpose',
															// data : letterfornamechange
														})
													}
											})

											setTimeout(()=>{
											res.json({
												data : Predata
											})
										},3000)


										}else{
										Predata.push({
											message : 'You have Not Filled Your Marksheets-3rd step'
										})
										}




								})

							}else{
								Predata.push({
									message : 'You Have Not Filled your College Information-2nd step'
								})
							}


						})

				}
			}else{
					Predata.push({
						message : 'Applied Details not filled (1st step)'
					})
			}


	})
})

})



router.post('/setPaymentIssueDetails',middlewares.getUserInfo, async (req, res) => {
    console.log('setPaymentIssueDetails')
    var data = req.body.data
    var source = req.body.source
    var userId = req.User.id
    var studentData = [];
    var attachment = {};
    var updatedetails;

    models.paymenterror_details.findOne({
        where: {
            user_id: userId,
            // order_id: req.body.data.orderId,
			// [Op.or]:[{
			// 	source:'guattestation',
			// 						 },
			// 						 {
			// 							source:'gumoi',
			// 						 }]

        }
    }).then(function (userdata) {
        if (userdata == null) {
            res.json({
                status: 400
            })
        } else {
            models.paymenterror_details.update(
                {
                    email: req.body.data.emailId,
                    date: req.body.data.paymentDate ? moment(new Date(req.body.data.paymentDate)).format('DD/MM/YYYY') : "",
                    transaction_id: req.body.data.transactionId,
                    order_id: req.body.data.orderId,
                    bank_refno: req.body.data.bankRefNo,
                    amount: req.body.data.amount,
                    note: req.body.data.note,
                    selectissuetype: req.body.data.Pattern,
					tracker  : 'inprocess'
                }, {
                where: {
                    user_id: userId,
                    // order_id: req.body.data.orderId

                }
			}).then(async function (studentdetails) {
                if (studentdetails) {
					getpaymenterrorDetails  = await functions.paymentError(req.body.data.orderId, userId , 'guattestation');
					if(getpaymenterrorDetails){
						var file_location = constant.FILE_LOCATION + "public/upload/Payment_Acknowledgement/" + userId + '/' + userdata.file_name;
						var base64String = fs.readFileSync(file_location).toString("base64");
						attachment = {
							content: base64String,
							filename: studentdetails.file_name,
							type: 'application/pdf',
							disposition: 'attachment',
							contentId: 'mytext',
						}
	
						studentData.push({
							studentdetails: getpaymenterrorDetails,
							attachment: attachment
						})
						request.post(constant.BASE_URL_SENDGRID + 'Paymenterror_toAdmin', {
							json: {
								studentData: studentData,
								source: 'guattestation',
								attachment :  attachment,
								source : 'GU-Attestation'
							}
						}, function (error, response, body) {
							if (response) {
								res.json({
									status: 200,
									studentData: studentData
								})
							} else {
								res.json({
									status: 400
								})
							}
						})
					}
                   

                } else {
                    res.json({
                        status: 400
                    })
                }
            })
		
        }

    })



})

router.get('/getPaymentIssueDetails',middlewares.getUserInfo,async(req,res)=>{
	console.log('/getPaymentIssueDetails');
	var filename = [];
	models.paymenterror_details.findAll({
		where: {
			user_id: req.User.id
		}
	}).then(function (getallDetails) {
		if (getallDetails.length > 0) {
			filename.push({
				filePath: (getallDetails[0].file_name) ? constant + "/upload/Payment_Acknowledgement/" + req.User.id + "/" + getallDetails[0].file_name : null,
				filename: (getallDetails[0].file_name) ? constant + "/upload/Payment_Acknowledgement/" + req.User.id + "/" + getallDetails[0].file_name : null,

			})
			var extension = filename[0].filename.substring(filename[0].filename.lastIndexOf('.') + 1);
			if (extension != 'pfd') {
				imageType = 'image'
			} else {
				imageType = 'pdf'
			}
			res.json({
				status: 200,
				data: getallDetails,
				fileName: filename,
				extension: imageType
			})
		} else {
			res.json({
				status: 400,
				// data  : getallDetails
			})
		}
	})
})
// router.get('/checkDegree',middlewares.getUserInfo,async(req,res)=>{
// 	console.log("/checkDegreee");
// 	var bach_Data=[];
// 	var mast_Data=[];
// 	var phd_Data=[];

// 	models.Applied_For_Details.findAll({
// 		where : {
// 			user_id :  req.User.id,
// 			app_id : null
// 		}
// 	}).then(function (appl){
// 		console.log("appl[0].applying_for "+ appl[0].applying_for );
// 		if(appl[0].applying_for == 'Bachelors'){
// 			models.userMarkList.findAll({
// 				where  :{
// 					user_id : req.User.id,
// 					// app_id :null
// 				}
// 			}).then(function (bachdata){
// 				bach_Data.push({
// 					value  :'bach'
// 				})
// 				res.json({
// 					status : 200,
// 					bach_Data : bach_Data,
// 					mast_Data : mast_Data,
// 					phd_Data : phd_Data
// 				})
// 			})

// 		}else if(appl[0].applying_for == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where  :{
// 					user_id : req.User.id,
// 					// app_id :null,
// 					type : 'Bachelors'
// 				}
// 			}).then(function (bachdata){
// 				bach_Data.push({
// 					value  :'bach'
// 				})
// 			models.userMarkList.findAll({
// 				where  :{
// 					user_id : req.User.id,
// 					// app_id :null,
// 					type : 'Masters'
// 				}
// 			}).then(function (mastdata) {
// 				mast_Data.push({
// 					value  :'mast'
// 				})

// 				res.json({
// 					status : 200,
// 					bach_Data : bach_Data,
// 					mast_Data : mast_Data,
// 					// phd_Data : phd_Data
// 				})
// 				console.log("bach_Dat1"+ JSON.stringify(bach_Data));
// 				console.log("mast_Data2"+ JSON.stringify(mast_Data));
// 			})


// 			})

// 		}else if(appl[0].applying_for == 'Phd,Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where  :{
// 					user_id : req.User.id,
// 					// app_id :'null',
// 					type : 'Phd'
// 				}
// 			}).then(function (bachdata){
// 				console.log("innnn");
// 				phd_Data.push({
// 					value  :'phd'
// 				})
// 				console.log("phd_Data"+ phd_Data);
// 				res.json({
// 					status : 200,
// 					bach_Data : bach_Data,
// 					mast_Data : mast_Data,
// 					phd_Data : phd_Data
// 				})
// 			})

// 		}

// 		console.log("bach_Data"+bach_Data);
// 		console.log("mast_Data"+mast_Data);
// 		console.log("phd_Data"+phd_Data);

// 	})

// })

router.get('/checkDegree',middlewares.getUserInfo,async(req,res)=>{
	console.log("/checkDegreee");
	var bach_Data=[];
	var mast_Data=[];
	var phd_Data=[];

	models.Applied_For_Details.findAll({
		where : {
			user_id :  req.User.id,
			app_id : null,
			source : 'guattestation'
		}
	}).then(function (appl){
		console.log("appl[0].applying_for "+ appl[0].applying_for );
		if(appl[0].applying_for == 'Bachelors'){
			models.userMarkList.findAll({
				where  :{
					user_id : req.User.id,source : 'guattestation'
					// app_id :null
				}
			}).then(function (bachdata){
				bach_Data.push({
					value  :'bach'
				})
				res.json({
					status : 200,
					bach_Data : bach_Data,
					mast_Data : null,
					phd_Data : null
				})
			})

		}else if(appl[0].applying_for == 'Masters,Bachelors'){
			models.userMarkList.findAll({
				where  :{
					user_id : req.User.id,
					// app_id :null,
					type : 'Bachelors',source : 'guattestation'
				}
			}).then(function (bachdata){
				bach_Data.push({
					value  :'bach'
				})
			models.userMarkList.findAll({
				where  :{
					user_id : req.User.id,
					// app_id :null,
					type : 'Masters',source : 'guattestation'
				}
			}).then(function (mastdata) {
				mast_Data.push({
					value  :'mast'
				})

				phd_Data.push({
					value  :'null'
				})
				res.json({
					status : 200,
					bach_Data : bach_Data,
					mast_Data : mast_Data,
					 phd_Data : phd_Data
				})
				console.log("bach_Dat1"+ JSON.stringify(bach_Data));
				console.log("mast_Data2"+ JSON.stringify(mast_Data));
			})


			})

		}else if(appl[0].applying_for == 'Phd,Masters,Bachelors'){
			models.userMarkList.findAll({
				where  :{
					user_id : req.User.id,
					// app_id :'null',
					type : 'Phd',source : 'guattestation'
				}
			}).then(function (bachdata){
				console.log("innnn");
				phd_Data.push({
					value  :'phd'
				})
				bach_Data.push({
					value  :''
				})
				mast_Data.push({
					value  :''
				})
				console.log("phd_Data"+ JSON.stringify(phd_Data));
				res.json({
					status : 200,
					 bach_Data : bach_Data,
					 mast_Data : mast_Data,
					phd_Data : phd_Data
				})
			})

		}if(appl[0].applying_for == 'Masters'){
			models.userMarkList.findAll({
				where  :{
					user_id : req.User.id,source : 'guattestation'
					// app_id :null
				}
			}).then(function (bachdata){
				mast_Data.push({
					value  :'mast'
				})
				bach_Data.push({
					value  :''
				})
				phd_Data.push({
					value  :''
				})
				res.json({
					status : 200,
					mast_Data : mast_Data,
					bach_Data : bach_Data,
					phd_Data : phd_Data
				})
			})

		}

		console.log("bach_Data"+bach_Data);
		console.log("mast_Data"+mast_Data);
		console.log("phd_Data"+phd_Data);

	})

})
router.get('/geterror_msg',middlewares.getUserInfo,async(req,res)=>{
	console.log('geterror_msg');
	var userId= req.User.id;
	var Predata = [];


	models.Applied_For_Details.findAll({
		where  :{
			user_id :  userId,
			app_id : null,
			source : 'guattestation'
		}
	}).then(function (userdetails) {

	if(req.query.value == 2){
		console.log("userdetails[0].applying_for" +userdetails[0].applying_for);
		if(userdetails[0].applying_for == 'Bachelors'){
			models.userMarkList.findAll({
				where : {
					user_id :  userId,
					type : 'Bachelors',
					app_id : null,source : 'guattestation'
				}
			}).then(function (usermarklist) {
					if(usermarklist.length > 0){
							Predata.push({
								user : 'uploaded'
							})
					}else{
						Predata.push({
							user : 'Kindly Fill Your Bachelors College Details'
						})
					}


			})
		}
		if(userdetails[0].applying_for == 'Masters,Bachelors'){
			models.userMarkList.findAll({
					where : {
						user_id :  userId,
						type : 'Masters',
						app_id : null,source : 'guattestation'
					}
				}).then(function (usermarklist) {
						if(usermarklist.length > 0){
								Predata.push({
									user : 'uploaded'
								})
						}else{
							Predata.push({
								user : 'Kindly Fill Your Masters College Details'
							})
						}
	
	
				})
				models.userMarkList.findAll({
					where : {
						user_id :  userId,
						type : 'Bachelors',
						app_id : null,source : 'guattestation'
					}
				}).then(function (usermarklist) {
						if(usermarklist.length > 0){
								Predata.push({
									user : 'uploaded'
								})
						}else{
							Predata.push({
								user : 'Kindly Fill Your Bachelors College Details'
							})
						}
	
	
				})
				
		
		}
		if(userdetails[0].applying_for == 'Phd'){
			models.userMarkList.findAll({
				where : {
					user_id :  userId,
					type : 'Masters',
					app_id : null,source : 'guattestation'
				}
			}).then(function (usermarklist) {
					if(usermarklist.length > 0){
							Predata.push({
								user : 'uploaded'
							})
					}else{
						Predata.push({
							user : 'Kindly Fill Your Masters College Details'
						})
					}


			})
			models.userMarkList.findAll({
				where : {
					user_id :  userId,
					type : 'Bachelors',
					app_id : null,source : 'guattestation'
				}
			}).then(function (usermarklist) {
					if(usermarklist.length > 0){
							Predata.push({
								user : 'uploaded'
							})
					}else{
						Predata.push({
							user : 'Kindly Fill Your Bachelors College Details'
						})
					}


			})
			models.userMarkList.findAll({
				where : {
					user_id :  userId,
					type : 'Phd',
					app_id : null,source : 'guattestation'
				}
			}).then(function (usermarklist) {
					if(usermarklist.length > 0){
							Predata.push({
								user : 'uploaded'
							})
					}else{
						Predata.push({
							user : 'Kindly Fill Your Phd College Details'
						})
					}


			})
		}
		if(userdetails[0].applying_for == 'Phd,Masters,Bachelors'){
			models.userMarkList.findAll({
				where : {
					user_id :  userId,
					type : 'Phd',
					app_id : null,source : 'guattestation'
				}
			}).then(function (usermarklist) {
					if(usermarklist.length > 0){
							Predata.push({
								user : 'uploaded'
							})
					}else{
						Predata.push({
							user : 'Kindly Fill Your Phd College Details'
						})
					}


			})
		}
		if(userdetails[0].applying_for == 'Masters'){
			models.userMarkList.findAll({
				where : {
					user_id :  userId,
					type : 'Masters',
					app_id : null,source : 'guattestation'
				}
			}).then(function (usermarklist) {
					if(usermarklist.length > 0){
							Predata.push({
								user : 'uploaded'
							})
					}else{
						Predata.push({
							user : 'Kindly Fill Your Masters College Details'
						})
					}


			})
		}

	}
	else if(req.query.value == 3){
		if(userdetails[0].applying_for == 'Bachelors'){
		models.UserMarklist_Upload.findAll({
			where  :{
				user_id : userId,
				education_type :'Bachelors',
				app_id : null,source : 'guattestation'
			}
		}).then(function(marksheet) {
			if(marksheet.length > 0 ){

				Predata.push({
					user : 'uploaded'
				})
			}else{

				Predata.push({
					user : 'Kindly Upload Your Bachelors Marksheet'
				})
			}
		})
	}
	if(userdetails[0].applying_for == 'Masters,Bachelors'){

		models.userMarkList.find({
			where  :{
				user_id : userId,
				type : 'Masters',
				 app_id : null,source : 'guattestation'
			}
		}).then(function (marklistdata) {
			models.UserMarklist_Upload.findAll({
				where  :{
					user_id : userId,
					education_type : marklistdata.type,source : 'guattestation'
				}
			}).then(function(marksheet) {
				if(marksheet.length > 0 ){

					Predata.push({
						user : 'uploaded'
					})
				}else{

					Predata.push({
						user : 'Kindly Upload Your Masters Marksheet'
					})
				}
			})
		})
		models.UserMarklist_Upload.findAll({
			where  :{
				user_id : userId,
				education_type :'Bachelors',
				app_id : null,source : 'guattestation'
			}
		}).then(function(marksheet) {
			if(marksheet.length > 0 ){

				// Predata.push({
				// 	user : 'uploaded'
				// })
			}else{

				Predata.push({
					user : 'Kindly Upload Your Bachelors Marksheet'
				})
			}
		})

	}
	if(userdetails[0].applying_for == 'Phd,Masters,Bachelors'){

		models.userMarkList.find({
			where  :{
				user_id : userId,
				type : 'Phd',
				app_id : null,source : 'guattestation'
			}
		}).then(function (marklistdata) {

		models.UserMarklist_Upload.findAll({
			where  :{
				user_id : userId,
				education_type : marklistdata.type,source : 'guattestation'
			}
		}).then(function(marksheet) {
			if(marksheet.length > 0 ){

				Predata.push({
					user : 'uploaded'
				})
			}else{

				Predata.push({
					user : 'Kindly Upload Your Phd Marksheet'
				})
			}
		})
		})
	}
	if(userdetails[0].applying_for == 'Masters'){

		models.userMarkList.find({
			where  :{
				user_id : userId,
				type : 'Masters',
				app_id : null,source : 'guattestation'
			}
		}).then(function (marklistdata) {

		models.UserMarklist_Upload.findAll({
			where  :{
				user_id : userId,
				education_type : marklistdata.type,source : 'guattestation'
			}
		}).then(function(marksheet) {
			if(marksheet.length > 0 ){

				Predata.push({
					user : 'uploaded'
				})
			}else{

				Predata.push({
					user : 'Kindly Upload Your Masters Marksheet'
				})
			}
		})
		})
	}
	if(userdetails[0].applying_for == 'Phd'){

		models.userMarkList.find({
			where  :{
				user_id : userId,
				type : 'Phd',
				app_id : null,source : 'guattestation'
			}
		}).then(function (marklistdata) {

		models.UserMarklist_Upload.findAll({
			where  :{
				user_id : userId,
				education_type : marklistdata.type,source : 'guattestation'
			}
		}).then(function(marksheet) {
			if(marksheet.length > 0 ){

				Predata.push({
					user : 'uploaded'
				})
			}else{

				Predata.push({
					user : 'Kindly Upload Your Phd Marksheet'
				})
			}
		})
		})
		models.UserMarklist_Upload.findAll({
			where  :{
				user_id : userId,
				education_type :'Masters',
				app_id : null,source : 'guattestation'
			}
		}).then(function(marksheet) {
			if(marksheet.length > 0 ){

				// Predata.push({
				// 	user : 'uploaded'
				// })
			}else{

				Predata.push({
					user : 'Kindly Upload Your Masters Marksheet'
				})
			}
		})
		models.UserMarklist_Upload.findAll({
			where  :{
				user_id : userId,
				education_type :'Bachelors',
				app_id : null,source : 'guattestation'
			}
		}).then(function(marksheet) {
			if(marksheet.length > 0 ){

				// Predata.push({
				// 	user : 'uploaded'
				// })
			}else{

				Predata.push({
					user : 'Kindly Upload Your Bachelors Marksheet'
				})
			}
		})
	}
	}
	else if(req.query.value == 4){

		models.Applied_For_Details.findAll({
			where : {
				user_id : userId,
				source : 'guattestation'
			}
		}).then(async function (applied_for) {
			if(applied_for[0].applying_for == 'Bachelors'){
				if(applied_for[0].instructionalField == true){
					models.InstructionalDetails.findAll({
						where  :{
							userId :  userId,
							education :{
								[Op.like]: "%Bachelors%"

							},
							app_id : null
						}
					}).then(function (instructionaldetails){
						if(instructionaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{

							Predata.push({
								user : 'Kindly Upload Bachelors Instructional Details'
							})
						}
					})

				}
				if(applied_for[0].educationalDetails == true){
					console.log('applied_for[0].attestedFor' + applied_for[0].attestedfor);
					if(applied_for[0].attestedfor.includes('degree')){
						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Bachelors%"
	
								},
								type :{
									[Op.like]: "%degree%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Upload Your Bachelors Degree'
								})
							}
	
						})
					}
					
					if(applied_for[0].attestedfor.includes('transcript')){
					models.User_Transcript.findAll({
						where  :{
							user_id :  userId,
							type :{
								[Op.like]: "%Bachelors%"

							},
							type :{
								[Op.like]: "%transcripts%"

							},
							app_id : null,source : 'guattestation' 
						}
					}).then(function (educationaldetails){
						if(educationaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{
							Predata.push({
									user : 'Upload Your Bachelors Transcript'
							})
						}

					})
				}
					
				}


				
				
			}
			if(applied_for[0].applying_for == 'Masters,Bachelors'){
				if(applied_for[0].instructionalField == true){
					models.InstructionalDetails.findAll({
						where  :{
							userId :  userId,
							education :{
								[Op.like]: "%Masters%"

							},
							app_id : null
						}
					}).then(function (instructionaldetails){
						if(instructionaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{

							Predata.push({
								user : 'Kindly Fill Masters Instructional Details'
							})
						}
					})
					models.InstructionalDetails.findAll({
						where  :{
							userId :  userId,
							education :{
								[Op.like]: "%Bachelors%"

							},
							app_id : null
						}
					}).then(function (instructionaldetails){
						if(instructionaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{

							Predata.push({
								user : 'Kindly Fill Bachelors Instructional Details'
							})
						}
					})
				}
				if(applied_for[0].educationalDetails == true){
					if(applied_for[0].attestedfor.includes('transcript')){
					models.User_Transcript.findAll({
						where  :{
							user_id :  userId,
							type :{
								[Op.like]: "%Masters%"

							},
							type :{
								[Op.like]: "%transcript%"

							},
							app_id  : null ,source : 'guattestation' 
						}
					}).then(function (educationaldetails){
						if(educationaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{
							Predata.push({
									user : 'Kindly Upload Your Masters Transcript'
							})
						}

					})
					models.User_Transcript.findAll({
						where  :{
							user_id :  userId,
							type :{
								[Op.like]: "%Bachelors%"

							},
							type :{
								[Op.like]: "%transcript%"

							},
							app_id  : null ,source : 'guattestation' 
						}
					}).then(function (educationaldetails){
						if(educationaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{
							Predata.push({
									user : 'Kindly Upload Your Bachelors Transcript'
							})
						}

					})
				}
				if(applied_for[0].attestedfor.includes('degree')){
					models.User_Transcript.findAll({
						where  :{
							user_id :  userId,
							type :{
								[Op.like]: "%Bachelors%"

							},
							type :{
								[Op.like]: "%degree%"

							},
							app_id  : null ,source : 'guattestation' 
						}
					}).then(function (educationaldetails){
						if(educationaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{
							Predata.push({
									user : 'Kindly Upload Your Bachelors Degree'
							})
						}

					})
					models.User_Transcript.findAll({
						where  :{
							user_id :  userId,
							type :{
								[Op.like]: "%Masters%"

							},
							type :{
								[Op.like]: "%degree%"

							},
							app_id  : null ,source : 'guattestation' 
						}
					}).then(function (educationaldetails){
						if(educationaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{
							Predata.push({
									user : 'Kindly Upload Your Masters Degree'
							})
						}

					})
				}
				}
			}
			if(applied_for[0].applying_for == 'Phd,Masters,Bachelors'){
				if(applied_for[0].instructionalField == true){
					models.InstructionalDetails.findAll({
						where  :{
							userId :  userId,
							app_id : null
						}
					}).then(function (instructionaldetails){
						if(instructionaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{

							Predata.push({
								user : 'Kindly Fill Phd Instructional Details'
							})
						}
					})

				}
				if(applied_for[0].educationalDetails == true){
					models.User_Transcript.findAll({
						where  :{
							user_id :  userId,
							type :{
								[Op.like]: "%Phd%"

							},
							app_id  : null,source : 'guattestation' 
						}
					}).then(function (educationaldetails){
						if(educationaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{
							Predata.push({
									user : 'Kindly Upload Your Phd Documents'
							})
						}

					})
				}
				
			}
			if(applied_for[0].applying_for == 'Masters'){
				if(applied_for[0].instructionalField == true){
					models.InstructionalDetails.findAll({
						where  :{
							userId :  userId,
							education :{
								[Op.like]: "%Masters%"

							},
							
							app_id : null
						}
					}).then(function (instructionaldetails){
						if(instructionaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{

							Predata.push({
								user : 'Kindly Fill Masters Instructional Details'
							})
						}
					})

				}
				if(applied_for[0].educationalDetails == true){
					if(applied_for[0].attestedfor.includes('transcript')){
						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Masters%"
	
								},
								type :{
									[Op.like]: "%transcript%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Kindly Upload Your Masters Transcript'
								})
							}
	
						})
					}
					if(applied_for[0].attestedfor.includes('degree')){
						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Masters%"
	
								},
								type :{
									[Op.like]: "%degree%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Kindly Upload Your Masters Degrees'
								})
							}
	
						})
	
					}
					

					
					
				}
			
			}
			if(applied_for[0].applying_for == 'Phd'){
				if(applied_for[0].instructionalField == true){
					models.InstructionalDetails.findAll({
						where  :{
							userId :  userId,
							app_id : null
						}
					}).then(function (instructionaldetails){
						if(instructionaldetails.length > 0){
							Predata.push({
								user  :  'uploaded'
							})
						}else{

							Predata.push({
								user : 'Kindly Fill Phd Instructional Details'
							})
						}
					})

				}
				if(applied_for[0].educationalDetails == true){
					if(applied_for[0].attestedfor.includes('transcript')){
						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Phd%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Kindly Upload Your Phd Documents'
								})
							}
	
						})
						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Masters%"
	
								},
								type :{
									[Op.like]: "%transcript%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Kindly Upload Your Masters Transcript'
								})
							}
	
						})
						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Bachelors%"
	
								},
								type :{
									[Op.like]: "%transcript%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Kindly Upload Your Bachelors Transcript'
								})
							}
	
						})
					}
					
					if(applied_for[0].attestedfor.includes('degree')){
						
						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Phd%"
	
								},
								type :{
									[Op.like]: "%degree%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Kindly Upload Your Phd Documents'
								})
							}
	
						})

						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Masters%"
	
								},
								type :{
									[Op.like]: "%degree%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Kindly Upload Your Masters Degree'
								})
							}
	
						})

						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Bachelors%"
	
								},
								type :{
									[Op.like]: "%degree%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Kindly Upload Your Bachelors Degree'
								})
							}
	
						})
					}
					if(applied_for[0].attestedfor.includes('thesis')){
						
						models.User_Transcript.findAll({
							where  :{
								user_id :  userId,
								type :{
									[Op.like]: "%Phd%"
	
								},
								type :{
									[Op.like]: "%degree%"
	
								},
								app_id : null,source : 'guattestation' 
							}
						}).then(function (educationaldetails){
							if(educationaldetails.length > 0){
								Predata.push({
									user  :  'uploaded'
								})
							}else{
								Predata.push({
										user : 'Kindly Upload Your Phd Documents'
								})
							}
	
						})

						
					}
					
				}
				
			}
			if(applied_for[0].instructionalField == true){
				let bonafied = await functions.getAadhar('guattestation' , 'Bonafied' , userId);
			if(bonafied){
				Predata.push({
					user  :  'uploaded'
				})
			}else{
				Predata.push({
					user : 'Upload Your Bonafied Certificate'
			})
			}	
			}
			let aadhar = await functions.getAadhar('guattestation' , 'Aadhar Card' , userId);
			if(aadhar){
				Predata.push({
					user  :  'uploaded'
				})
			}else{
				Predata.push({
					user : 'Upload Your Aadhar Card'
			})
			}
		})
	}
})
	setTimeout(()=>{
		console.log("Predata" + JSON.stringify(Predata));
		res.json({
			data : Predata
		})
	},3000)
})

router.get('/getNamechangeLetter',middlewares.getUserInfo,async(req,res)=>{
	console.log('/getNamechangeLetter')

	var value;
	models.Letterfor_NameChange.findAll({
		where  :{
			user_id : req.User.id
		}
	}).then(function (namechangedata) {
		console.log('namechange',namechangedata[0].file_name)
		value = namechangedata[0].file_name
		if(namechangedata){
				res.json({
					status : 200,
					value  : value
				})
		}else{
			res.json({
				status : 400
				// data  : namechangedata.file_name
			})
		}

	})
})
router.post('/getEnrollmentData',middlewares.getUserInfo,async(req,res)=>{
	console.log('getEnrollmentData');
	let enrollmentData = req.body.enrollment;
	var userId = req.User.id;
	enrollment_number = [];
	var data_attestation;
	var data_migration;
	var data_verification;
	var data_pdc_convo;
	let searchdata;
	let insertdata;
	fetcheddata =[];
	var source;
	if(enrollmentData != ''){
		require('async').eachSeries(enrollmentData,  async function(enroll, callback){
			source = enroll.source
			searchdata =  await functions.Fetchdata(userId,enroll.source,enroll.enroll);
		   callback();
		   }, async function(){
			if(searchdata){
				insertdata = await functions.createFetchdata(enrollmentData,searchdata,userId,source);
				if(insertdata){
					res.json({
						status:  200
					})
				}else{
					res.json({
						status:  400
					})
				}
			}
  		});
	}else{
		data_attestation = await functions.getEnrollmentData(userId,'attestation');
		if(data_attestation.length  > 0){
			res.json({
				status:  400
			})
		}else{
			data_pdc_convo = await functions.getEnrollmentData(userId,'');
			if(data_pdc_convo.length > 0){
				data_pdc_convo.forEach(function(no){
					enrollment_number.push({
									"enroll_no" :  no.enrollmentNo
								})
					})
			}else{
				// data_migration = await functions.getEnrollmentData(userId,'migration');
				// if(data_migration.length > 0){
				// 	data_migration.forEach(function (no){
				// 		enrollment_number.push({
				// 			"enroll_no" :  no.enrollment_number
				// 		})
				// 	})
				// }
			}

			res.json({
				status:  200,
				data : enrollment_number
			})
		}
	}
	

	
})
router.post('/getpulldata',middlewares.getUserInfo,async(req,res)=>{
    console.log("GetPulldata" +JSON.stringify(req.body.value));
        var userid=req.User.id
        var value= [] = req.body.value ;
        var type=req.body.type;
        var applied_for;
        var exam_pattern;
        var stream;
        var duration;
        var applied_for_degree='';
        var fetch_doc;
        var FetchedData = [];
		var applying_for;
		value.forEach(function (coursename){
				applied_for_degree = applied_for_degree + ' '+coursename.coursename
		})

		        if(applied_for_degree.includes('Master') && applied_for_degree.includes('Bachelor') && applied_for_degree.includes('Phd')){
					applying_for = 'Phd'
				}
				else if((applied_for_degree.includes('Master') )&& (applied_for_degree.includes('Bachelor'))){
					applying_for = 'Masters,Bachelors'
				}
				else if(applied_for_degree.includes('Master')){
					applying_for = 'Masters'
				}
				else if(applied_for_degree.includes('Bachelor') ){
					applying_for = 'Bachelors'
				}
				else if(applied_for_degree.includes('Phd') ){
					applying_for = 'Phd,Masters,Bachelors'
				}

        var  frompdc = await functions.checkEdu_Details(value , 'pdc' , req.User.id ,applying_for);
		console.log("frompdcfrompdc"+ frompdc);
})
router.get('/getAdminLetterForNameChange',(req,res)=>{
	console.log("getAdminLetterForNameChange");
	var data = [];
	models.Letterfor_NameChange.findAll(
		{
			where:{
				user_id:req.query.userId
			}
		}
	).then(user=>{
		user.forEach(function (userdata){
			console.log("userdata" +  JSON.stringify(userdata));
			data.push({
				firstnameaspermarksheet :userdata.firstnameaspermarksheet,
				fathersnameaspermarksheet :userdata.fathersnameaspermarksheet,
				mothersnameaspermarksheet :userdata.mothersnameaspermarksheet,
				lastnameaspermarksheet :userdata.lastnameaspermarksheet,
				firstnameasperpassport :userdata.firstnameasperpassport,
				fathersnameasperpassport :userdata.fathersnameasperpassport,
				lastnameasperpassport :userdata.lastnameasperpassport,
				reference_no :userdata.reference_no
				})
			})
		if(data){
			res.json({
				data :  data
			})
		}else{
			res.json({
			data  : null
			})
		}
	})
})
router.get('/getAttesedFor',middlewares.getUserInfo,(req,res)=>{
	console.log("getAttesedFor");
	var data = [];
	models.Applied_For_Details.findAll({
		where : {
			user_id  :  req.User.id,
			app_id  : null,
			source : 'guattestation'
		}
	}).then(function (applied){
			if(applied.length  > 0){
						res.json({
							status : 200,
							data : applied[0].attestedfor
						})
			}else{
					res.json({
						status : 400
					})
			}
	})
})

router.post('/courier_excel_sheets',upload.single('file'), function(req, res) {
    console.log("courier_excel_sheetscourier_excel_sheetscourier_excel_sheets");
	var errors = [];
	var result;	
	var image;
	var excel_sheet_path={};
	console.log("------------10------------");
	if(req.file){
		console.log("------------12------------");
		image = req.file.originalname;
		//console.log('image=============>'+image);
		var imgArr= req.file.originalname.split('.');
		//console.log('imgArr=============>'+imgArr);
		var fileExtension = imgArr[imgArr.length - 1].trim();
		//console.log('fileExtension=============>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'+fileExtension);
		var current_day = moment(new Date()).tz(constant.SYSTEM_TIMEZONE).format('YYYY-MM-DD');
		//console.log("current_day------------------------------------>"+current_day);
		var img_path=constant.FILE_LOCATION + 'public/upload/courier_excel_sheets/'+current_day;
		if(fileExtension != 'xlsx'){
			res.json({
				status: 400,
				message: 'Please upload xlsx formatted excel file !',
				data: ''
			});
		}else{
			if (!fs.existsSync(img_path)){
				fs.mkdirSync(img_path);
			}
			console.log("----------19-------------");
			fs.readFile(req.file.path, function (err, data) {
				console.log("----------20-------------");
				var newPath = img_path+'/'+image;
				console.log("----------21-------------");
				fs.writeFile(newPath, data, function (err) {
				console.log("----------22-------------");
				//delete the temporary file
				fs.unlink(req.file.path,function (err2, data2) {if(err2){}else{}});
					if(err) {
						// console.log(err);
						result = 'error_occured';
					}else {
						console.log("------------23------------");

						var sheet_name = img_path + "/"+image;
						//console.log("sheet_na--->"+sheet_name);
						var workbook = XLSX.readFile(sheet_name);
						var sheet_name_list = workbook.SheetNames;
						var arrayOfObject =[];
						sheet_name_list.forEach(function(y) {
							var worksheet = workbook.Sheets[y];
							var headers = {};
							for(z in worksheet) {
								if(z[0] === '!') continue;
								//parse out the column, row, and value
								var tt = 0;
								for (var i = 0; i < z.length; i++) {
									if (!isNaN(z[i])) {
										tt = i;
										break;
									}
								};
								var col = z.substring(0,tt);
								var row = parseInt(z.substring(tt));
								var value = worksheet[z].v;
						
								//store header names
								if(row == 1 && value) {
									headers[col] = value;
									continue;
								}
						
								if(!arrayOfObject[row]) arrayOfObject[row]={};
								arrayOfObject[row][headers[col]] = value;
							}
							//drop those first two rows which are empty
							arrayOfObject.shift();
							arrayOfObject.shift();
							//console.log(arrayOfObject);
						});
						//console.log(XLSX.utils.sheet_to_json(workbook.Sheets[sheet_name_list[0]]))
						
						models.Courier_Sheets_Data.destroy({ truncate: { cascade: true } });
						setTimeout(function(){ 
						// 	//console.log("result===>"+JSON.stringify(result))
							console.log("arrayOfObject---------------------> " + arrayOfObject.length);
							async.eachSeries(arrayOfObject, function(arrayOfObjectss,callback) {
								models.Courier_Sheets_Data.create({
									barcode : arrayOfObjectss.Barcode,
									ref : arrayOfObjectss.REF,
									city : arrayOfObjectss.City,
									pincode : arrayOfObjectss.Pincode,
									name : arrayOfObjectss.Name,
									address : arrayOfObjectss.ADD1,
									email : arrayOfObjectss.ADDREMAIL,
									mobile : arrayOfObjectss.ADDRMOBILE,
									sender_mobile : arrayOfObjectss.SENDERMOBILE,
									weight : arrayOfObjectss.Weight,
									application_id : arrayOfObjectss.application_id,
								});
								callback();
							}, function(err){
							   	if(!err) {
									setTimeout(function(){
										models.Courier_Sheets_Data.findAll().then(function(courier_datas){
											courier_datas.forEach(function(courier_data){
												if(courier_data.barcode!='' && courier_data.barcode!=undefined && courier_data.barcode!=null){
															models.User.find({
																where : {
																	email : courier_data.email
																}
															}).then(function(user){
																if(user){
																	models.Application.find({
																		where : {
																			id : courier_data.application_id
																		}
																	}).then(function(app){
																		if(app){
																			var query="Select * from Application where tracking_id = '"+courier_data.barcode+"'"; console.log("query==>",query);
																			connection.query(query,
																				async function(err, student, fields) {
																					// console.log("user==>",user);
																					if(student!='' && student!=undefined){
																						models.Courier_Sheets_Data.find({
																							where:{
																								application_id : app.id
																							}
																						}).then(function(sheet_data){
																							if(sheet_data){
																								sheet_data.update({
																									updated_status : 'Tracking Id Already Exist for Application '+user[0].id
																								})
																							}
																						})
																					}else{
																						if(app.tracker != 'done'){
																							app.update({
																								tracker : 'done',
																								courier_name : 'India Post',
																								tracking_id : courier_data.barcode,
																								courier_date : moment(new Date()).format('YYYY-MM-DD')
																							}).then(function(uca_updated){
																								if(uca_updated){
																									request.post(constant.BASE_URL_SENDGRID + 'courierApplication', {
																										json: {
																											mobile: user.mobile,
																											mobile_country_code: user.mobile_country_code,
																											userName: user.name,
																											surName: user.surname,
																											email: user.email,
																											to: user.email,
																											toName: user.name,
																											courier_name: 'India Post',
																											tracking_id : courier_data.barcode,
																											app_id : uca_updated.id,
																											tracking_link : 'https://www.indiapost.gov.in/_layouts/15/dop.portal.tracking/trackconsignment.aspx'
																										}
																									}, function (error, response, body) {
																										if (error) {
																											models.Courier_Sheets_Data.find({
																												where:{
																													application_id : uca_updated.id
																												}
																											}).then(function(sheet_data){
																												if(sheet_data){
																													sheet_data.update({
																														updated_status : 'Application Updated but error occured while sending tracking email.'
																													})
																												}
																											})
																										}else{
																											models.Courier_Sheets_Data.find({
																												where:{
																													application_id : uca_updated.id
																												}
																											}).then(function(sheet_data){
																												if(sheet_data){
																													sheet_data.update({
																														updated_status : 'OK'
																													})
																												}
																											})
																										}
																									});
																									var data = `Application no ${uca_updated.id} is successfully couriered via India post (Tracking ID: ${uca_updated.tracking_id})`;
																									var created_at = functions.socketnotification('Courier', data, user.id,'student');
																									//fromNow = moment(created_at).fromNow();
																									//req.io.sockets.emit('new_msg',{notification_data: data,created_at : fromNow});
																								}else{
																									models.Application.find({
																										where : {
																											id : courier_data.application_id
																										}
																									}).then(function(app){
																										if(app){
																											models.Courier_Sheets_Data.find({
																												where:{
																													application_id : app.id
																												}
																											}).then(function(sheet_data){
																												if(sheet_data){
																													sheet_data.update({
																														updated_status : 'Application is not updated.'
																													})
																												}
																											})
																										}
																									})
																								}
																							});
																						}

																					}
																		})
																		}else{
																			models.Application.find({
																				where : {
																					id : courier_data.application_id
																				}
																			}).then(function(app){
																				if(app){
																					models.Courier_Sheets_Data.find({
																						where:{
																							application_id : app.id
																						}
																					}).then(function(sheet_data){
																						if(sheet_data){
																							sheet_data.update({
																								updated_status : 'Application not exist.'
																							})
																						}
																					})
																				}
																			})
																		}
																	})
																}else{
																	models.Application.find({
																		where : {
																			id : courier_data.application_id
																		}
																	}).then(function(app){
																		if(app){
																			models.Courier_Sheets_Data.find({
																				where:{
																					application_id : app.id
																				}
																			}).then(function(sheet_data){
																				if(sheet_data){
																					sheet_data.update({
																						updated_status : 'User not exist.'
																					})
																				}
																			})
																		}
																	})
																}
															})
												}else{
													models.Application.find({
														where : {
															id : courier_data.application_id
														}
													}).then(function(app){
														if(app){
															models.Courier_Sheets_Data.find({
																where:{
																	application_id : app.id
																}
															}).then(function(sheet_data){
																if(sheet_data){
																	sheet_data.update({
																		updated_status : 'Barcode is not added.'
																	})
																}
															})
														}
													})
												}
											})
											setTimeout(function(){
												models.Courier_Sheets_Data.findAll().then((data)=>{
													if(data != null || data != undefined){
														var TotalAppdata = [];
														require('async').each(data, function(data, callback) {
															TotalAppdata.push({
																"barcode" : data.barcode,
																"city" : data.city,
																"pincode" : data.pincode,
																"name" : data.name,
																"address" : data.address,
																"email" : data.email,
																"mobile" : data.mobile,
																"sender_mobile" : data.sender_mobile,
																"weight" : data.weight,
																"application_id" : data.application_id,
																"updated_status" : data.updated_status,
															});
															callback();	
														}, function(error, results) {
																
															setTimeout(function(){
																var xls = json2xls(TotalAppdata);
																var file_location = img_path+'/Updated_Courier_Sheet.xlsx';
																fs.writeFileSync(file_location, xls, 'binary');
																var filepath= img_path+'/Updated_Courier_Sheet.xlsx';
																
																res.json({
																	status: 200,
																	data: filepath
																});
																	
															},5000);
														});
													}else{
														res.json({
															status: 400,
														})
													}
												})
											},8000)
										})
									},6000)
					   			}else{
							   		res.json({
										status: 400,
										message: 'Error on server please try again !',
										data: ''
									});
					   			}
							});
						}, 6000);
					}
				});
			});
		}
	}else{
		res.json({
			status: 400,
			message: 'Upload excel file',
			data: ''
		});
	}
});
router.get('/getAmount', middlewares.getUserInfo,middlewares.getUserEducationalInfo, async function(req,res){
	console.log('/getAmount' + req.query.service);
	var user_id = req.User.id;
	var service = req.query.service;
	var amount;
	var appliedFor;
	var Attested_for;
	var transcriptprice = 0;
	var degreeprice = 0;
	var marksheetprice = 0;
	var purposecount = 1;
	var noofcopies = 0;
	appliedFor  = await functions.getAttestedFor(req.User.id); // Applied for marksheet, transcript, degree
	console.log("appliedFor----->"+JSON.stringify(appliedFor))
	Attested_for = appliedFor.attestedfor;
	noofMarksheet = await functions.getCountofMarksheet(req.User.id); // To get count of marksheet
	//console.log("noofMarksheet----->"+JSON.stringify(noofMarksheet))
	noofdegree = await functions.getCountofmarklist(req.User.id); // To get count of degree
	//console.log("noofdegree----->"+JSON.stringify(noofdegree))
	var getpurposeCount = await functions.getPurpose(req.User.id); // To get count of purpose
	purposecount = getpurposeCount.length * purposecount;
	console.log("purposecount===="+purposecount)

	var getpurposeCopiesCount = await functions.getPurposewithcopies(req.User.id); // To get count of purpose who applied for sealed copies
	console.log("getpurposeCopiesCount.length===>"+(getpurposeCopiesCount.length))
	getpurposeCopiesCount.forEach(purposeCopies =>{
		noofcopies = noofcopies + parseInt(purposeCopies.noofcopies) // Added noof copies of each purpose
		console.log("noofcopies====>"+noofcopies);
	})

	sealed_digital = 0;
	instamount = 0 
	console.log("noofcopies== outside==>"+noofcopies);
	
	sealed_digital = 736 * noofcopies;
	console.log("sealed_digital====>"+sealed_digital);


	if(appliedFor.instructionalField == true){
		console.log("3")
		instamount = 436  * noofdegree.length
		if(parseInt(instamount) >= 2660){
			instamount = 2660 //+ sealed_digital
		}else{
			instamount = instamount //+ sealed_digital
		}
		console.log("instamountinstamount" + instamount);
		models.Cart.update(
			{fees  : instamount},
			{where:
				{user_id  : user_id}
			}).then((err,updated)=>{
				if(err){
					console.error(err);
				}
	
				res.json({
					status : 200,
					amount : instamount,
					instructionalField : appliedFor.instructionalField
				})
			})	
	}else{
		console.log("4")
		instamount =  0
		if(Attested_for.includes('marksheet')){
			console.log("5====>"+noofMarksheet.length)
			marksheetprice = 404 * noofMarksheet.length
		}
		if(Attested_for.includes('transcript')){
			console.log("6")
			transcriptprice = 536  * noofdegree.length
		}
		if(Attested_for.includes('degree')){
			console.log("7")
			degreeprice = 454 * noofdegree.length
		}
		console.log("marksheetprice====>"+marksheetprice)
		console.log("transcriptprice====>"+transcriptprice)
		console.log("degreeprice====>"+degreeprice)
		//console.log("sealed_digital====>"+sealed_digital)
		instamount = marksheetprice  + transcriptprice + degreeprice ;
		
		console.log('instamountinstamount' + instamount)
		var final_amount = 0 ;
		if(parseInt(instamount) >= 2660){
			console.log("8")
			// instamount = (2660 * purposecount)  + sealed_digital
			// console.log("instamount >= 2660 ===========> "+instamount)
			getpurposeCount.forEach(purposeCopies =>{
				if(purposeCopies.deliveryType == 'physcial'){
					console.log("final_amount 1=== >"+final_amount)
					final_amount = final_amount + (( 3396 ) * parseInt(purposeCopies.noofcopies))
					console.log("final_amount 2=== >"+final_amount)
				}else{
					console.log("final_amount 3=== >"+final_amount)
					final_amount = final_amount + 2660
					console.log("final_amount 4=== >"+final_amount)
				}
			})
		}else{
			console.log("9")
			// instamount = (instamount * purposecount) + sealed_digital
			console.log("instamount ===========> "+instamount)
			getpurposeCount.forEach(purposeCopies =>{
				if(purposeCopies.deliveryType == 'physcial'){
					console.log("final_amount 1=== >"+final_amount)
					final_amount = final_amount + (( instamount + 736 ) * parseInt(purposeCopies.noofcopies))
					console.log("final_amount 2=== >"+final_amount)
				}else{
					console.log("final_amount 3=== >"+final_amount)
					final_amount = final_amount + instamount
					console.log("final_amount 4=== >"+final_amount)
				}
			})
		}
		console.log("=============final_amount============"+final_amount)
	models.Cart.update(
			{fees  : final_amount},
			{where:
				{user_id  : user_id}
			}).then((err,updated)=>{
				if(err){
					console.error(err);
				}
	
				res.json({
					status : 200,
					amount : final_amount,
					instructionalField : appliedFor.instructionalField
				})
			})	
	}

});

router.post('/checkpreviousdata',middlewares.getUserInfo,async (req,res)=>{ 
	console.log('checkpreviousdata');
	var userId = req.User.id;
	var checkdata = await functions.FetchPreviousData(userId);

	var checkApplied = await functions.FetchPreviousData_notpaidApplied(userId);

	var checkAppliedPaid = await functions.FetchPreviousData_paidApplied(userId);
	var checkdata_notpaid = await functions.FetchPreviousData_notpaid_findOne(userId);
	let previous_appid_details=await functions.previous_appid(userId);
	var differentTrue = false;
	if(previous_appid_details.previous_data == null || previous_appid_details.previous_data == 'null'){
		if(checkAppliedPaid){
			if(checkAppliedPaid.applying_for.includes(checkApplied.applying_for)){
				checkdata.forEach(async function (data){
					var appliedfor_paid = await functions.FetchPreviousData_applied(data.app_id);
					var appliedfor_notpaid = await functions.FetchPreviousData_applied_notPaid(userId);
					var split = appliedfor_notpaid.attestedfor.split(',');
					if(data.faculty == checkdata_notpaid.faculty && data.patteren == checkdata_notpaid.patteren && data.faculty == checkdata_notpaid.faculty){
						
						if(data.faculty == checkdata_notpaid.faculty && data.patteren == checkdata_notpaid.patteren && data.faculty == checkdata_notpaid.faculty && appliedfor_paid.attestedfor == appliedfor_notpaid.attestedfor){
							res.json({
										status : 200,
										data : 'SameType',
										app_id :  appliedfor_paid.app_id
								})
						 }else{
						split.forEach(async function(splitvalue){
								if(data.faculty == checkdata_notpaid.faculty && data.patteren == checkdata_notpaid.patteren && data.faculty == checkdata_notpaid.faculty && appliedfor_paid.attestedfor.includes(splitvalue) ){
									// let previous_appid=await functions.updataed_previous_appid(userId,data.app_id,'DifferentType');
									differentTrue = true
								}
						})
						if(differentTrue == true){
							res.json({
								status : 200,
								data : 'DifferentType',
								app_id :  appliedfor_paid.app_id
						})
						}
						
						 }
					}else{
						res.json({ 
							status: 400
						});
					}	
		})
				}else{
					res.json({ 
						status: 400
					});
				}
		}else{
			res.json({ 
				status: 400
			});
		}
			
		
	}else{
	res.json({
		status: 400
	});
	}

})

router.post('/FetchPreviousData',middlewares.getUserInfo,async (req,res)=>{ 
	console.log('FetchPreviousData');
	var userId = req.User.id;
	var fetch_data = req.body.data;
	var appliedFor_marksheet ;
	var appliedFor_transcript ;
	var fetchapp_id = req.body.app_id ;
	
	// prevous data 
	var checkdata = await functions.Checkdata_previous(userId,fetchapp_id);

	// cuurent data
	var checkdata_notpaid = await functions.FetchPreviousData_notpaid(userId);

	//checking appliedfor details
	let previous_appid_details=await functions.previous_appid(userId);


	if(previous_appid_details.previous_data == null ){

		checkdata.forEach(async function (data){
					var appliedfor_paid = await functions.FetchPreviousData_applied(data.app_id);
					var appliedfor_notpaid = await functions.FetchPreviousData_applied_notPaid(userId);
					var split = appliedfor_notpaid.attestedfor.split(',');
					var getUserMarklistId = await functions.getUserMarklistId(data.type,userId)

						 if(fetch_data == 'SameType'){
							
							// set previous data as sameType
							let previous_appid=await functions.updataed_previous_appid(userId,data.app_id,'SameType');

							if(appliedfor_notpaid.attestedfor.includes('marksheet') || appliedfor_notpaid.attestedfor.includes('newmark') ){
								var same_marksheet_notpaid = await functions.FetchPreviousDocuments_notpaid(userId,'marksheets',data.type);
								var same_marksheet = await functions.FetchPreviousDocuments(data.app_id,'marksheets',data.type);
								if(same_marksheet_notpaid !=  ''){
									same_marksheet.forEach(async function (marksheet){
										if(marksheet.lock_transcript !=  1 && (marksheet.upload_step == 'default' || marksheet.upload_step == 'changed') && (marksheet.verify_doc == true || marksheet.verify_doc == null)){
											// var insertmarksheets = await functions.insertPreviousDocument(marksheet,checkdata_notpaid.id,'marksheets'); // marksheet data and usermarklit id of unpaid
										}else{
											console.log('Marksheets have Errata');
										}
									})
								}else{
									same_marksheet.forEach(async function (marksheet){
										if(marksheet.lock_transcript !=  1 && (marksheet.upload_step == 'default' || marksheet.upload_step == 'changed') && (marksheet.verify_doc == true || marksheet.verify_doc == null)){
											var insertmarksheets = await functions.insertPreviousDocument(marksheet,getUserMarklistId.id,'marksheets'); // marksheet data and usermarklit id of unpaid
										}else{
											console.log('Marksheets have Errata');
										}
									})
								}
								
							}
							if(appliedfor_notpaid.attestedfor.includes('transcript') ){
								var same_transcript_paid = await functions.FetchPreviousDocuments_notpaid(userId,'transcript',null);
								var same_transcript = await functions.FetchPreviousDocuments(data.app_id,'transcript',null);
								if(same_transcript_paid != ''){
									same_transcript_paid.forEach(async function (transcript){
										if(transcript.lock_transcript !=  1 && (transcript.upload_step == 'default' || transcript.upload_step == 'changed')){
											//var inserttranscript = await functions.insertPreviousDocument(transcript,'','transcript'); // transcript data and usermarklit id of unpaid
										}else{
											console.log('Transcript have Errata');
										}
									})
								}else{
									same_transcript.forEach(async function (transcript){
										if(transcript.lock_transcript !=  1 && (transcript.upload_step == 'default' || transcript.upload_step == 'changed')){
											var inserttranscript = await functions.insertPreviousDocument(transcript,'','transcript'); // transcript data and usermarklit id of unpaid
										}else{
											console.log('Transcript have Errata');
										}
									})
								}
							}
							if(appliedfor_notpaid.attestedfor.includes('degree') ){
								var same_degree_paid = await functions.FetchPreviousDocuments_notpaid(userId,'degree',null);
								var same_degree = await functions.FetchPreviousDocuments(data.app_id,'degree',null);
							if(same_degree_paid != ''){
								same_degree_paid.forEach(async function (degree){
									if(degree.lock_transcript !=  1 && (degree.upload_step == 'default' || degree.upload_step == 'changed')){
										//var insertdegree = await functions.insertPreviousDocument(degree,'','degree'); // degree data and usermarklit id of unpaid
									}else{
										console.log('Degree have Errata');
									}
								})
							}else{
								same_degree.forEach(async function (degree){
									if(degree.lock_transcript !=  1 && (degree.upload_step == 'default' || degree.upload_step == 'changed')){
										var insertdegree = await functions.insertPreviousDocument(degree,'','degree'); // degree data and usermarklit id of unpaid
									}else{
										console.log('Degree have Errata');
									}
								})
							}
							}
							if(appliedfor_notpaid.attestedfor.includes('thesis') ){
								var same_thesis_paid = await functions.FetchPreviousDocuments_notpaid(userId,'thesis',null);
								var same_thesis = await functions.FetchPreviousDocuments(data.app_id,'thesis',null);
								if(same_thesis_paid != ''){
									same_thesis_paid.forEach(async function (thesis){
										if(thesis.lock_transcript !=  1 && (thesis.upload_step == 'default' || thesis.upload_step == 'changed')){
											var insertthesis = await functions.insertPreviousDocument(thesis,'','thesis'); // thesis data and usermarklit id of unpaid
										}else{
											console.log('Thesis have Errata');
										}
									})
								}else{
									same_thesis.forEach(async function (thesis){
										if(thesis.lock_transcript !=  1 && (thesis.upload_step == 'default' || thesis.upload_step == 'changed')){
											var insertthesis = await functions.insertPreviousDocument(thesis,'','thesis'); // thesis data and usermarklit id of unpaid
										}else{
											console.log('Thesis have Errata');
										}
									})
								}
							}
							var getEmail_doc =  await functions.getEmailedDocs(data.app_id);
							getEmail_doc.forEach(async function (Email_doc){
									var insertmarksheets = await functions.insert_EmailDocs(Email_doc,data.app_id); // Insert Email Docs entry for same applied
							})

							res.json({
								status : 200
							})
						 }else if (fetch_data == 'DifferentType'){
						split.forEach(async function(splitvalue){
									if (appliedfor_paid.attestedfor.includes(splitvalue)){
								let previous_appid=await functions.updataed_previous_appid(userId,data.app_id,'DifferentType');								
							if(splitvalue.includes('marksheet') || splitvalue.includes('newmark') || splitvalue.includes('degree') || splitvalue.includes('transcript') ){
								var same_marksheet_notpaid = await functions.FetchPreviousDocuments_notpaid(userId,'marksheets',data.type);
								var same_marksheet = await functions.FetchPreviousDocuments(data.app_id,'marksheets',data.type);
								if(same_marksheet_notpaid !=  ''){
									same_marksheet_notpaid.forEach(async function (marksheet){
										if(marksheet.lock_transcript !=  1 (marksheet.upload_step == 'default' || marksheet.upload_step == 'changed')){
											
											// var insertmarksheets = await functions.insertPreviousDocument(marksheet,checkdata_notpaid.id,'marksheets'); // marksheet data and usermarklit id of unpaid
										}else{
											console.log('Marksheets have Errata');
										}
									})
								}else{
									same_marksheet.forEach(async function (marksheet){
										if(marksheet.lock_transcript !=  1 && (marksheet.upload_step == 'default' || marksheet.upload_step == 'changed')){
											var insertmarksheets = await functions.insertPreviousDocument(marksheet,getUserMarklistId.id,'marksheets'); // marksheet data and usermarklit id of unpaid
											
										}else{
											console.log('Marksheets have Errata');
										}
									})
								}
								
								
							}
							if(splitvalue.includes('transcript') ){
								var same_transcript_paid = await functions.FetchPreviousDocuments_notpaid(userId,'transcript' ,null);
								var same_transcript = await functions.FetchPreviousDocuments(data.app_id,'transcript',null);
	
								if(same_transcript_paid !=  ''){
									same_transcript_paid.forEach(async function (transcript){
										if(transcript.lock_transcript !=  1 && (transcript.upload_step == 'default' || transcript.upload_step == 'changed')){
											
											//var inserttranscript = await functions.insertPreviousDocument(transcript,'','transcript'); // transcript data and usermarklit id of unpaid
										}else{
											console.log('Transcript have Errata');
										}
									})
								}else{
									same_transcript.forEach(async function (transcript){
										if(transcript.lock_transcript !=  1 && (transcript.upload_step == 'default' || transcript.upload_step == 'changed')){
											var inserttranscript = await functions.insertPreviousDocument(transcript,'','transcript'); // transcript data and usermarklit id of unpaid
											
										}else{
											console.log('Transcript have Errata');
										}
									})
								}
								
							}
							if(splitvalue.includes('degree') ){
								var same_degree_paid = await functions.FetchPreviousDocuments_notpaid(userId,'degree',null);
								var same_degree = await functions.FetchPreviousDocuments(data.app_id,'degree',null);
								if(same_degree_paid	 !=  ''){
									console.log("same_degree_paid");
									same_degree_paid.forEach(async function (degree){
										if(degree.lock_transcript !=  1 && (degree.upload_step == 'default' || degree.upload_step == 'changed')){
											//var insertdegree = await functions.insertPreviousDocument(degree,'','degree'); // degree data and usermarklit id of unpaid
										}else{
											console.log('Degree have Errata');
										}
									})
								}else{
									same_degree.forEach(async function (degree){
										if(degree.lock_transcript !=  1 && (degree.upload_step == 'default' || degree.upload_step == 'changed')){
											var insertdegree = await functions.insertPreviousDocument(degree,'','degree'); // degree data and usermarklit id of unpaid
											appliedFor = appliedFor + 'marksheets'
										}else{
											console.log('Degree have Errata');
										}
									})
								}
							}
							if(splitvalue.includes('thesis') ){
								var same_thesis_paid = await functions.FetchPreviousDocuments_notpaid(userId,'thesis',null);
								var same_thesis = await functions.FetchPreviousDocuments(data.app_id,'thesis',null);
								if(same_thesis_paid != ''){
									same_thesis_paid.forEach(async function (thesis){
										if(thesis.lock_transcript !=  1 && (thesis.upload_step == 'default' || thesis.upload_step == 'changed')){
											//var insertthesis = await functions.insertPreviousDocument(thesis,'','thesis'); // thesis data and usermarklit id of unpaid
										}else{
											console.log('Thesis have Errata');
										}
									})
								}else{
									same_thesis.forEach(async function (thesis){
										if(thesis.lock_transcript !=  1 && (thesis.upload_step == 'default' || thesis.upload_step == 'changed')){
											var insertthesis = await functions.insertPreviousDocument(thesis,'','thesis'); // thesis data and usermarklit id of unpaid
											appliedFor = appliedFor + 'marksheets'
										}else{
											console.log('Thesis have Errata');
										}
									})
								}
								
							}
					}else{
										console.log('IN ELSEEEEE')
					}
				})
				// let previous_appid=await functions.updataed_previousApplied(userId,data.app_id,appliedFor_transcript);
						res.json({
							status : 200
						})
						 }
		})
	}else{
		res.json({
			status : 400
		})
	}

})
// router.post('/settonull',middlewares.getUserInfo,async (req,res)=>{
// 	console.log('settonull',req.User.id);
// 	var userId =req.User.id;
// 	let previous_data_null=await functions.previous_empty(userId);
// 	console.log("previous_data_null",previous_data_null);
// })

module.exports = router;
